
;; Function void* operator new(std::size_t, void*) (_ZnwmPv, funcdef_no=429, decl_uid=11056, cgraph_uid=172, symbol_order=173)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 3(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void* operator new(std::size_t, void*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 38{22d,16u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 D.11054+0 S8 A64])
        (reg:DI 5 di [ D.11054 ])) /usr/include/c++/5/new:130 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ D.11054 ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/include/c++/5/new:130 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 10 2 (set (reg/f:DI 87 [ D.48662 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/include/c++/5/new:130 89 {*movdi_internal}
     (nil))
(insn 10 7 14 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48662 ])) /usr/include/c++/5/new:130 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48662 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/new:130 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/new:130 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::__cxx11::string std::__cxx11::to_string(int) (_ZNSt7__cxx119to_stringEi, funcdef_no=786, decl_uid=17275, cgraph_uid=188, symbol_order=189)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best DREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 29(l0): point = 0
   Insn 26(l0): point = 3
   Insn 25(l0): point = 6
   Insn 24(l0): point = 8
   Insn 23(l0): point = 10
   Insn 17(l0): point = 12
   Insn 16(l0): point = 14
   Insn 15(l0): point = 16
   Insn 14(l0): point = 18
   Insn 13(l0): point = 20
   Insn 12(l0): point = 22
   Insn 11(l0): point = 24
   Insn 10(l0): point = 26
   Insn 9(l0): point = 28
   Insn 8(l0): point = 30
   Insn 5(l0): point = 32
   Insn 3(l0): point = 34
   Insn 2(l0): point = 36
 a0(r88): [17..28]
 a1(r87): [21..30]
 a2(r89): [25..26]
Compressing live ranges: from 39 to 2 - 5%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
 a2(r89): [0..1]
  regions=1, blocks=5, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     4    0:r88  l0     0    2:r89  l0     1
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::__cxx11::string std::__cxx11::to_string(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={4d,1u} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={4d,1u} r18={2d} r19={2d} r20={1d,11u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={4d,1u} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 213{175d,38u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) /usr/include/c++/5/bits/basic_string.h:5300 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 __val+0 S4 A32])
        (reg:SI 4 si [ __val ])) /usr/include/c++/5/bits/basic_string.h:5300 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __val ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48664+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:5300 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg:DI 87 [ D.48663 ])
        (const_int 16 [0x10])) /usr/include/c++/5/bits/basic_string.h:5301 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:5301 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 __val+0 S4 A32])) /usr/include/c++/5/bits/basic_string.h:5301 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 37 r8)
        (reg:SI 89)) /usr/include/c++/5/bits/basic_string.h:5301 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fdf7b94a6c0 *.LC0>)) /usr/include/c++/5/bits/basic_string.h:5301 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (reg:DI 87 [ D.48663 ])) /usr/include/c++/5/bits/basic_string.h:5301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.48663 ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("vsnprintf") [flags 0x41]  <function_decl 0x7fdf7e1555e8 vsnprintf>)) /usr/include/c++/5/bits/basic_string.h:5301 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 88)) /usr/include/c++/5/bits/basic_string.h:5301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 16 15 17 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:5301 93 {*movqi_internal}
     (nil))
(call_insn 17 16 23 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z") [flags 0x3]  <function_decl 0x7fdf7d0f90d8 __to_xstring>) [0 __to_xstring S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:5301 660 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_DEAD (reg:QI 0 ax)
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (nil))))))))
(insn 23 17 24 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:5301 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48664+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/basic_string.h:5301 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 25 24 31 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) /usr/include/c++/5/bits/basic_string.h:5301 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 31 25 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 26 31 27 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:5301 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 27 26 28)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 28 27 32 4 5 "" [1 uses])
(note 32 28 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 32 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:5301 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::__cxx11::string std::__cxx11::to_string(long long int) (_ZNSt7__cxx119to_stringEx, funcdef_no=790, decl_uid=17357, cgraph_uid=192, symbol_order=193)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best DREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 29(l0): point = 0
   Insn 26(l0): point = 3
   Insn 25(l0): point = 6
   Insn 24(l0): point = 8
   Insn 23(l0): point = 10
   Insn 17(l0): point = 12
   Insn 16(l0): point = 14
   Insn 15(l0): point = 16
   Insn 14(l0): point = 18
   Insn 13(l0): point = 20
   Insn 12(l0): point = 22
   Insn 11(l0): point = 24
   Insn 10(l0): point = 26
   Insn 9(l0): point = 28
   Insn 8(l0): point = 30
   Insn 5(l0): point = 32
   Insn 3(l0): point = 34
   Insn 2(l0): point = 36
 a0(r88): [17..28]
 a1(r87): [21..30]
 a2(r89): [25..26]
Compressing live ranges: from 39 to 2 - 5%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
 a2(r89): [0..1]
  regions=1, blocks=5, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     4    0:r88  l0     0    2:r89  l0     1
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::__cxx11::string std::__cxx11::to_string(long long int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={4d,1u} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={4d,1u} r18={2d} r19={2d} r20={1d,11u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={4d,1u} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 213{175d,38u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) /usr/include/c++/5/bits/basic_string.h:5322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __val+0 S8 A64])
        (reg:DI 4 si [ __val ])) /usr/include/c++/5/bits/basic_string.h:5322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __val ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48671+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:5322 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg:DI 87 [ D.48670 ])
        (const_int 32 [0x20])) /usr/include/c++/5/bits/basic_string.h:5324 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:5324 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __val+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:5324 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 37 r8)
        (reg:DI 89)) /usr/include/c++/5/bits/basic_string.h:5324 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fdf7b94acf0 *.LC1>)) /usr/include/c++/5/bits/basic_string.h:5324 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (reg:DI 87 [ D.48670 ])) /usr/include/c++/5/bits/basic_string.h:5324 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.48670 ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("vsnprintf") [flags 0x41]  <function_decl 0x7fdf7e1555e8 vsnprintf>)) /usr/include/c++/5/bits/basic_string.h:5324 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 88)) /usr/include/c++/5/bits/basic_string.h:5324 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 16 15 17 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:5324 93 {*movqi_internal}
     (nil))
(call_insn 17 16 23 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z") [flags 0x3]  <function_decl 0x7fdf7d0f90d8 __to_xstring>) [0 __to_xstring S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:5324 660 {*call}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_DEAD (reg:QI 0 ax)
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 23 17 24 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:5324 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48671+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/basic_string.h:5324 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 25 24 31 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) /usr/include/c++/5/bits/basic_string.h:5324 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 31 25 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 26 31 27 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:5324 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 27 26 28)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 28 27 32 4 8 "" [1 uses])
(note 32 28 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 32 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:5324 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) (_ZStorSt13_Ios_OpenmodeS_, funcdef_no=985, decl_uid=24342, cgraph_uid=322, symbol_order=323)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 3(l0): point = 10
   Insn 2(l0): point = 12
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [7..8]
Compressing live ranges: from 15 to 6 - 40%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r20={1d,6u,2e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 44{24d,18u,2e} in 7{7 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __a+0 S4 A32])
        (reg:SI 5 di [ __a ])) /usr/include/c++/5/bits/ios_base.h:130 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __b+0 S4 A32])
        (reg:SI 4 si [ __b ])) /usr/include/c++/5/bits/ios_base.h:130 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __a+0 S4 A32])) /usr/include/c++/5/bits/ios_base.h:130 90 {*movsi_internal}
     (nil))
(insn 8 7 11 2 (parallel [
            (set (reg:SI 87 [ D.48675 ])
                (ior:SI (reg:SI 89)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 __b+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/ios_base.h:130 399 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ior:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 __a+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 __b+0 S4 A32]))
                (nil)))))
(insn 11 8 15 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.48675 ])) /usr/include/c++/5/bits/ios_base.h:130 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.48675 ])
        (nil)))
(insn 15 11 16 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) /usr/include/c++/5/bits/ios_base.h:130 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ <retval> ])
        (nil)))
(insn 16 15 0 2 (use (reg/i:SI 0 ax)) /usr/include/c++/5/bits/ios_base.h:130 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function IntCode::IntCode(std::__cxx11::string, bool) (_ZN7IntCodeC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb, funcdef_no=1886, decl_uid=43143, cgraph_uid=505, symbol_order=507)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 25 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 105.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 123.
verify found no changes in insn with uid = 130.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 144.
verify found no changes in insn with uid = 152.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 163.
verify found no changes in insn with uid = 166.
verify found no changes in insn with uid = 171.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r141,l0) best AREG, allocno GENERAL_REGS
    r140: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r140,l0) best DIREG, allocno GENERAL_REGS
    r138: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r138,l0) best AREG, allocno GENERAL_REGS
    r137: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r137,l0) best DIREG, allocno GENERAL_REGS
    r134: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r134,l0) best AREG, allocno GENERAL_REGS
    r133: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r133,l0) best AREG, allocno GENERAL_REGS
    r132: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r132,l0) best DIREG, allocno GENERAL_REGS
    r131: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r131,l0) best DIREG, allocno GENERAL_REGS
    r130: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r130,l0) best DIREG, allocno GENERAL_REGS
    r129: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r129,l0) best DIREG, allocno GENERAL_REGS
    r128: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r128,l0) best DIREG, allocno GENERAL_REGS
    r127: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r127,l0) best SIREG, allocno GENERAL_REGS
    r126: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r126,l0) best DIREG, allocno GENERAL_REGS
    r125: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r125,l0) best DREG, allocno GENERAL_REGS
    r124: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r124,l0) best DIREG, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r118,l0) best SIREG, allocno GENERAL_REGS
    r117: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r117,l0) best SIREG, allocno GENERAL_REGS
    r116: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r116,l0) best SIREG, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r114,l0) best SIREG, allocno GENERAL_REGS
    r113: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r113,l0) best DIREG, allocno GENERAL_REGS
    r112: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r112,l0) best SIREG, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r110,l0) best SIREG, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r106,l0) best DREG, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r102,l0) best DIREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r91,l0) best AD_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a5(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a7(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a10(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a12(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a14(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a16(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a18(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a19(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a21(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a23(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a25(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a26(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a27(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a28(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a29(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a30(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a31(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a32(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a33(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a34(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a35(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:34 INT_SSE_REGS:26 ALL_REGS:516 MEM:8
  a36(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a37(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a38(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a39(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a40(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a41(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a42(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a44(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r91,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a46(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a49(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a50(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a51(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a52(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a53(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a55(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5

   Insn 171(l0): point = 1
   Insn 166(l0): point = 4
   Insn 165(l0): point = 6
   Insn 164(l0): point = 8
   Insn 163(l0): point = 10
   Insn 162(l0): point = 12
   Insn 161(l0): point = 14
   Insn 159(l0): point = 16
   Insn 158(l0): point = 18
   Insn 157(l0): point = 20
   Insn 156(l0): point = 22
   Insn 155(l0): point = 24
   Insn 153(l0): point = 26
   Insn 152(l0): point = 28
   Insn 151(l0): point = 30
   Insn 150(l0): point = 32
   Insn 149(l0): point = 34
   Insn 181(l0): point = 37
   Insn 213(l0): point = 40
   Insn 145(l0): point = 42
   Insn 144(l0): point = 44
   Insn 143(l0): point = 46
   Insn 142(l0): point = 48
   Insn 187(l0): point = 51
   Insn 211(l0): point = 54
   Insn 138(l0): point = 56
   Insn 137(l0): point = 58
   Insn 136(l0): point = 60
   Insn 135(l0): point = 62
   Insn 193(l0): point = 65
   Insn 209(l0): point = 68
   Insn 131(l0): point = 70
   Insn 130(l0): point = 72
   Insn 129(l0): point = 74
   Insn 128(l0): point = 76
   Insn 199(l0): point = 78
   Insn 207(l0): point = 81
   Insn 170(l0): point = 84
   Insn 169(l0): point = 86
   Insn 202(l0): point = 88
   Insn 123(l0): point = 90
   Insn 122(l0): point = 92
   Insn 121(l0): point = 94
   Insn 118(l0): point = 97
   Insn 117(l0): point = 99
   Insn 116(l0): point = 101
   Insn 115(l0): point = 103
   Insn 114(l0): point = 105
   Insn 113(l0): point = 107
   Insn 111(l0): point = 110
   Insn 110(l0): point = 112
   Insn 109(l0): point = 114
   Insn 108(l0): point = 116
   Insn 107(l0): point = 118
   Insn 105(l0): point = 121
   Insn 104(l0): point = 123
   Insn 103(l0): point = 125
   Insn 102(l0): point = 127
   Insn 101(l0): point = 129
   Insn 100(l0): point = 131
   Insn 99(l0): point = 133
   Insn 98(l0): point = 135
   Insn 97(l0): point = 137
   Insn 95(l0): point = 140
   Insn 94(l0): point = 142
   Insn 93(l0): point = 144
   Insn 92(l0): point = 146
   Insn 91(l0): point = 148
   Insn 90(l0): point = 150
   Insn 89(l0): point = 152
   Insn 88(l0): point = 154
   Insn 87(l0): point = 156
   Insn 86(l0): point = 158
   Insn 85(l0): point = 160
   Insn 83(l0): point = 163
   Insn 82(l0): point = 165
   Insn 81(l0): point = 167
   Insn 80(l0): point = 169
   Insn 79(l0): point = 171
   Insn 47(l0): point = 174
   Insn 46(l0): point = 176
   Insn 45(l0): point = 178
   Insn 44(l0): point = 180
   Insn 43(l0): point = 182
   Insn 203(l0): point = 185
   Insn 72(l0): point = 188
   Insn 71(l0): point = 190
   Insn 70(l0): point = 192
   Insn 69(l0): point = 194
   Insn 68(l0): point = 196
   Insn 66(l0): point = 199
   Insn 65(l0): point = 201
   Insn 63(l0): point = 203
   Insn 62(l0): point = 206
   Insn 61(l0): point = 208
   Insn 60(l0): point = 210
   Insn 59(l0): point = 212
   Insn 58(l0): point = 214
   Insn 57(l0): point = 216
   Insn 56(l0): point = 218
   Insn 54(l0): point = 220
   Insn 53(l0): point = 223
   Insn 52(l0): point = 225
   Insn 51(l0): point = 227
   Insn 50(l0): point = 229
   Insn 48(l0): point = 231
   Insn 41(l0): point = 234
   Insn 40(l0): point = 236
   Insn 39(l0): point = 238
   Insn 38(l0): point = 240
   Insn 37(l0): point = 242
   Insn 36(l0): point = 244
   Insn 35(l0): point = 246
   Insn 34(l0): point = 248
   Insn 33(l0): point = 250
   Insn 32(l0): point = 252
   Insn 31(l0): point = 254
   Insn 30(l0): point = 256
   Insn 29(l0): point = 258
   Insn 28(l0): point = 260
   Insn 27(l0): point = 262
   Insn 26(l0): point = 264
   Insn 25(l0): point = 266
   Insn 24(l0): point = 268
   Insn 23(l0): point = 270
   Insn 22(l0): point = 272
   Insn 21(l0): point = 274
   Insn 20(l0): point = 276
   Insn 19(l0): point = 278
   Insn 18(l0): point = 280
   Insn 17(l0): point = 282
   Insn 16(l0): point = 284
   Insn 15(l0): point = 286
   Insn 14(l0): point = 288
   Insn 13(l0): point = 290
   Insn 12(l0): point = 292
   Insn 11(l0): point = 294
   Insn 10(l0): point = 296
   Insn 7(l0): point = 298
   Insn 5(l0): point = 300
   Insn 4(l0): point = 302
   Insn 3(l0): point = 304
   Insn 2(l0): point = 306
 a0(r105): [7..8]
 a1(r147): [9..16]
 a2(r104): [13..14]
 a3(r144): [17..26]
 a4(r103): [21..22]
 a5(r146): [23..24]
 a6(r141): [40..42] [27..37]
 a7(r102): [31..32]
 a8(r143): [33..34]
 a9(r138): [54..56] [43..51]
 a10(r140): [47..48]
 a11(r133): [68..70] [57..65]
 a12(r137): [61..62]
 a13(r134): [71..78]
 a14(r132): [75..76]
 a15(r131): [93..94]
 a16(r130): [100..101]
 a17(r129): [106..107]
 a18(r128): [113..116]
 a19(r127): [115..118]
 a20(r126): [124..129]
 a21(r125): [128..131]
 a22(r124): [136..137]
 a23(r122): [145..148]
 a24(r123): [145..146]
 a25(r121): [151..152]
 a26(r120): [155..156]
 a27(r119): [159..160]
 a28(r101): [166..171]
 a29(r118): [168..169]
 a30(r100): [191..196]
 a31(r117): [193..194]
 a32(r99): [202..203]
 a33(r98): [209..210]
 a34(r97): [211..212]
 a35(r93): [211..220]
 a36(r96): [213..214]
 a37(r95): [215..216]
 a38(r94): [217..218]
 a39(r92): [226..231]
 a40(r116): [228..229]
 a41(r115): [177..180]
 a42(r114): [179..182]
 a43(r113): [237..242]
 a44(r112): [239..244]
 a45(r91): [241..246]
 a46(r111): [257..258]
 a47(r90): [263..268]
 a48(r110): [265..266]
 a49(r109): [273..274]
 a50(r89): [279..280]
 a51(r108): [281..282]
 a52(r88): [287..288]
 a53(r107): [289..290]
 a54(r87): [295..296]
 a55(r106): [301..302]
Compressing live ranges: from 309 to 84 - 27%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r147): [2..3]
 a2(r104): [2..3]
 a3(r144): [4..7]
 a4(r103): [4..5]
 a5(r146): [6..7]
 a6(r141): [8..13]
 a7(r102): [8..9]
 a8(r143): [10..11]
 a9(r138): [14..17]
 a10(r140): [14..15]
 a11(r133): [18..21]
 a12(r137): [18..19]
 a13(r134): [22..23]
 a14(r132): [22..23]
 a15(r131): [24..25]
 a16(r130): [26..27]
 a17(r129): [28..29]
 a18(r128): [30..31]
 a19(r127): [30..31]
 a20(r126): [32..33]
 a21(r125): [32..33]
 a22(r124): [34..35]
 a23(r122): [36..37]
 a24(r123): [36..37]
 a25(r121): [38..39]
 a26(r120): [40..41]
 a27(r119): [42..43]
 a28(r101): [44..45]
 a29(r118): [44..45]
 a30(r100): [48..49]
 a31(r117): [48..49]
 a32(r99): [50..51]
 a33(r98): [52..53]
 a34(r97): [54..55]
 a35(r93): [54..61]
 a36(r96): [56..57]
 a37(r95): [58..59]
 a38(r94): [60..61]
 a39(r92): [62..63]
 a40(r116): [62..63]
 a41(r115): [46..47]
 a42(r114): [46..47]
 a43(r113): [64..65]
 a44(r112): [64..65]
 a45(r91): [64..65]
 a46(r111): [66..67]
 a47(r90): [68..69]
 a48(r110): [68..69]
 a49(r109): [70..71]
 a50(r89): [72..73]
 a51(r108): [74..75]
 a52(r88): [76..77]
 a53(r107): [78..79]
 a54(r87): [80..81]
 a55(r106): [82..83]
  regions=1, blocks=25, points=84
    allocnos=56 (big 0), copies=0, conflicts=0, ranges=56
Disposition:
   54:r87  l0     0   52:r88  l0     0   50:r89  l0     0   47:r90  l0     0
   45:r91  l0     1   39:r92  l0     1   35:r93  l0     0   38:r94  l0     1
   37:r95  l0     1   36:r96  l0     1   34:r97  l0     1   33:r98  l0     0
   32:r99  l0     0   30:r100 l0     0   28:r101 l0     0    7:r102 l0     0
    4:r103 l0     0    2:r104 l0     0    0:r105 l0     0   55:r106 l0     0
   53:r107 l0     0   51:r108 l0     0   49:r109 l0     0   48:r110 l0     1
   46:r111 l0     0   44:r112 l0     2   43:r113 l0     0   42:r114 l0     1
   41:r115 l0     0   40:r116 l0     0   31:r117 l0     1   29:r118 l0     1
   27:r119 l0     0   26:r120 l0     0   25:r121 l0     0   23:r122 l0     0
   24:r123 l0     1   22:r124 l0     0   21:r125 l0     1   20:r126 l0     0
   19:r127 l0     1   18:r128 l0     0   17:r129 l0     0   16:r130 l0     0
   15:r131 l0     0   14:r132 l0     0   11:r133 l0     3   13:r134 l0     3
   12:r137 l0     0    9:r138 l0     3   10:r140 l0     0    6:r141 l0     3
    8:r143 l0     0    3:r144 l0     3    5:r146 l0     0    1:r147 l0     3
+++Costs: overall -41, reg -41, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


IntCode::IntCode(std::__cxx11::string, bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={32d,8u} r1={34d,3u} r2={28d} r4={37d,10u} r5={54d,27u} r6={1d,24u} r7={1d,51u} r8={27d} r9={27d} r10={27d} r11={27d} r12={27d} r13={27d} r14={27d} r15={27d} r16={1d,23u} r17={56d,3u} r18={27d} r19={27d} r20={1d,65u,4e} r21={28d} r22={28d} r23={28d} r24={28d} r25={28d} r26={28d} r27={28d} r28={28d} r29={27d} r30={27d} r31={27d} r32={27d} r33={27d} r34={27d} r35={27d} r36={27d} r37={28d} r38={28d} r39={27d} r40={27d} r45={27d} r46={27d} r47={27d} r48={27d} r49={27d} r50={27d} r51={27d} r52={27d} r53={27d} r54={27d} r55={27d} r56={27d} r57={27d} r58={27d} r59={27d} r60={27d} r61={27d} r62={27d} r63={27d} r64={27d} r65={27d} r66={27d} r67={27d} r68={27d} r69={27d} r70={27d} r71={27d} r72={27d} r73={27d} r74={27d} r75={27d} r76={27d} r77={27d} r78={27d} r79={27d} r80={27d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={2d,1u} r134={1d,1u} r137={1d,1u} r138={2d,1u} r140={1d,1u} r141={2d,1u} r143={1d,1u} r144={1d,1u} r146={1d,1u} r147={1d,1u} 
;;    total ref usage 2371{2096d,271u,4e} in 143{116 regular + 27 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 106 107 108 109 110 111 112 113
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:4 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [0 input+0 S8 A64])
        (reg:DI 4 si [ input ])) intcode.cpp:4 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ input ])
        (nil)))
(insn 4 3 5 2 (set (reg:SI 106)
        (reg:SI 1 dx [ debug ])) intcode.cpp:4 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ debug ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -500 [0xfffffffffffffe0c])) [0 debug+0 S1 A32])
        (subreg:QI (reg:SI 106) 0)) intcode.cpp:4 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 106)
        (nil)))
(note 6 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48687+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:4 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 7 11 2 (set (reg/f:DI 87 [ D.48677 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:4 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48677 ])) intcode.cpp:4 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48677 ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:4 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:4 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 88 [ D.48677 ])
                (plus:DI (reg/f:DI 107)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:4 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48677 ])) intcode.cpp:4 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48677 ])
        (nil)))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:4 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:4 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 89 [ D.48677 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:4 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.48677 ])) intcode.cpp:4 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48677 ])
        (nil)))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:4 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -464 [0xfffffffffffffe30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:5 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 109)) intcode.cpp:5 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(call_insn 23 22 24 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:5 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 90 [ D.48677 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:5 89 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -464 [0xfffffffffffffe30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:5 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 4 si)
        (reg:DI 110)) intcode.cpp:5 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.48677 ])) intcode.cpp:5 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48677 ])
        (nil)))
(call_insn 28 27 29 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEaSEOS1_") [flags 0x3]  <function_decl 0x7fdf7c18d510 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) intcode.cpp:5 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 29 28 30 2 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -464 [0xfffffffffffffe30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:5 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (reg:DI 111)) intcode.cpp:5 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(call_insn 31 30 32 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:5 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 32 31 33 2 (set (reg:SI 4 si)
        (const_int 8 [0x8])) intcode.cpp:6 90 {*movsi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:SI 5 di)
        (const_int 16 [0x10])) intcode.cpp:6 90 {*movsi_internal}
     (nil))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZStorSt13_Ios_OpenmodeS_") [flags 0x3]  <function_decl 0x7fdf7c9afd80 operator|>) [0 operator| S1 A8])
            (const_int 0 [0]))) intcode.cpp:6 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 35 34 36 2 (set (reg:SI 91 [ D.48678 ])
        (reg:SI 0 ax)) intcode.cpp:6 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 36 35 37 2 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -496 [0xfffffffffffffe10])) [0 input+0 S8 A64])) intcode.cpp:6 89 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -400 [0xfffffffffffffe70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:6 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 37 39 2 (set (reg:SI 1 dx)
        (reg:SI 91 [ D.48678 ])) intcode.cpp:6 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ D.48678 ])
        (nil)))
(insn 39 38 40 2 (set (reg:DI 4 si)
        (reg:DI 112)) intcode.cpp:6 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(insn 40 39 41 2 (set (reg:DI 5 di)
        (reg:DI 113)) intcode.cpp:6 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(call_insn 41 40 74 2 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode") [flags 0x41]  <function_decl 0x7fdf7c757948 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:6 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              8 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 114 115
(code_label 74 41 42 3 13 "" [1 uses])
(note 42 74 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 3 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -464 [0xfffffffffffffe30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:9 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 44 43 45 3 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -400 [0xfffffffffffffe70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:9 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 45 44 46 3 (set (reg:DI 4 si)
        (reg:DI 114)) intcode.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(insn 46 45 47 3 (set (reg:DI 5 di)
        (reg:DI 115)) intcode.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(call_insn 47 46 175 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSirsERx") [flags 0x41]  <function_decl 0x7fdf7c5cad80 operator>>>) [0 operator>> S1 A8])
            (const_int 0 [0]))) intcode.cpp:9 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       19 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 116
(note 175 47 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 48 175 50 4 (set (reg/f:DI 92 [ D.48679 ])
        (reg:DI 0 ax)) intcode.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 50 48 51 4 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -466 [0xfffffffffffffe2e])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:9 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 51 50 52 4 (set (reg:DI 4 si)
        (reg:DI 116)) intcode.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(insn 52 51 53 4 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.48679 ])) intcode.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.48679 ])
        (nil)))
(call_insn 53 52 176 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_") [flags 0x41]  <function_decl 0x7fdf7c686360 operator>>>) [0 operator>> S1 A8])
            (const_int 0 [0]))) intcode.cpp:9 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       19 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 95 96 97 98
(note 176 53 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 54 176 56 5 (set (reg/f:DI 93 [ D.48680 ])
        (reg:DI 0 ax)) intcode.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 56 54 57 5 (set (reg/f:DI 94 [ D.48681 ])
        (mem/f/j:DI (reg/f:DI 93 [ D.48680 ]) [0 _28->_vptr.basic_istream+0 S8 A64])) intcode.cpp:9 89 {*movdi_internal}
     (nil))
(insn 57 56 58 5 (parallel [
            (set (reg/f:DI 95 [ D.48681 ])
                (plus:DI (reg/f:DI 94 [ D.48681 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:9 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.48681 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 58 57 59 5 (set (reg:DI 96 [ D.48682 ])
        (mem:DI (reg/f:DI 95 [ D.48681 ]) [0 MEM[(long int *)_30]+0 S8 A64])) intcode.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.48681 ])
        (nil)))
(insn 59 58 60 5 (set (reg:DI 97 [ D.48683 ])
        (reg:DI 96 [ D.48682 ])) intcode.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ D.48682 ])
        (nil)))
(insn 60 59 61 5 (parallel [
            (set (reg/f:DI 98 [ D.48684 ])
                (plus:DI (reg/f:DI 93 [ D.48680 ])
                    (reg:DI 97 [ D.48683 ])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:9 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 97 [ D.48683 ])
        (expr_list:REG_DEAD (reg/f:DI 93 [ D.48680 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 61 60 62 5 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.48684 ])) intcode.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.48684 ])
        (nil)))
(call_insn 62 61 177 5 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv") [flags 0x41]  <function_decl 0x7fdf7c8ce6c0 operator 2>) [0 operator 2 S1 A8])
            (const_int 0 [0]))) intcode.cpp:9 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       19 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99
(note 177 62 63 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 63 177 65 6 (set (reg:QI 99 [ D.48685 ])
        (reg:QI 0 ax)) intcode.cpp:9 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 65 63 66 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ D.48685 ])
            (const_int 0 [0]))) intcode.cpp:9 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 99 [ D.48685 ])
        (nil)))
(jump_insn 66 65 67 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) intcode.cpp:9 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 77)
;;  succ:       7 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 100 117
(note 67 66 68 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 7 (set (reg/f:DI 100 [ D.48677 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:10 89 {*movdi_internal}
     (nil))
(insn 69 68 70 7 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -464 [0xfffffffffffffe30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:10 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 70 69 71 7 (set (reg:DI 4 si)
        (reg:DI 117)) intcode.cpp:10 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(insn 71 70 72 7 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.48677 ])) intcode.cpp:10 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.48677 ])
        (nil)))
(call_insn 72 71 73 7 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE9push_backERKx") [flags 0x3]  <function_decl 0x7fdf7c19b5e8 push_back>) [0 push_back S1 A8])
        (const_int 0 [0])) intcode.cpp:10 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       19 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 73 72 203 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 203 73 204 8 (set (pc)
        (label_ref 74)) intcode.cpp:9 654 {jump}
     (nil)
 -> 74)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 204 203 77)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 101 118
(code_label 77 204 78 9 12 "" [1 uses])
(note 78 77 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 9 (set (reg/f:DI 101 [ D.48677 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:12 89 {*movdi_internal}
     (nil))
(insn 80 79 81 9 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -464 [0xfffffffffffffe30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:12 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 81 80 82 9 (set (reg:DI 4 si)
        (reg:DI 118)) intcode.cpp:12 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118)
        (nil)))
(insn 82 81 83 9 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.48677 ])) intcode.cpp:12 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.48677 ])
        (nil)))
(call_insn 83 82 84 9 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE9push_backERKx") [flags 0x3]  <function_decl 0x7fdf7c19b5e8 push_back>) [0 push_back S1 A8])
        (const_int 0 [0])) intcode.cpp:12 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       19 (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 119 120 121 122 123
(note 84 83 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 10 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:14 89 {*movdi_internal}
     (nil))
(insn 86 85 87 10 (set (mem/j:SI (plus:DI (reg/f:DI 119)
                (const_int 24 [0x18])) [0 this_6(D)->ind+0 S4 A64])
        (const_int 0 [0])) intcode.cpp:14 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119)
        (nil)))
(insn 87 86 88 10 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:15 89 {*movdi_internal}
     (nil))
(insn 88 87 89 10 (set (mem/j:SI (plus:DI (reg/f:DI 120)
                (const_int 28 [0x1c])) [0 this_6(D)->rel+0 S4 A32])
        (const_int 0 [0])) intcode.cpp:15 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120)
        (nil)))
(insn 89 88 90 10 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:16 89 {*movdi_internal}
     (nil))
(insn 90 89 91 10 (set (mem/j:QI (plus:DI (reg/f:DI 121)
                (const_int 80 [0x50])) [0 this_6(D)->done+0 S1 A64])
        (const_int 0 [0])) intcode.cpp:16 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121)
        (nil)))
(insn 91 90 92 10 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:17 89 {*movdi_internal}
     (nil))
(insn 92 91 93 10 (set (reg:QI 123)
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -500 [0xfffffffffffffe0c])) [0 debug+0 S1 A32])) intcode.cpp:17 93 {*movqi_internal}
     (nil))
(insn 93 92 94 10 (set (mem/j:QI (plus:DI (reg/f:DI 122)
                (const_int 81 [0x51])) [0 this_6(D)->debug+0 S1 A8])
        (reg:QI 123)) intcode.cpp:17 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 123)
        (expr_list:REG_DEAD (reg/f:DI 122)
            (nil))))
(insn 94 93 95 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -500 [0xfffffffffffffe0c])) [0 debug+0 S1 A32])
            (const_int 0 [0]))) intcode.cpp:18 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 95 94 96 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) intcode.cpp:18 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 119)
;;  succ:       11 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 124 125 126
(note 96 95 97 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 11 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -465 [0xfffffffffffffe2f])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:19 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 98 97 99 11 (set (reg:DI 5 di)
        (reg:DI 124)) intcode.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(call_insn 99 98 100 11 (call (mem:QI (symbol_ref:DI ("_ZNSaIcEC1Ev") [flags 0x41]  <function_decl 0x7fdf7d57a870 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:19 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 100 99 101 11 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -465 [0xfffffffffffffe2f])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:19 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 101 100 102 11 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -432 [0xfffffffffffffe50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:19 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 102 101 103 11 (set (reg:DI 1 dx)
        (reg:DI 125)) intcode.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(insn 103 102 104 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fdf7b957090 *.LC2>)) intcode.cpp:19 89 {*movdi_internal}
     (nil))
(insn 104 103 105 11 (set (reg:DI 5 di)
        (reg:DI 126)) intcode.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (nil)))
(call_insn 105 104 106 11 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_") [flags 0x41]  <function_decl 0x7fdf7d0b06c0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:19 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 3 [0x3])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       17 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 127 128
(note 106 105 107 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 12 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -432 [0xfffffffffffffe50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:19 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 108 107 109 12 (set (reg:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:19 89 {*movdi_internal}
     (nil))
(insn 109 108 110 12 (set (reg:DI 4 si)
        (reg:DI 127)) intcode.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(insn 110 109 111 12 (set (reg:DI 5 di)
        (reg:DI 128)) intcode.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128)
        (nil)))
(call_insn 111 110 112 12 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode3logENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x3]  <function_decl 0x7fdf7bddba20 log>) [0 log S1 A8])
        (const_int 0 [0])) intcode.cpp:19 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       16 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 129 130
(note 112 111 113 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 13 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -432 [0xfffffffffffffe50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:19 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 114 113 115 13 (set (reg:DI 5 di)
        (reg:DI 129)) intcode.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 129)
        (nil)))
(call_insn 115 114 116 13 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:19 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 116 115 117 13 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -465 [0xfffffffffffffe2f])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:19 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 117 116 118 13 (set (reg:DI 5 di)
        (reg:DI 130)) intcode.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 130)
        (nil)))
(call_insn 118 117 119 13 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x7fdf7d57aa20 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:19 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 131
(code_label 119 118 120 14 14 "" [1 uses])
(note 120 119 121 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 14 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -400 [0xfffffffffffffe70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:6 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 122 121 123 14 (set (reg:DI 5 di)
        (reg:DI 131)) intcode.cpp:6 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131)
        (nil)))
(call_insn 123 122 202 14 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7c757d80 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:6 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 202 123 169 14 (const_int 0 [0]) intcode.cpp:21 684 {nop}
     (nil))
(insn 169 202 170 14 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48687+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) intcode.cpp:21 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 170 169 205 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) intcode.cpp:21 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 173)
;;  succ:       24
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 205 170 207 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 207 205 208 15 (set (pc)
        (label_ref 206)) 654 {jump}
     (nil)
 -> 206)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 208 207 198)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 16 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 132 133 134
(code_label/s 198 208 201 16 23 "" [1 uses])
(note 201 198 199 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 199 201 128 16 (set (reg:DI 134)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 128 199 129 16 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -432 [0xfffffffffffffe50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:19 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 129 128 130 16 (set (reg:DI 5 di)
        (reg:DI 132)) intcode.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(call_insn 130 129 131 16 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:19 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 131 130 209 16 (set (reg:DI 133)
        (reg:DI 134)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 134)
        (nil)))
(jump_insn 209 131 210 16 (set (pc)
        (label_ref 133)) 654 {jump}
     (nil)
 -> 133)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133

(barrier 210 209 192)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 17 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 133
(code_label/s 192 210 197 17 22 "" [1 uses])
(note 197 192 193 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 193 197 133 17 (set (reg:DI 133)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 137 138
(code_label 133 193 134 18 16 "" [1 uses])
(note 134 133 135 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 18 (parallel [
            (set (reg:DI 137)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -465 [0xfffffffffffffe2f])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:19 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 136 135 137 18 (set (reg:DI 5 di)
        (reg:DI 137)) intcode.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137)
        (nil)))
(call_insn 137 136 138 18 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x7fdf7d57aa20 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:19 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 138 137 211 18 (set (reg:DI 138)
        (reg:DI 133)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(jump_insn 211 138 212 18 (set (pc)
        (label_ref 140)) 654 {jump}
     (nil)
 -> 140)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 138

(barrier 212 211 186)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 19 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 138
(code_label/s 186 212 191 19 21 "" [1 uses])
(note 191 186 187 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 187 191 140 19 (set (reg:DI 138)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 138

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%]  (FALLTHRU)
;;              18 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 138
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 138
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 140 141
(code_label 140 187 141 20 17 "" [1 uses])
(note 141 140 142 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 20 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -400 [0xfffffffffffffe70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:6 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 143 142 144 20 (set (reg:DI 5 di)
        (reg:DI 140)) intcode.cpp:6 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 140)
        (nil)))
(call_insn 144 143 145 20 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7c757d80 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:6 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 145 144 213 20 (set (reg:DI 141)
        (reg:DI 138)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 138)
        (nil)))
(jump_insn 213 145 214 20 (set (pc)
        (label_ref 147)) 654 {jump}
     (nil)
 -> 147)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141

(barrier 214 213 180)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 21 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 141
(code_label/s 180 214 185 21 20 "" [1 uses])
(note 185 180 181 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 181 185 147 21 (set (reg:DI 141)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU)
;;              20 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102 103 104 105 143 144 146 147
(code_label 147 181 148 22 18 "" [1 uses])
(note 148 147 149 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 22 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:4 89 {*movdi_internal}
     (nil))
(insn 150 149 151 22 (parallel [
            (set (reg/f:DI 102 [ D.48677 ])
                (plus:DI (reg/f:DI 143)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:4 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 143)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 151 150 152 22 (set (reg:DI 5 di)
        (reg/f:DI 102 [ D.48677 ])) intcode.cpp:4 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.48677 ])
        (nil)))
(call_insn 152 151 153 22 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:4 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 153 152 155 22 (set (reg:DI 144)
        (reg:DI 141)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 141)
        (nil)))
(insn 155 153 156 22 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:4 89 {*movdi_internal}
     (nil))
(insn 156 155 157 22 (parallel [
            (set (reg/f:DI 103 [ D.48677 ])
                (plus:DI (reg/f:DI 146)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:4 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 146)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 157 156 158 22 (set (reg:DI 5 di)
        (reg/f:DI 103 [ D.48677 ])) intcode.cpp:4 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.48677 ])
        (nil)))
(call_insn 158 157 159 22 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:4 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 159 158 161 22 (set (reg:DI 147)
        (reg:DI 144)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 144)
        (nil)))
(insn 161 159 162 22 (set (reg/f:DI 104 [ D.48677 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -488 [0xfffffffffffffe18])) [0 this+0 S8 A64])) intcode.cpp:4 89 {*movdi_internal}
     (nil))
(insn 162 161 163 22 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.48677 ])) intcode.cpp:4 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.48677 ])
        (nil)))
(call_insn 163 162 164 22 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:4 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 164 163 165 22 (set (reg/f:DI 105 [ D.48676 ])
        (reg:DI 147)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147)
        (nil)))
(insn 165 164 166 22 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.48676 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.48676 ])
        (nil)))
(call_insn 166 165 167 22 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 167 166 206)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 206 167 178 23 24 "" [1 uses])
(note 178 206 171 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(call_insn 171 178 172 23 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) intcode.cpp:21 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 172 171 173)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 173 172 179 24 19 "" [1 uses])
(note 179 173 0 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function IntCode::IntCode(int, bool) (_ZN7IntCodeC2Eib, funcdef_no=1889, decl_uid=43151, cgraph_uid=508, symbol_order=510)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 50 count 37 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 148.
verify found no changes in insn with uid = 154.
verify found no changes in insn with uid = 160.
verify found no changes in insn with uid = 164.
verify found no changes in insn with uid = 167.
verify found no changes in insn with uid = 172.
verify found no changes in insn with uid = 175.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 185.
verify found no changes in insn with uid = 192.
verify found no changes in insn with uid = 199.
verify found no changes in insn with uid = 208.
verify found no changes in insn with uid = 215.
verify found no changes in insn with uid = 222.
verify found no changes in insn with uid = 229.
verify found no changes in insn with uid = 234.
verify found no changes in insn with uid = 242.
verify found no changes in insn with uid = 248.
verify found no changes in insn with uid = 253.
verify found no changes in insn with uid = 256.
verify found no changes in insn with uid = 261.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r174,l0) best DIREG, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r171,l0) best DIREG, allocno GENERAL_REGS
    r169: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r169,l0) best AREG, allocno GENERAL_REGS
    r168: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r168,l0) best DIREG, allocno GENERAL_REGS
    r166: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r166,l0) best AREG, allocno GENERAL_REGS
    r165: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r165,l0) best DIREG, allocno GENERAL_REGS
    r162: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r162,l0) best AREG, allocno GENERAL_REGS
    r161: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r161,l0) best AREG, allocno GENERAL_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r160,l0) best DIREG, allocno GENERAL_REGS
    r158: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r158,l0) best AREG, allocno GENERAL_REGS
    r157: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r157,l0) best DIREG, allocno GENERAL_REGS
    r155: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r155,l0) best AREG, allocno GENERAL_REGS
    r154: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r154,l0) best DIREG, allocno GENERAL_REGS
    r151: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r151,l0) best AREG, allocno GENERAL_REGS
    r150: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r150,l0) best AREG, allocno GENERAL_REGS
    r149: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r149,l0) best DIREG, allocno GENERAL_REGS
    r148: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r148,l0) best DIREG, allocno GENERAL_REGS
    r147: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r147,l0) best DIREG, allocno GENERAL_REGS
    r146: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r146,l0) best DIREG, allocno GENERAL_REGS
    r145: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r145,l0) best DIREG, allocno GENERAL_REGS
    r144: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r144,l0) best DIREG, allocno GENERAL_REGS
    r143: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r143,l0) best DIREG, allocno GENERAL_REGS
    r142: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r142,l0) best SIREG, allocno GENERAL_REGS
    r141: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r141,l0) best DIREG, allocno GENERAL_REGS
    r140: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r140,l0) best DREG, allocno GENERAL_REGS
    r139: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r139,l0) best DIREG, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r133,l0) best SIREG, allocno GENERAL_REGS
    r132: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r132,l0) best SIREG, allocno GENERAL_REGS
    r131: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r131,l0) best SIREG, allocno GENERAL_REGS
    r130: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r130,l0) best DIREG, allocno GENERAL_REGS
    r129: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r129,l0) best SIREG, allocno GENERAL_REGS
    r128: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r128,l0) best DIREG, allocno GENERAL_REGS
    r127: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r127,l0) best SIREG, allocno GENERAL_REGS
    r126: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r126,l0) best DIREG, allocno GENERAL_REGS
    r125: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r125,l0) best SIREG, allocno GENERAL_REGS
    r124: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r124,l0) best DIREG, allocno GENERAL_REGS
    r123: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r123,l0) best DIREG, allocno GENERAL_REGS
    r122: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r122,l0) best SIREG, allocno GENERAL_REGS
    r121: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r121,l0) best DIREG, allocno GENERAL_REGS
    r120: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r120,l0) best DIREG, allocno GENERAL_REGS
    r119: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a66 (r119,l0) best DIREG, allocno GENERAL_REGS
    r118: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r118,l0) best DIREG, allocno GENERAL_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r116,l0) best SIREG, allocno GENERAL_REGS
    r115: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r115,l0) best SIREG, allocno GENERAL_REGS
    r114: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r114,l0) best DIREG, allocno GENERAL_REGS
    r113: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r113,l0) best DREG, allocno GENERAL_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r112,l0) best DIREG, allocno GENERAL_REGS
    r111: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a76 (r111,l0) best SIREG, allocno GENERAL_REGS
    r110: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r110,l0) best DIREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a82 (r107,l0) best DREG, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r102,l0) best DIREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r92,l0) best AD_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r90,l0) best AD_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a77 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a81 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a5(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:37 INT_SSE_REGS:33 ALL_REGS:508 MEM:6
  a7(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a10(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a12(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a14(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a16(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a18(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a20(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a21(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a22(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a23(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a24(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a26(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a27(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a29(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a30(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a31(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a32(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a34(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a35(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a36(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a37(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a38(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a39(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a40(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a42(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a43(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a44(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a45(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a46(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a47(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:34 INT_SSE_REGS:26 ALL_REGS:516 MEM:8
  a48(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a49(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a50(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a51(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a52(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a54(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a55(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a56(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a57(r92,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a58(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a59(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a60(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a61(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a62(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a63(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a64(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a66(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a67(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a68(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a69(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a70(r90,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a71(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a72(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a73(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a74(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a75(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a78(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a79(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a80(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a81(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a82(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5

   Insn 261(l0): point = 1
   Insn 256(l0): point = 4
   Insn 255(l0): point = 6
   Insn 254(l0): point = 8
   Insn 253(l0): point = 10
   Insn 252(l0): point = 12
   Insn 251(l0): point = 14
   Insn 249(l0): point = 16
   Insn 248(l0): point = 18
   Insn 247(l0): point = 20
   Insn 246(l0): point = 22
   Insn 245(l0): point = 24
   Insn 243(l0): point = 26
   Insn 242(l0): point = 28
   Insn 241(l0): point = 30
   Insn 240(l0): point = 32
   Insn 239(l0): point = 34
   Insn 271(l0): point = 37
   Insn 333(l0): point = 40
   Insn 235(l0): point = 42
   Insn 234(l0): point = 44
   Insn 233(l0): point = 46
   Insn 232(l0): point = 48
   Insn 230(l0): point = 50
   Insn 229(l0): point = 52
   Insn 228(l0): point = 54
   Insn 227(l0): point = 56
   Insn 293(l0): point = 59
   Insn 331(l0): point = 62
   Insn 223(l0): point = 64
   Insn 222(l0): point = 66
   Insn 221(l0): point = 68
   Insn 220(l0): point = 70
   Insn 299(l0): point = 73
   Insn 329(l0): point = 76
   Insn 216(l0): point = 78
   Insn 215(l0): point = 80
   Insn 214(l0): point = 82
   Insn 213(l0): point = 84
   Insn 305(l0): point = 87
   Insn 327(l0): point = 90
   Insn 209(l0): point = 92
   Insn 208(l0): point = 94
   Insn 207(l0): point = 96
   Insn 206(l0): point = 98
   Insn 311(l0): point = 100
   Insn 325(l0): point = 103
   Insn 200(l0): point = 105
   Insn 199(l0): point = 107
   Insn 198(l0): point = 109
   Insn 197(l0): point = 111
   Insn 277(l0): point = 114
   Insn 323(l0): point = 117
   Insn 193(l0): point = 119
   Insn 192(l0): point = 121
   Insn 191(l0): point = 123
   Insn 190(l0): point = 125
   Insn 283(l0): point = 128
   Insn 321(l0): point = 131
   Insn 186(l0): point = 133
   Insn 185(l0): point = 135
   Insn 184(l0): point = 137
   Insn 183(l0): point = 139
   Insn 289(l0): point = 141
   Insn 319(l0): point = 144
   Insn 260(l0): point = 147
   Insn 259(l0): point = 149
   Insn 314(l0): point = 151
   Insn 178(l0): point = 153
   Insn 177(l0): point = 155
   Insn 176(l0): point = 157
   Insn 175(l0): point = 159
   Insn 174(l0): point = 161
   Insn 173(l0): point = 163
   Insn 172(l0): point = 165
   Insn 171(l0): point = 167
   Insn 170(l0): point = 169
   Insn 167(l0): point = 172
   Insn 166(l0): point = 174
   Insn 165(l0): point = 176
   Insn 164(l0): point = 178
   Insn 163(l0): point = 180
   Insn 162(l0): point = 182
   Insn 160(l0): point = 185
   Insn 159(l0): point = 187
   Insn 158(l0): point = 189
   Insn 157(l0): point = 191
   Insn 156(l0): point = 193
   Insn 154(l0): point = 196
   Insn 153(l0): point = 198
   Insn 152(l0): point = 200
   Insn 151(l0): point = 202
   Insn 150(l0): point = 204
   Insn 149(l0): point = 206
   Insn 148(l0): point = 208
   Insn 147(l0): point = 210
   Insn 146(l0): point = 212
   Insn 144(l0): point = 215
   Insn 143(l0): point = 217
   Insn 142(l0): point = 219
   Insn 141(l0): point = 221
   Insn 140(l0): point = 223
   Insn 139(l0): point = 225
   Insn 138(l0): point = 227
   Insn 137(l0): point = 229
   Insn 136(l0): point = 231
   Insn 135(l0): point = 233
   Insn 134(l0): point = 235
   Insn 132(l0): point = 238
   Insn 131(l0): point = 240
   Insn 130(l0): point = 242
   Insn 129(l0): point = 244
   Insn 128(l0): point = 246
   Insn 96(l0): point = 249
   Insn 95(l0): point = 251
   Insn 94(l0): point = 253
   Insn 93(l0): point = 255
   Insn 92(l0): point = 257
   Insn 315(l0): point = 260
   Insn 121(l0): point = 263
   Insn 120(l0): point = 265
   Insn 119(l0): point = 267
   Insn 118(l0): point = 269
   Insn 117(l0): point = 271
   Insn 115(l0): point = 274
   Insn 114(l0): point = 276
   Insn 112(l0): point = 278
   Insn 111(l0): point = 281
   Insn 110(l0): point = 283
   Insn 109(l0): point = 285
   Insn 108(l0): point = 287
   Insn 107(l0): point = 289
   Insn 106(l0): point = 291
   Insn 105(l0): point = 293
   Insn 103(l0): point = 295
   Insn 102(l0): point = 298
   Insn 101(l0): point = 300
   Insn 100(l0): point = 302
   Insn 99(l0): point = 304
   Insn 97(l0): point = 306
   Insn 90(l0): point = 309
   Insn 89(l0): point = 311
   Insn 88(l0): point = 313
   Insn 87(l0): point = 315
   Insn 86(l0): point = 317
   Insn 85(l0): point = 319
   Insn 84(l0): point = 321
   Insn 83(l0): point = 323
   Insn 82(l0): point = 325
   Insn 81(l0): point = 327
   Insn 80(l0): point = 329
   Insn 79(l0): point = 331
   Insn 78(l0): point = 333
   Insn 77(l0): point = 335
   Insn 76(l0): point = 337
   Insn 75(l0): point = 339
   Insn 74(l0): point = 341
   Insn 73(l0): point = 343
   Insn 72(l0): point = 345
   Insn 71(l0): point = 347
   Insn 70(l0): point = 349
   Insn 68(l0): point = 352
   Insn 67(l0): point = 354
   Insn 66(l0): point = 356
   Insn 65(l0): point = 358
   Insn 64(l0): point = 360
   Insn 63(l0): point = 362
   Insn 62(l0): point = 364
   Insn 61(l0): point = 366
   Insn 60(l0): point = 368
   Insn 59(l0): point = 370
   Insn 58(l0): point = 372
   Insn 57(l0): point = 374
   Insn 56(l0): point = 376
   Insn 55(l0): point = 378
   Insn 54(l0): point = 380
   Insn 53(l0): point = 382
   Insn 52(l0): point = 384
   Insn 50(l0): point = 387
   Insn 49(l0): point = 389
   Insn 48(l0): point = 391
   Insn 47(l0): point = 393
   Insn 46(l0): point = 395
   Insn 45(l0): point = 397
   Insn 43(l0): point = 400
   Insn 42(l0): point = 402
   Insn 41(l0): point = 404
   Insn 40(l0): point = 406
   Insn 39(l0): point = 408
   Insn 38(l0): point = 410
   Insn 36(l0): point = 413
   Insn 35(l0): point = 415
   Insn 34(l0): point = 417
   Insn 33(l0): point = 419
   Insn 32(l0): point = 421
   Insn 31(l0): point = 423
   Insn 29(l0): point = 426
   Insn 28(l0): point = 428
   Insn 27(l0): point = 430
   Insn 26(l0): point = 432
   Insn 25(l0): point = 434
   Insn 24(l0): point = 436
   Insn 23(l0): point = 438
   Insn 22(l0): point = 440
   Insn 21(l0): point = 442
   Insn 20(l0): point = 444
   Insn 19(l0): point = 446
   Insn 18(l0): point = 448
   Insn 17(l0): point = 450
   Insn 16(l0): point = 452
   Insn 15(l0): point = 454
   Insn 14(l0): point = 456
   Insn 13(l0): point = 458
   Insn 12(l0): point = 460
   Insn 11(l0): point = 462
   Insn 10(l0): point = 464
   Insn 7(l0): point = 466
   Insn 5(l0): point = 468
   Insn 4(l0): point = 470
   Insn 3(l0): point = 472
   Insn 2(l0): point = 474
 a0(r106): [7..8]
 a1(r179): [9..16]
 a2(r105): [13..14]
 a3(r176): [17..26]
 a4(r104): [21..22]
 a5(r178): [23..24]
 a6(r158): [103..105] [40..42] [27..37]
 a7(r103): [31..32]
 a8(r175): [33..34]
 a9(r172): [43..50]
 a10(r174): [47..48]
 a11(r169): [62..64] [51..59]
 a12(r171): [55..56]
 a13(r166): [76..78] [65..73]
 a14(r168): [69..70]
 a15(r161): [90..92] [79..87]
 a16(r165): [83..84]
 a17(r162): [93..100]
 a18(r160): [97..98]
 a19(r155): [117..119] [106..114]
 a20(r157): [110..111]
 a21(r150): [131..133] [120..128]
 a22(r154): [124..125]
 a23(r151): [134..141]
 a24(r149): [138..139]
 a25(r148): [156..157]
 a26(r147): [162..163]
 a27(r146): [168..169]
 a28(r145): [175..176]
 a29(r144): [181..182]
 a30(r143): [188..191]
 a31(r142): [190..193]
 a32(r141): [199..204]
 a33(r140): [203..206]
 a34(r139): [211..212]
 a35(r137): [220..223]
 a36(r138): [220..221]
 a37(r136): [226..227]
 a38(r135): [230..231]
 a39(r134): [234..235]
 a40(r102): [241..246]
 a41(r133): [243..244]
 a42(r101): [266..271]
 a43(r132): [268..269]
 a44(r100): [277..278]
 a45(r99): [284..285]
 a46(r98): [286..287]
 a47(r94): [286..295]
 a48(r97): [288..289]
 a49(r96): [290..291]
 a50(r95): [292..293]
 a51(r93): [301..306]
 a52(r131): [303..304]
 a53(r130): [252..255]
 a54(r129): [254..257]
 a55(r128): [312..317]
 a56(r127): [314..319]
 a57(r92): [316..321]
 a58(r126): [332..333]
 a59(r91): [338..343]
 a60(r125): [340..341]
 a61(r124): [348..349]
 a62(r123): [355..358]
 a63(r122): [357..360]
 a64(r121): [365..366]
 a65(r120): [371..372]
 a66(r119): [377..378]
 a67(r118): [383..384]
 a68(r117): [390..395]
 a69(r116): [392..397]
 a70(r90): [394..436]
 a71(r114): [403..410]
 a72(r115): [405..408]
 a73(r112): [416..423]
 a74(r113): [420..421]
 a75(r110): [429..434]
 a76(r111): [431..432]
 a77(r89): [447..448]
 a78(r109): [449..450]
 a79(r88): [455..456]
 a80(r108): [457..458]
 a81(r87): [463..464]
 a82(r107): [469..470]
Compressing live ranges: from 477 to 124 - 25%
Ranges after the compression:
 a0(r106): [0..1]
 a1(r179): [2..3]
 a2(r105): [2..3]
 a3(r176): [4..7]
 a4(r104): [4..5]
 a5(r178): [6..7]
 a6(r158): [30..31] [8..13]
 a7(r103): [8..9]
 a8(r175): [10..11]
 a9(r172): [14..15]
 a10(r174): [14..15]
 a11(r169): [16..19]
 a12(r171): [16..17]
 a13(r166): [20..23]
 a14(r168): [20..21]
 a15(r161): [24..27]
 a16(r165): [24..25]
 a17(r162): [28..29]
 a18(r160): [28..29]
 a19(r155): [32..35]
 a20(r157): [32..33]
 a21(r150): [36..39]
 a22(r154): [36..37]
 a23(r151): [40..41]
 a24(r149): [40..41]
 a25(r148): [42..43]
 a26(r147): [44..45]
 a27(r146): [46..47]
 a28(r145): [48..49]
 a29(r144): [50..51]
 a30(r143): [52..53]
 a31(r142): [52..53]
 a32(r141): [54..55]
 a33(r140): [54..55]
 a34(r139): [56..57]
 a35(r137): [58..59]
 a36(r138): [58..59]
 a37(r136): [60..61]
 a38(r135): [62..63]
 a39(r134): [64..65]
 a40(r102): [66..67]
 a41(r133): [66..67]
 a42(r101): [70..71]
 a43(r132): [70..71]
 a44(r100): [72..73]
 a45(r99): [74..75]
 a46(r98): [76..77]
 a47(r94): [76..83]
 a48(r97): [78..79]
 a49(r96): [80..81]
 a50(r95): [82..83]
 a51(r93): [84..85]
 a52(r131): [84..85]
 a53(r130): [68..69]
 a54(r129): [68..69]
 a55(r128): [86..87]
 a56(r127): [86..87]
 a57(r92): [86..87]
 a58(r126): [88..89]
 a59(r91): [90..91]
 a60(r125): [90..91]
 a61(r124): [92..93]
 a62(r123): [94..95]
 a63(r122): [94..95]
 a64(r121): [96..97]
 a65(r120): [98..99]
 a66(r119): [100..101]
 a67(r118): [102..103]
 a68(r117): [104..105]
 a69(r116): [104..105]
 a70(r90): [104..111]
 a71(r114): [106..107]
 a72(r115): [106..107]
 a73(r112): [108..109]
 a74(r113): [108..109]
 a75(r110): [110..111]
 a76(r111): [110..111]
 a77(r89): [112..113]
 a78(r109): [114..115]
 a79(r88): [116..117]
 a80(r108): [118..119]
 a81(r87): [120..121]
 a82(r107): [122..123]
  regions=1, blocks=37, points=124
    allocnos=83 (big 0), copies=0, conflicts=0, ranges=84
Disposition:
   81:r87  l0     0   79:r88  l0     0   77:r89  l0     0   70:r90  l0     3
   59:r91  l0     0   57:r92  l0     1   51:r93  l0     1   47:r94  l0     0
   50:r95  l0     1   49:r96  l0     1   48:r97  l0     1   46:r98  l0     1
   45:r99  l0     0   44:r100 l0     0   42:r101 l0     0   40:r102 l0     0
    7:r103 l0     0    4:r104 l0     0    2:r105 l0     0    0:r106 l0     0
   82:r107 l0     0   80:r108 l0     0   78:r109 l0     0   75:r110 l0     0
   76:r111 l0     1   73:r112 l0     0   74:r113 l0     1   71:r114 l0     0
   72:r115 l0     2   69:r116 l0     2   68:r117 l0     0   67:r118 l0     0
   66:r119 l0     0   65:r120 l0     0   64:r121 l0     0   63:r122 l0     1
   62:r123 l0     0   61:r124 l0     0   60:r125 l0     1   58:r126 l0     0
   56:r127 l0     2   55:r128 l0     0   54:r129 l0     1   53:r130 l0     0
   52:r131 l0     0   43:r132 l0     1   41:r133 l0     1   39:r134 l0     0
   38:r135 l0     0   37:r136 l0     0   35:r137 l0     0   36:r138 l0     1
   34:r139 l0     0   33:r140 l0     1   32:r141 l0     0   31:r142 l0     1
   30:r143 l0     0   29:r144 l0     0   28:r145 l0     0   27:r146 l0     0
   26:r147 l0     0   25:r148 l0     0   24:r149 l0     0   21:r150 l0     3
   23:r151 l0     3   22:r154 l0     0   19:r155 l0     3   20:r157 l0     0
    6:r158 l0     3   18:r160 l0     0   15:r161 l0     3   17:r162 l0     3
   16:r165 l0     0   13:r166 l0     3   14:r168 l0     0   11:r169 l0     3
   12:r171 l0     0    9:r172 l0     3   10:r174 l0     0    8:r175 l0     0
    3:r176 l0     3    5:r178 l0     0    1:r179 l0     3
+++Costs: overall -67, reg -67, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


IntCode::IntCode(int, bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={53d,13u} r1={58d,6u} r2={45d} r4={60d,16u} r5={88d,44u} r6={1d,36u} r7={1d,80u} r8={44d} r9={44d} r10={44d} r11={44d} r12={44d} r13={44d} r14={44d} r15={44d} r16={1d,35u} r17={94d,3u} r18={44d} r19={44d} r20={1d,98u,4e} r21={45d} r22={45d} r23={45d} r24={45d} r25={45d} r26={45d} r27={45d} r28={45d} r29={44d} r30={44d} r31={44d} r32={44d} r33={44d} r34={44d} r35={44d} r36={44d} r37={45d} r38={45d} r39={44d} r40={44d} r45={44d} r46={44d} r47={44d} r48={44d} r49={44d} r50={44d} r51={44d} r52={44d} r53={44d} r54={44d} r55={44d} r56={44d} r57={44d} r58={44d} r59={44d} r60={44d} r61={44d} r62={44d} r63={44d} r64={44d} r65={44d} r66={44d} r67={44d} r68={44d} r69={44d} r70={44d} r71={44d} r72={44d} r73={44d} r74={44d} r75={44d} r76={44d} r77={44d} r78={44d} r79={44d} r80={44d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,2u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={2d,1u} r151={1d,1u} r154={1d,1u} r155={2d,1u} r157={1d,1u} r158={3d,1u} r160={1d,1u} r161={2d,1u} r162={1d,1u} r165={1d,1u} r166={2d,1u} r168={1d,1u} r169={2d,1u} r171={1d,1u} r172={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r178={1d,1u} r179={1d,1u} 
;;    total ref usage 3825{3406d,415u,4e} in 221{177 regular + 44 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 107 108 109 110 111
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:23 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -1100 [0xfffffffffffffbb4])) [0 day+0 S4 A32])
        (reg:SI 4 si [ day ])) intcode.cpp:23 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ day ])
        (nil)))
(insn 4 3 5 2 (set (reg:SI 107)
        (reg:SI 1 dx [ debug ])) intcode.cpp:23 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ debug ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1104 [0xfffffffffffffbb0])) [0 debug+0 S1 A32])
        (subreg:QI (reg:SI 107) 0)) intcode.cpp:23 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(note 6 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48700+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:23 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 7 11 2 (set (reg/f:DI 87 [ D.48690 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:23 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48690 ])) intcode.cpp:23 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48690 ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:23 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:23 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 88 [ D.48690 ])
                (plus:DI (reg/f:DI 108)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:23 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48690 ])) intcode.cpp:23 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48690 ])
        (nil)))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:23 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:23 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 89 [ D.48690 ])
                (plus:DI (reg/f:DI 109)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:23 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.48690 ])) intcode.cpp:23 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48690 ])
        (nil)))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:23 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (const_int 16 [0x10])) intcode.cpp:24 90 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SI 5 di)
        (const_int 8 [0x8])) intcode.cpp:24 90 {*movsi_internal}
     (nil))
(call_insn 23 22 24 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZStorSt13_Ios_OpenmodeS_") [flags 0x3]  <function_decl 0x7fdf7c9afd80 operator|>) [0 operator| S1 A8])
            (const_int 0 [0]))) intcode.cpp:24 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 24 23 25 2 (set (reg:SI 90 [ D.48691 ])
        (reg:SI 0 ax)) intcode.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -1100 [0xfffffffffffffbb4])) [0 day+0 S4 A32])) intcode.cpp:24 90 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (reg:SI 111)) intcode.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 110)) intcode.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(call_insn 29 28 30 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx119to_stringEi") [flags 0x3]  <function_decl 0x7fdf7d0f2d80 to_string>) [0 to_string S1 A8])
        (const_int 0 [0])) intcode.cpp:24 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       33 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 112 113
(note 30 29 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 3 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 3 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 34 3 (set (reg:DI 1 dx)
        (reg:DI 113)) intcode.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(insn 34 33 35 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fdf7b96c1b0 *.LC3>)) intcode.cpp:24 89 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:DI 5 di)
        (reg:DI 112)) intcode.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(call_insn 36 35 37 3 (call (mem:QI (symbol_ref/i:DI ("_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_") [flags 0x3]  <function_decl 0x7fdf7cd91bd0 operator+>) [0 operator+ S1 A8])
        (const_int 0 [0])) intcode.cpp:24 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       24 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 114 115
(note 37 36 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 4 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1040 [0xfffffffffffffbf0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 40 39 41 4 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fdf7b96c2d0 *.LC4>)) intcode.cpp:24 89 {*movdi_internal}
     (nil))
(insn 41 40 42 4 (set (reg:DI 4 si)
        (reg:DI 115)) intcode.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(insn 42 41 43 4 (set (reg:DI 5 di)
        (reg:DI 114)) intcode.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(call_insn 43 42 44 4 (call (mem:QI (symbol_ref/i:DI ("_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_") [flags 0x3]  <function_decl 0x7fdf7be130d8 operator+>) [0 operator+ S1 A8])
        (const_int 0 [0])) intcode.cpp:24 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 3 [0x3])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       22 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 116 117
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1040 [0xfffffffffffffbf0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -544 [0xfffffffffffffde0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 48 5 (set (reg:SI 1 dx)
        (reg:SI 90 [ D.48691 ])) intcode.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ D.48691 ])
        (nil)))
(insn 48 47 49 5 (set (reg:DI 4 si)
        (reg:DI 116)) intcode.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(insn 49 48 50 5 (set (reg:DI 5 di)
        (reg:DI 117)) intcode.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(call_insn 50 49 51 5 (call (mem:QI (symbol_ref:DI ("_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode") [flags 0x41]  <function_decl 0x7fdf7c0e5948 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:24 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 118 119 120 121 122 123
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1040 [0xfffffffffffffbf0])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 53 52 54 6 (set (reg:DI 5 di)
        (reg:DI 118)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118)
        (nil)))
(call_insn 54 53 55 6 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 6 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 56 55 57 6 (set (reg:DI 5 di)
        (reg:DI 119)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119)
        (nil)))
(call_insn 57 56 58 6 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 58 57 59 6 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 58 60 6 (set (reg:DI 5 di)
        (reg:DI 120)) intcode.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 120)
        (nil)))
(call_insn 60 59 61 6 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:24 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 62 6 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:25 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 62 61 63 6 (set (reg:DI 5 di)
        (reg:DI 121)) intcode.cpp:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121)
        (nil)))
(call_insn 63 62 64 6 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b21b0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 64 63 65 6 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:26 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 65 64 66 6 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -544 [0xfffffffffffffde0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:26 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 66 65 67 6 (set (reg:DI 4 si)
        (reg:DI 122)) intcode.cpp:26 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 122)
        (nil)))
(insn 67 66 68 6 (set (reg:DI 5 di)
        (reg:DI 123)) intcode.cpp:26 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123)
        (nil)))
(call_insn 68 67 69 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE") [flags 0x41]  <function_decl 0x7fdf7cc52e58 getline>) [0 getline S1 A8])
            (const_int 0 [0]))) intcode.cpp:26 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 5 [0x5])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       31 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 124 125 126 127 128
(note 69 68 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 7 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1072 [0xfffffffffffffbd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:27 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 71 70 72 7 (set (reg:DI 5 di)
        (reg:DI 124)) intcode.cpp:27 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(call_insn 72 71 73 7 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:27 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 73 72 74 7 (set (reg/f:DI 91 [ D.48690 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:27 89 {*movdi_internal}
     (nil))
(insn 74 73 75 7 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1072 [0xfffffffffffffbd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:27 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 75 74 76 7 (set (reg:DI 4 si)
        (reg:DI 125)) intcode.cpp:27 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(insn 76 75 77 7 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48690 ])) intcode.cpp:27 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48690 ])
        (nil)))
(call_insn 77 76 78 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEaSEOS1_") [flags 0x3]  <function_decl 0x7fdf7c18d510 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) intcode.cpp:27 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 78 77 79 7 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1072 [0xfffffffffffffbd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:27 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 79 78 80 7 (set (reg:DI 5 di)
        (reg:DI 126)) intcode.cpp:27 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (nil)))
(call_insn 80 79 81 7 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:27 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 81 80 82 7 (set (reg:SI 4 si)
        (const_int 8 [0x8])) intcode.cpp:28 90 {*movsi_internal}
     (nil))
(insn 82 81 83 7 (set (reg:SI 5 di)
        (const_int 16 [0x10])) intcode.cpp:28 90 {*movsi_internal}
     (nil))
(call_insn 83 82 84 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZStorSt13_Ios_OpenmodeS_") [flags 0x3]  <function_decl 0x7fdf7c9afd80 operator|>) [0 operator| S1 A8])
            (const_int 0 [0]))) intcode.cpp:28 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 84 83 85 7 (set (reg:SI 92 [ D.48691 ])
        (reg:SI 0 ax)) intcode.cpp:28 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 85 84 86 7 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:28 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 86 85 87 7 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:28 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 87 86 88 7 (set (reg:SI 1 dx)
        (reg:SI 92 [ D.48691 ])) intcode.cpp:28 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ D.48691 ])
        (nil)))
(insn 88 87 89 7 (set (reg:DI 4 si)
        (reg:DI 127)) intcode.cpp:28 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(insn 89 88 90 7 (set (reg:DI 5 di)
        (reg:DI 128)) intcode.cpp:28 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128)
        (nil)))
(call_insn 90 89 123 7 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode") [flags 0x41]  <function_decl 0x7fdf7c757948 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:28 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 5 [0x5])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       31 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              13 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 129 130
(code_label 123 90 91 8 27 "" [1 uses])
(note 91 123 92 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 8 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1072 [0xfffffffffffffbd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:31 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 93 92 94 8 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:31 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 94 93 95 8 (set (reg:DI 4 si)
        (reg:DI 129)) intcode.cpp:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 129)
        (nil)))
(insn 95 94 96 8 (set (reg:DI 5 di)
        (reg:DI 130)) intcode.cpp:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 130)
        (nil)))
(call_insn 96 95 265 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSirsERx") [flags 0x41]  <function_decl 0x7fdf7c5cad80 operator>>>) [0 operator>> S1 A8])
            (const_int 0 [0]))) intcode.cpp:31 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 6 [0x6])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       29 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 131
(note 265 96 97 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 97 265 99 9 (set (reg/f:DI 93 [ D.48692 ])
        (reg:DI 0 ax)) intcode.cpp:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 99 97 100 9 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1074 [0xfffffffffffffbce])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:31 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 100 99 101 9 (set (reg:DI 4 si)
        (reg:DI 131)) intcode.cpp:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131)
        (nil)))
(insn 101 100 102 9 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.48692 ])) intcode.cpp:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.48692 ])
        (nil)))
(call_insn 102 101 266 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_") [flags 0x41]  <function_decl 0x7fdf7c686360 operator>>>) [0 operator>> S1 A8])
            (const_int 0 [0]))) intcode.cpp:31 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 6 [0x6])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       29 (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 95 96 97 98 99
(note 266 102 103 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 103 266 105 10 (set (reg/f:DI 94 [ D.48693 ])
        (reg:DI 0 ax)) intcode.cpp:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 105 103 106 10 (set (reg/f:DI 95 [ D.48694 ])
        (mem/f/j:DI (reg/f:DI 94 [ D.48693 ]) [0 _45->_vptr.basic_istream+0 S8 A64])) intcode.cpp:31 89 {*movdi_internal}
     (nil))
(insn 106 105 107 10 (parallel [
            (set (reg/f:DI 96 [ D.48694 ])
                (plus:DI (reg/f:DI 95 [ D.48694 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:31 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.48694 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 107 106 108 10 (set (reg:DI 97 [ D.48695 ])
        (mem:DI (reg/f:DI 96 [ D.48694 ]) [0 MEM[(long int *)_47]+0 S8 A64])) intcode.cpp:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.48694 ])
        (nil)))
(insn 108 107 109 10 (set (reg:DI 98 [ D.48696 ])
        (reg:DI 97 [ D.48695 ])) intcode.cpp:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97 [ D.48695 ])
        (nil)))
(insn 109 108 110 10 (parallel [
            (set (reg/f:DI 99 [ D.48697 ])
                (plus:DI (reg/f:DI 94 [ D.48693 ])
                    (reg:DI 98 [ D.48696 ])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:31 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 98 [ D.48696 ])
        (expr_list:REG_DEAD (reg/f:DI 94 [ D.48693 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 110 109 111 10 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.48697 ])) intcode.cpp:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.48697 ])
        (nil)))
(call_insn 111 110 267 10 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv") [flags 0x41]  <function_decl 0x7fdf7c8ce6c0 operator 2>) [0 operator 2 S1 A8])
            (const_int 0 [0]))) intcode.cpp:31 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 6 [0x6])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       29 (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100
(note 267 111 112 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 112 267 114 11 (set (reg:QI 100 [ D.48698 ])
        (reg:QI 0 ax)) intcode.cpp:31 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 114 112 115 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ D.48698 ])
            (const_int 0 [0]))) intcode.cpp:31 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 100 [ D.48698 ])
        (nil)))
(jump_insn 115 114 116 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) intcode.cpp:31 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 126)
;;  succ:       12 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 101 132
(note 116 115 117 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 12 (set (reg/f:DI 101 [ D.48690 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:32 89 {*movdi_internal}
     (nil))
(insn 118 117 119 12 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1072 [0xfffffffffffffbd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:32 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 119 118 120 12 (set (reg:DI 4 si)
        (reg:DI 132)) intcode.cpp:32 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(insn 120 119 121 12 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.48690 ])) intcode.cpp:32 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.48690 ])
        (nil)))
(call_insn 121 120 122 12 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE9push_backERKx") [flags 0x3]  <function_decl 0x7fdf7c19b5e8 push_back>) [0 push_back S1 A8])
        (const_int 0 [0])) intcode.cpp:32 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 6 [0x6])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       29 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 122 121 315 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 315 122 316 13 (set (pc)
        (label_ref 123)) intcode.cpp:31 654 {jump}
     (nil)
 -> 123)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 316 315 126)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102 133
(code_label 126 316 127 14 26 "" [1 uses])
(note 127 126 128 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 14 (set (reg/f:DI 102 [ D.48690 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:34 89 {*movdi_internal}
     (nil))
(insn 129 128 130 14 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1072 [0xfffffffffffffbd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:34 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 130 129 131 14 (set (reg:DI 4 si)
        (reg:DI 133)) intcode.cpp:34 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(insn 131 130 132 14 (set (reg:DI 5 di)
        (reg/f:DI 102 [ D.48690 ])) intcode.cpp:34 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.48690 ])
        (nil)))
(call_insn 132 131 133 14 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE9push_backERKx") [flags 0x3]  <function_decl 0x7fdf7c19b5e8 push_back>) [0 push_back S1 A8])
        (const_int 0 [0])) intcode.cpp:34 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 6 [0x6])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       29 (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 134 135 136 137 138
(note 133 132 134 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 15 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:36 89 {*movdi_internal}
     (nil))
(insn 135 134 136 15 (set (mem/j:SI (plus:DI (reg/f:DI 134)
                (const_int 24 [0x18])) [0 this_9(D)->ind+0 S4 A64])
        (const_int 0 [0])) intcode.cpp:36 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134)
        (nil)))
(insn 136 135 137 15 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:37 89 {*movdi_internal}
     (nil))
(insn 137 136 138 15 (set (mem/j:SI (plus:DI (reg/f:DI 135)
                (const_int 28 [0x1c])) [0 this_9(D)->rel+0 S4 A32])
        (const_int 0 [0])) intcode.cpp:37 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135)
        (nil)))
(insn 138 137 139 15 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:38 89 {*movdi_internal}
     (nil))
(insn 139 138 140 15 (set (mem/j:QI (plus:DI (reg/f:DI 136)
                (const_int 80 [0x50])) [0 this_9(D)->done+0 S1 A64])
        (const_int 0 [0])) intcode.cpp:38 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136)
        (nil)))
(insn 140 139 141 15 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:39 89 {*movdi_internal}
     (nil))
(insn 141 140 142 15 (set (reg:QI 138)
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1104 [0xfffffffffffffbb0])) [0 debug+0 S1 A32])) intcode.cpp:39 93 {*movqi_internal}
     (nil))
(insn 142 141 143 15 (set (mem/j:QI (plus:DI (reg/f:DI 137)
                (const_int 81 [0x51])) [0 this_9(D)->debug+0 S1 A8])
        (reg:QI 138)) intcode.cpp:39 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 138)
        (expr_list:REG_DEAD (reg/f:DI 137)
            (nil))))
(insn 143 142 144 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -1104 [0xfffffffffffffbb0])) [0 debug+0 S1 A32])
            (const_int 0 [0]))) intcode.cpp:40 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 144 143 145 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) intcode.cpp:40 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 168)
;;  succ:       16 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 139 140 141
(note 145 144 146 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 16 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1073 [0xfffffffffffffbcf])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:41 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 147 146 148 16 (set (reg:DI 5 di)
        (reg:DI 139)) intcode.cpp:41 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 139)
        (nil)))
(call_insn 148 147 149 16 (call (mem:QI (symbol_ref:DI ("_ZNSaIcEC1Ev") [flags 0x41]  <function_decl 0x7fdf7d57a870 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:41 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 149 148 150 16 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1073 [0xfffffffffffffbcf])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:41 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 150 149 151 16 (parallel [
            (set (reg:DI 141)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -976 [0xfffffffffffffc30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:41 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 151 150 152 16 (set (reg:DI 1 dx)
        (reg:DI 140)) intcode.cpp:41 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 140)
        (nil)))
(insn 152 151 153 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fdf7b957090 *.LC2>)) intcode.cpp:41 89 {*movdi_internal}
     (nil))
(insn 153 152 154 16 (set (reg:DI 5 di)
        (reg:DI 141)) intcode.cpp:41 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 141)
        (nil)))
(call_insn 154 153 155 16 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_") [flags 0x41]  <function_decl 0x7fdf7d0b06c0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:41 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 7 [0x7])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       27 (ABNORMAL,ABNORMAL_CALL,EH)
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 142 143
(note 155 154 156 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 17 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -976 [0xfffffffffffffc30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:41 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 157 156 158 17 (set (reg:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:41 89 {*movdi_internal}
     (nil))
(insn 158 157 159 17 (set (reg:DI 4 si)
        (reg:DI 142)) intcode.cpp:41 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 142)
        (nil)))
(insn 159 158 160 17 (set (reg:DI 5 di)
        (reg:DI 143)) intcode.cpp:41 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 143)
        (nil)))
(call_insn 160 159 161 17 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode3logENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x3]  <function_decl 0x7fdf7bddba20 log>) [0 log S1 A8])
        (const_int 0 [0])) intcode.cpp:41 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       26 (ABNORMAL,ABNORMAL_CALL,EH)
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 144 145
(note 161 160 162 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 18 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -976 [0xfffffffffffffc30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:41 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 163 162 164 18 (set (reg:DI 5 di)
        (reg:DI 144)) intcode.cpp:41 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 144)
        (nil)))
(call_insn 164 163 165 18 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:41 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 165 164 166 18 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1073 [0xfffffffffffffbcf])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:41 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 166 165 167 18 (set (reg:DI 5 di)
        (reg:DI 145)) intcode.cpp:41 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 145)
        (nil)))
(call_insn 167 166 168 18 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x7fdf7d57aa20 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:41 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 146 147 148
(code_label 168 167 169 19 28 "" [1 uses])
(note 169 168 170 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 19 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:28 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 171 170 172 19 (set (reg:DI 5 di)
        (reg:DI 146)) intcode.cpp:28 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(call_insn 172 171 173 19 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7c757d80 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:28 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 173 172 174 19 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:25 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 174 173 175 19 (set (reg:DI 5 di)
        (reg:DI 147)) intcode.cpp:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147)
        (nil)))
(call_insn 175 174 176 19 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 176 175 177 19 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -544 [0xfffffffffffffde0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 177 176 178 19 (set (reg:DI 5 di)
        (reg:DI 148)) intcode.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 148)
        (nil)))
(call_insn 178 177 314 19 (call (mem:QI (symbol_ref:DI ("_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7c0ea000 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:24 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 314 178 259 19 (const_int 0 [0]) intcode.cpp:43 684 {nop}
     (nil))
(insn 259 314 260 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48700+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) intcode.cpp:43 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 260 259 317 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) intcode.cpp:43 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 263)
;;  succ:       36
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 317 260 319 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 319 317 320 20 (set (pc)
        (label_ref 318)) 654 {jump}
     (nil)
 -> 318)
;;  succ:       35 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 320 319 288)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 21 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 149 150 151
(code_label/s 288 320 291 21 41 "" [1 uses])
(note 291 288 289 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 289 291 183 21 (set (reg:DI 151)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 183 289 184 21 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1040 [0xfffffffffffffbf0])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 184 183 185 21 (set (reg:DI 5 di)
        (reg:DI 149)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 149)
        (nil)))
(call_insn 185 184 186 21 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 186 185 321 21 (set (reg:DI 150)
        (reg:DI 151)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 151)
        (nil)))
(jump_insn 321 186 322 21 (set (pc)
        (label_ref 188)) 654 {jump}
     (nil)
 -> 188)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150

(barrier 322 321 282)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 22 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 150
(code_label/s 282 322 287 22 40 "" [1 uses])
(note 287 282 283 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 283 287 188 22 (set (reg:DI 150)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       23 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 [100.0%]  (FALLTHRU)
;;              21 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 154 155
(code_label 188 283 189 23 30 "" [1 uses])
(note 189 188 190 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 23 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 191 190 192 23 (set (reg:DI 5 di)
        (reg:DI 154)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 154)
        (nil)))
(call_insn 192 191 193 23 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 193 192 323 23 (set (reg:DI 155)
        (reg:DI 150)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 150)
        (nil)))
(jump_insn 323 193 324 23 (set (pc)
        (label_ref 195)) 654 {jump}
     (nil)
 -> 195)
;;  succ:       25 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 155

(barrier 324 323 276)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 24 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 155
(code_label/s 276 324 281 24 39 "" [1 uses])
(note 281 276 277 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 277 281 195 24 (set (reg:DI 155)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 155

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 [100.0%]  (FALLTHRU)
;;              23 [100.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 155
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 155
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 157 158
(code_label 195 277 196 25 31 "" [1 uses])
(note 196 195 197 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 25 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 198 197 199 25 (set (reg:DI 5 di)
        (reg:DI 157)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 157)
        (nil)))
(call_insn 199 198 200 25 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 200 199 325 25 (set (reg:DI 158)
        (reg:DI 155)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 155)
        (nil)))
(jump_insn 325 200 326 25 (set (pc)
        (label_ref 237)) 654 {jump}
     (nil)
 -> 237)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 158

(barrier 326 325 310)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 26 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 160 161 162
(code_label/s 310 326 313 26 45 "" [1 uses])
(note 313 310 311 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 311 313 206 26 (set (reg:DI 162)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 206 311 207 26 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -976 [0xfffffffffffffc30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:41 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 207 206 208 26 (set (reg:DI 5 di)
        (reg:DI 160)) intcode.cpp:41 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 160)
        (nil)))
(call_insn 208 207 209 26 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:41 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 209 208 327 26 (set (reg:DI 161)
        (reg:DI 162)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 162)
        (nil)))
(jump_insn 327 209 328 26 (set (pc)
        (label_ref 211)) 654 {jump}
     (nil)
 -> 211)
;;  succ:       28 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 161

(barrier 328 327 304)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 27 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 161
(code_label/s 304 328 309 27 44 "" [1 uses])
(note 309 304 305 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 305 309 211 27 (set (reg:DI 161)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       28 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 161

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 [100.0%]  (FALLTHRU)
;;              26 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 161
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 161
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 165 166
(code_label 211 305 212 28 34 "" [1 uses])
(note 212 211 213 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 214 28 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1073 [0xfffffffffffffbcf])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:41 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 214 213 215 28 (set (reg:DI 5 di)
        (reg:DI 165)) intcode.cpp:41 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 165)
        (nil)))
(call_insn 215 214 216 28 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x7fdf7d57aa20 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:41 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 216 215 329 28 (set (reg:DI 166)
        (reg:DI 161)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 161)
        (nil)))
(jump_insn 329 216 330 28 (set (pc)
        (label_ref 218)) 654 {jump}
     (nil)
 -> 218)
;;  succ:       30 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 166

(barrier 330 329 298)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 29 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 166
(code_label/s 298 330 303 29 43 "" [1 uses])
(note 303 298 299 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 299 303 218 29 (set (reg:DI 166)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 166

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 [100.0%]  (FALLTHRU)
;;              28 [100.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 166
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 166
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 168 169
(code_label 218 299 219 30 35 "" [1 uses])
(note 219 218 220 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 30 (parallel [
            (set (reg:DI 168)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -944 [0xfffffffffffffc50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:28 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 221 220 222 30 (set (reg:DI 5 di)
        (reg:DI 168)) intcode.cpp:28 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 168)
        (nil)))
(call_insn 222 221 223 30 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7c757d80 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:28 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 223 222 331 30 (set (reg:DI 169)
        (reg:DI 166)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 166)
        (nil)))
(jump_insn 331 223 332 30 (set (pc)
        (label_ref 225)) 654 {jump}
     (nil)
 -> 225)
;;  succ:       32 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 169

(barrier 332 331 292)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 31 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 169
(code_label/s 292 332 297 31 42 "" [1 uses])
(note 297 292 293 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 293 297 225 31 (set (reg:DI 169)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       32 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 169

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 [100.0%]  (FALLTHRU)
;;              30 [100.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 169
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 169
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 158 171 172 174
(code_label 225 293 226 32 36 "" [1 uses])
(note 226 225 227 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 32 (parallel [
            (set (reg:DI 171)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:25 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 228 227 229 32 (set (reg:DI 5 di)
        (reg:DI 171)) intcode.cpp:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 171)
        (nil)))
(call_insn 229 228 230 32 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 230 229 232 32 (set (reg:DI 172)
        (reg:DI 169)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 169)
        (nil)))
(insn 232 230 233 32 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -544 [0xfffffffffffffde0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 233 232 234 32 (set (reg:DI 5 di)
        (reg:DI 174)) intcode.cpp:24 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 174)
        (nil)))
(call_insn 234 233 235 32 (call (mem:QI (symbol_ref:DI ("_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7c0ea000 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:24 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 235 234 333 32 (set (reg:DI 158)
        (reg:DI 172)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 172)
        (nil)))
(jump_insn 333 235 334 32 (set (pc)
        (label_ref 237)) 654 {jump}
     (nil)
 -> 237)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 158

(barrier 334 333 270)
;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 33 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 158
(code_label/s 270 334 275 33 38 "" [1 uses])
(note 275 270 271 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 271 275 237 33 (set (reg:DI 158)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       34 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 158

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 [100.0%]  (FALLTHRU)
;;              25 [100.0%] 
;;              32 [100.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 158
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 104 105 106 175 176 178 179
(code_label 237 271 238 34 32 "" [2 uses])
(note 238 237 239 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 34 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:23 89 {*movdi_internal}
     (nil))
(insn 240 239 241 34 (parallel [
            (set (reg/f:DI 103 [ D.48690 ])
                (plus:DI (reg/f:DI 175)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:23 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 175)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 241 240 242 34 (set (reg:DI 5 di)
        (reg/f:DI 103 [ D.48690 ])) intcode.cpp:23 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.48690 ])
        (nil)))
(call_insn 242 241 243 34 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:23 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 243 242 245 34 (set (reg:DI 176)
        (reg:DI 158)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 158)
        (nil)))
(insn 245 243 246 34 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:23 89 {*movdi_internal}
     (nil))
(insn 246 245 247 34 (parallel [
            (set (reg/f:DI 104 [ D.48690 ])
                (plus:DI (reg/f:DI 178)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:23 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 178)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 247 246 248 34 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.48690 ])) intcode.cpp:23 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.48690 ])
        (nil)))
(call_insn 248 247 249 34 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:23 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 249 248 251 34 (set (reg:DI 179)
        (reg:DI 176)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 176)
        (nil)))
(insn 251 249 252 34 (set (reg/f:DI 105 [ D.48690 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1096 [0xfffffffffffffbb8])) [0 this+0 S8 A64])) intcode.cpp:23 89 {*movdi_internal}
     (nil))
(insn 252 251 253 34 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.48690 ])) intcode.cpp:23 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.48690 ])
        (nil)))
(call_insn 253 252 254 34 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:23 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 254 253 255 34 (set (reg/f:DI 106 [ D.48689 ])
        (reg:DI 179)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 179)
        (nil)))
(insn 255 254 256 34 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.48689 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ D.48689 ])
        (nil)))
(call_insn 256 255 257 34 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 257 256 318)
;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 318 257 268 35 46 "" [1 uses])
(note 268 318 261 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(call_insn 261 268 262 35 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) intcode.cpp:43 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 262 261 263)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 263 262 269 36 37 "" [1 uses])
(note 269 263 0 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function IntCode::IntCode(const std::vector<long long int>&, bool) (_ZN7IntCodeC2ERKSt6vectorIxSaIxEEb, funcdef_no=1892, decl_uid=43135, cgraph_uid=511, symbol_order=513)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 7 count 8 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 70.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r100,l0) best SIREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r98,l0) best SIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r95,l0) best DREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a5(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a10(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a11(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a12(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a13(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a14(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a18(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a19(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a20(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a22(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a24(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5

   Insn 70(l0): point = 1
   Insn 65(l0): point = 4
   Insn 64(l0): point = 6
   Insn 63(l0): point = 8
   Insn 62(l0): point = 10
   Insn 61(l0): point = 12
   Insn 60(l0): point = 14
   Insn 58(l0): point = 16
   Insn 57(l0): point = 18
   Insn 56(l0): point = 20
   Insn 55(l0): point = 22
   Insn 54(l0): point = 24
   Insn 52(l0): point = 26
   Insn 51(l0): point = 28
   Insn 50(l0): point = 30
   Insn 49(l0): point = 32
   Insn 48(l0): point = 34
   Insn 77(l0): point = 36
   Insn 83(l0): point = 39
   Insn 69(l0): point = 42
   Insn 68(l0): point = 44
   Insn 80(l0): point = 46
   Insn 43(l0): point = 48
   Insn 42(l0): point = 50
   Insn 41(l0): point = 52
   Insn 40(l0): point = 54
   Insn 39(l0): point = 56
   Insn 38(l0): point = 58
   Insn 37(l0): point = 60
   Insn 36(l0): point = 62
   Insn 35(l0): point = 64
   Insn 34(l0): point = 66
   Insn 33(l0): point = 68
   Insn 32(l0): point = 70
   Insn 31(l0): point = 72
   Insn 30(l0): point = 74
   Insn 29(l0): point = 76
   Insn 28(l0): point = 78
   Insn 27(l0): point = 80
   Insn 25(l0): point = 83
   Insn 24(l0): point = 85
   Insn 23(l0): point = 87
   Insn 22(l0): point = 89
   Insn 21(l0): point = 91
   Insn 20(l0): point = 93
   Insn 19(l0): point = 95
   Insn 18(l0): point = 97
   Insn 17(l0): point = 99
   Insn 16(l0): point = 101
   Insn 15(l0): point = 103
   Insn 14(l0): point = 105
   Insn 13(l0): point = 107
   Insn 12(l0): point = 109
   Insn 11(l0): point = 111
   Insn 10(l0): point = 113
   Insn 7(l0): point = 115
   Insn 5(l0): point = 117
   Insn 4(l0): point = 119
   Insn 3(l0): point = 121
   Insn 2(l0): point = 123
 a0(r94): [7..8]
 a1(r113): [9..16]
 a2(r93): [13..14]
 a3(r108): [17..26]
 a4(r92): [21..22]
 a5(r112): [23..24]
 a6(r109): [27..36]
 a7(r91): [31..32]
 a8(r107): [33..34]
 a9(r105): [49..52]
 a10(r106): [49..50]
 a11(r104): [55..56]
 a12(r103): [59..60]
 a13(r102): [63..64]
 a14(r101): [69..70]
 a15(r90): [75..80]
 a16(r100): [77..78]
 a17(r99): [86..89]
 a18(r98): [88..91]
 a19(r89): [96..97]
 a20(r97): [98..99]
 a21(r88): [104..105]
 a22(r96): [106..107]
 a23(r87): [112..113]
 a24(r95): [118..119]
Compressing live ranges: from 126 to 38 - 30%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r113): [2..3]
 a2(r93): [2..3]
 a3(r108): [4..7]
 a4(r92): [4..5]
 a5(r112): [6..7]
 a6(r109): [8..11]
 a7(r91): [8..9]
 a8(r107): [10..11]
 a9(r105): [12..13]
 a10(r106): [12..13]
 a11(r104): [14..15]
 a12(r103): [16..17]
 a13(r102): [18..19]
 a14(r101): [20..21]
 a15(r90): [22..23]
 a16(r100): [22..23]
 a17(r99): [24..25]
 a18(r98): [24..25]
 a19(r89): [26..27]
 a20(r97): [28..29]
 a21(r88): [30..31]
 a22(r96): [32..33]
 a23(r87): [34..35]
 a24(r95): [36..37]
  regions=1, blocks=8, points=38
    allocnos=25 (big 0), copies=0, conflicts=0, ranges=25
Disposition:
   23:r87  l0     0   21:r88  l0     0   19:r89  l0     0   15:r90  l0     0
    7:r91  l0     0    4:r92  l0     0    2:r93  l0     0    0:r94  l0     0
   24:r95  l0     0   22:r96  l0     0   20:r97  l0     0   18:r98  l0     1
   17:r99  l0     0   16:r100 l0     1   14:r101 l0     0   13:r102 l0     0
   12:r103 l0     0   11:r104 l0     0    9:r105 l0     0   10:r106 l0     1
    8:r107 l0     0    3:r108 l0     3    6:r109 l0     3    5:r112 l0     0
    1:r113 l0     3
+++Costs: overall -14, reg -14, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


IntCode::IntCode(const std::vector<long long int>&, bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={13d,1u} r1={13d,1u} r2={12d} r4={14d,3u} r5={22d,11u} r6={1d,7u} r7={1d,18u} r8={11d} r9={11d} r10={11d} r11={11d} r12={11d} r13={11d} r14={11d} r15={11d} r16={1d,6u} r17={20d,1u} r18={11d} r19={11d} r20={1d,28u,4e} r21={12d} r22={12d} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={12d} r38={12d} r39={11d} r40={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r112={1d,1u} r113={1d,1u} 
;;    total ref usage 964{859d,101u,4e} in 60{49 regular + 11 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 95 96 97 98 99
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:45 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 inputRegs+0 S8 A64])
        (reg:DI 4 si [ inputRegs ])) intcode.cpp:45 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ inputRegs ])
        (nil)))
(insn 4 3 5 2 (set (reg:SI 95)
        (reg:SI 1 dx [ debug ])) intcode.cpp:45 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ debug ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 debug+0 S1 A32])
        (subreg:QI (reg:SI 95) 0)) intcode.cpp:45 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(note 6 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48708+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:45 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 7 11 2 (set (reg/f:DI 87 [ D.48707 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:45 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48707 ])) intcode.cpp:45 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48707 ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:45 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:45 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 88 [ D.48707 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:45 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48707 ])) intcode.cpp:45 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48707 ])
        (nil)))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:45 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:45 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 89 [ D.48707 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:45 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.48707 ])) intcode.cpp:45 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48707 ])
        (nil)))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:45 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 inputRegs+0 S8 A64])) intcode.cpp:46 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:46 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (reg:DI 98)) intcode.cpp:46 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 99)) intcode.cpp:46 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 25 24 26 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1ERKS1_") [flags 0x3]  <function_decl 0x7fdf7bdc0438 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:46 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 100 101 102 103 104 105 106
(note 26 25 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (reg/f:DI 90 [ D.48707 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:46 89 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:46 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 3 (set (reg:DI 4 si)
        (reg:DI 100)) intcode.cpp:46 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(insn 30 29 31 3 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.48707 ])) intcode.cpp:46 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48707 ])
        (nil)))
(call_insn 31 30 32 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEaSEOS1_") [flags 0x3]  <function_decl 0x7fdf7c18d510 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) intcode.cpp:46 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 3 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:46 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 34 3 (set (reg:DI 5 di)
        (reg:DI 101)) intcode.cpp:46 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 34 33 35 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:46 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 34 36 3 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:47 89 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (mem/j:SI (plus:DI (reg/f:DI 102)
                (const_int 24 [0x18])) [0 this_1(D)->ind+0 S4 A64])
        (const_int 0 [0])) intcode.cpp:47 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(insn 37 36 38 3 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:48 89 {*movdi_internal}
     (nil))
(insn 38 37 39 3 (set (mem/j:SI (plus:DI (reg/f:DI 103)
                (const_int 28 [0x1c])) [0 this_1(D)->rel+0 S4 A32])
        (const_int 0 [0])) intcode.cpp:48 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (nil)))
(insn 39 38 40 3 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:49 89 {*movdi_internal}
     (nil))
(insn 40 39 41 3 (set (mem/j:QI (plus:DI (reg/f:DI 104)
                (const_int 80 [0x50])) [0 this_1(D)->done+0 S1 A64])
        (const_int 0 [0])) intcode.cpp:49 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (nil)))
(insn 41 40 42 3 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:50 89 {*movdi_internal}
     (nil))
(insn 42 41 43 3 (set (reg:QI 106)
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 debug+0 S1 A32])) intcode.cpp:50 93 {*movqi_internal}
     (nil))
(insn 43 42 80 3 (set (mem/j:QI (plus:DI (reg/f:DI 105)
                (const_int 81 [0x51])) [0 this_1(D)->debug+0 S1 A8])
        (reg:QI 106)) intcode.cpp:50 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 106)
        (expr_list:REG_DEAD (reg/f:DI 105)
            (nil))))
(insn 80 43 68 3 (const_int 0 [0]) intcode.cpp:51 684 {nop}
     (nil))
(insn 68 80 69 3 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48708+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) intcode.cpp:51 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 69 68 81 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) intcode.cpp:51 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 72)
;;  succ:       7
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 81 69 83 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 83 81 84 4 (set (pc)
        (label_ref 82)) 654 {jump}
     (nil)
 -> 82)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 84 83 76)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 5 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 94 107 108 109 112 113
(code_label/s 76 84 79 5 50 "" [1 uses])
(note 79 76 77 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 77 79 48 5 (set (reg:DI 109)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 48 77 49 5 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:45 89 {*movdi_internal}
     (nil))
(insn 49 48 50 5 (parallel [
            (set (reg/f:DI 91 [ D.48707 ])
                (plus:DI (reg/f:DI 107)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:45 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 50 49 51 5 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48707 ])) intcode.cpp:45 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48707 ])
        (nil)))
(call_insn 51 50 52 5 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:45 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 52 51 54 5 (set (reg:DI 108)
        (reg:DI 109)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(insn 54 52 55 5 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:45 89 {*movdi_internal}
     (nil))
(insn 55 54 56 5 (parallel [
            (set (reg/f:DI 92 [ D.48707 ])
                (plus:DI (reg/f:DI 112)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:45 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 56 55 57 5 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.48707 ])) intcode.cpp:45 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.48707 ])
        (nil)))
(call_insn 57 56 58 5 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:45 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 58 57 60 5 (set (reg:DI 113)
        (reg:DI 108)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 60 58 61 5 (set (reg/f:DI 93 [ D.48707 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:45 89 {*movdi_internal}
     (nil))
(insn 61 60 62 5 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.48707 ])) intcode.cpp:45 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.48707 ])
        (nil)))
(call_insn 62 61 63 5 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:45 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 63 62 64 5 (set (reg/f:DI 94 [ D.48706 ])
        (reg:DI 113)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(insn 64 63 65 5 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.48706 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.48706 ])
        (nil)))
(call_insn 65 64 66 5 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 66 65 82)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 82 66 74 6 51 "" [1 uses])
(note 74 82 70 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 70 74 71 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) intcode.cpp:51 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 71 70 72)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 72 71 75 7 49 "" [1 uses])
(note 75 72 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function IntCode::IntCode() (_ZN7IntCodeC2Ev, funcdef_no=1895, decl_uid=43129, cgraph_uid=514, symbol_order=516)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 27(l0): point = 0
   Insn 24(l0): point = 2
   Insn 23(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 7(l0): point = 36
   Insn 6(l0): point = 38
   Insn 2(l0): point = 40
 a0(r95): [3..4]
 a1(r94): [7..8]
 a2(r93): [11..12]
 a3(r92): [15..16]
 a4(r89): [21..22]
 a5(r91): [23..24]
 a6(r88): [29..30]
 a7(r90): [31..32]
 a8(r87): [37..38]
Compressing live ranges: from 43 to 18 - 41%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r94): [2..3]
 a2(r93): [4..5]
 a3(r92): [6..7]
 a4(r89): [8..9]
 a5(r91): [10..11]
 a6(r88): [12..13]
 a7(r90): [14..15]
 a8(r87): [16..17]
  regions=1, blocks=3, points=18
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    8:r87  l0     0    6:r88  l0     0    4:r89  l0     0    7:r90  l0     0
    5:r91  l0     0    3:r92  l0     0    2:r93  l0     0    1:r94  l0     0
    0:r95  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


IntCode::IntCode()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={5d} r18={3d} r19={3d} r20={1d,10u,2e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 282{249d,31u,2e} in 21{18 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.48709 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:53 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48709 ])) intcode.cpp:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48709 ])
        (nil)))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:53 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:53 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 88 [ D.48709 ])
                (plus:DI (reg/f:DI 90)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:53 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48709 ])) intcode.cpp:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48709 ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:53 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:53 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 89 [ D.48709 ])
                (plus:DI (reg/f:DI 91)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:53 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.48709 ])) intcode.cpp:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48709 ])
        (nil)))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:53 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:54 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/j:SI (plus:DI (reg/f:DI 92)
                (const_int 24 [0x18])) [0 this_1(D)->ind+0 S4 A64])
        (const_int 0 [0])) intcode.cpp:54 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:55 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/j:SI (plus:DI (reg/f:DI 93)
                (const_int 28 [0x1c])) [0 this_1(D)->rel+0 S4 A32])
        (const_int 0 [0])) intcode.cpp:55 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:56 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/j:QI (plus:DI (reg/f:DI 94)
                (const_int 80 [0x50])) [0 this_1(D)->done+0 S1 A64])
        (const_int 0 [0])) intcode.cpp:56 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:57 89 {*movdi_internal}
     (nil))
(insn 24 23 27 2 (set (mem/j:QI (plus:DI (reg/f:DI 95)
                (const_int 81 [0x51])) [0 this_1(D)->debug+0 S1 A8])
        (const_int 0 [0])) intcode.cpp:57 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 27 24 0 2 (const_int 0 [0]) intcode.cpp:58 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void IntCode::step() (_ZN7IntCode4stepEv, funcdef_no=1897, decl_uid=43107, cgraph_uid=516, symbol_order=518)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 64 n_edges 86 count 64 (    1)
Building IRA IR
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 105.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 138.
verify found no changes in insn with uid = 145.
verify found no changes in insn with uid = 150.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 164.
verify found no changes in insn with uid = 172.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 182.
verify found no changes in insn with uid = 185.
verify found no changes in insn with uid = 188.
verify found no changes in insn with uid = 191.
verify found no changes in insn with uid = 194.
verify found no changes in insn with uid = 201.
verify found no changes in insn with uid = 215.
verify found no changes in insn with uid = 222.
verify found no changes in insn with uid = 227.
verify found no changes in insn with uid = 233.
verify found no changes in insn with uid = 239.
verify found no changes in insn with uid = 246.
verify found no changes in insn with uid = 252.
verify found no changes in insn with uid = 256.
verify found no changes in insn with uid = 259.
verify found no changes in insn with uid = 262.
verify found no changes in insn with uid = 266.
verify found no changes in insn with uid = 274.
verify found no changes in insn with uid = 280.
verify found no changes in insn with uid = 294.
verify found no changes in insn with uid = 302.
verify found no changes in insn with uid = 306.
verify found no changes in insn with uid = 311.
verify found no changes in insn with uid = 317.
verify found no changes in insn with uid = 323.
verify found no changes in insn with uid = 327.
verify found no changes in insn with uid = 330.
verify found no changes in insn with uid = 343.
verify found no changes in insn with uid = 349.
verify found no changes in insn with uid = 377.
verify found no changes in insn with uid = 383.
verify found no changes in insn with uid = 411.
verify found no changes in insn with uid = 417.
verify found no changes in insn with uid = 428.
verify found no changes in insn with uid = 441.
verify found no changes in insn with uid = 447.
verify found no changes in insn with uid = 458.
verify found no changes in insn with uid = 471.
verify found no changes in insn with uid = 499.
verify found no changes in insn with uid = 506.
verify found no changes in insn with uid = 516.
verify found no changes in insn with uid = 523.
verify found no changes in insn with uid = 530.
verify found no changes in insn with uid = 537.
verify found no changes in insn with uid = 544.
verify found no changes in insn with uid = 547.
verify found no changes in insn with uid = 553.
verify found no changes in insn with uid = 560.
verify found no changes in insn with uid = 567.
verify found no changes in insn with uid = 574.
verify found no changes in insn with uid = 581.
verify found no changes in insn with uid = 584.
verify found no changes in insn with uid = 590.
verify found no changes in insn with uid = 597.
verify found no changes in insn with uid = 604.
verify found no changes in insn with uid = 607.
verify found no changes in insn with uid = 613.
verify found no changes in insn with uid = 620.
verify found no changes in insn with uid = 623.
verify found no changes in insn with uid = 628.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r329: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r329,l0) best DIREG, allocno GENERAL_REGS
    r326: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r326,l0) best AREG, allocno GENERAL_REGS
    r325: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r325,l0) best AREG, allocno GENERAL_REGS
    r324: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r324,l0) best DIREG, allocno GENERAL_REGS
    r323: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r323,l0) best DIREG, allocno GENERAL_REGS
    r321: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r321,l0) best AREG, allocno GENERAL_REGS
    r320: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r320,l0) best DIREG, allocno GENERAL_REGS
    r317: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r317,l0) best AREG, allocno GENERAL_REGS
    r316: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r316,l0) best AREG, allocno GENERAL_REGS
    r315: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r315,l0) best DIREG, allocno GENERAL_REGS
    r314: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r314,l0) best DIREG, allocno GENERAL_REGS
    r312: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r312,l0) best AREG, allocno GENERAL_REGS
    r311: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r311,l0) best DIREG, allocno GENERAL_REGS
    r309: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r309,l0) best AREG, allocno GENERAL_REGS
    r308: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r308,l0) best DIREG, allocno GENERAL_REGS
    r306: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r306,l0) best AREG, allocno GENERAL_REGS
    r305: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r305,l0) best DIREG, allocno GENERAL_REGS
    r302: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r302,l0) best AREG, allocno GENERAL_REGS
    r301: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r301,l0) best AREG, allocno GENERAL_REGS
    r300: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r300,l0) best DIREG, allocno GENERAL_REGS
    r299: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r299,l0) best DIREG, allocno GENERAL_REGS
    r297: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r297,l0) best AREG, allocno GENERAL_REGS
    r296: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r296,l0) best DIREG, allocno GENERAL_REGS
    r294: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r294,l0) best AREG, allocno GENERAL_REGS
    r293: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r293,l0) best DIREG, allocno GENERAL_REGS
    r291: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r291,l0) best AREG, allocno GENERAL_REGS
    r290: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r290,l0) best DIREG, allocno GENERAL_REGS
    r287: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r287,l0) best AREG, allocno GENERAL_REGS
    r286: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r286,l0) best AREG, allocno GENERAL_REGS
    r285: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r285,l0) best DIREG, allocno GENERAL_REGS
    r284: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r284,l0) best AREG, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r277,l0) best AREG, allocno GENERAL_REGS
    r276: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r276,l0) best DIREG, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r273,l0) best DIREG, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r271,l0) best AREG, allocno GENERAL_REGS
    r270: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r270,l0) best DIREG, allocno GENERAL_REGS
    r269: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r269,l0) best AREG, allocno GENERAL_REGS
    r268: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r268,l0) best DIREG, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r265,l0) best DIREG, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r263,l0) best AREG, allocno GENERAL_REGS
    r262: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r262,l0) best DIREG, allocno GENERAL_REGS
    r261: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r261,l0) best AREG, allocno GENERAL_REGS
    r260: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r260,l0) best DIREG, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a82 (r255,l0) best AREG, allocno GENERAL_REGS
    r254: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a83 (r254,l0) best DIREG, allocno GENERAL_REGS
    r253: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a84 (r253,l0) best AREG, allocno GENERAL_REGS
    r252: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r252,l0) best DIREG, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a93 (r247,l0) best AREG, allocno GENERAL_REGS
    r246: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a94 (r246,l0) best DIREG, allocno GENERAL_REGS
    r245: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a95 (r245,l0) best AREG, allocno GENERAL_REGS
    r244: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r244,l0) best DIREG, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a101 (r241,l0) best DIREG, allocno GENERAL_REGS
    r240: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a102 (r240,l0) best DIREG, allocno GENERAL_REGS
    r239: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a103 (r239,l0) best DIREG, allocno GENERAL_REGS
    r238: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a104 (r238,l0) best SIREG, allocno GENERAL_REGS
    r237: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r237,l0) best DREG, allocno GENERAL_REGS
    r236: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r236,l0) best DIREG, allocno GENERAL_REGS
    r235: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a107 (r235,l0) best DIREG, allocno GENERAL_REGS
    r234: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a109 (r234,l0) best DIREG, allocno GENERAL_REGS
    r233: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r233,l0) best SIREG, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a114 (r231,l0) best DIREG, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a120 (r228,l0) best SIREG, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a122 (r226,l0) best DIREG, allocno GENERAL_REGS
    r225: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a123 (r225,l0) best SIREG, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a125 (r223,l0) best AREG, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a128 (r221,l0) best DIREG, allocno GENERAL_REGS
    r220: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a129 (r220,l0) best DIREG, allocno GENERAL_REGS
    r219: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a130 (r219,l0) best DIREG, allocno GENERAL_REGS
    r218: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a131 (r218,l0) best DIREG, allocno GENERAL_REGS
    r217: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a132 (r217,l0) best SIREG, allocno GENERAL_REGS
    r216: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a134 (r216,l0) best SIREG, allocno GENERAL_REGS
    r215: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a133 (r215,l0) best DIREG, allocno GENERAL_REGS
    r214: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a136 (r214,l0) best DREG, allocno GENERAL_REGS
    r213: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a135 (r213,l0) best DIREG, allocno GENERAL_REGS
    r212: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a137 (r212,l0) best DIREG, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a142 (r210,l0) best DIREG, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a151 (r206,l0) best DIREG, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a154 (r204,l0) best DIREG, allocno GENERAL_REGS
    r203: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a155 (r203,l0) best DIREG, allocno GENERAL_REGS
    r202: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a156 (r202,l0) best DIREG, allocno GENERAL_REGS
    r201: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a157 (r201,l0) best DIREG, allocno GENERAL_REGS
    r200: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a158 (r200,l0) best DIREG, allocno GENERAL_REGS
    r199: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a159 (r199,l0) best DIREG, allocno GENERAL_REGS
    r198: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a160 (r198,l0) best SIREG, allocno GENERAL_REGS
    r197: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a162 (r197,l0) best SIREG, allocno GENERAL_REGS
    r196: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a163 (r196,l0) best DREG, allocno GENERAL_REGS
    r195: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a161 (r195,l0) best DIREG, allocno GENERAL_REGS
    r194: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a165 (r194,l0) best SIREG, allocno GENERAL_REGS
    r193: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a164 (r193,l0) best DIREG, allocno GENERAL_REGS
    r192: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a167 (r192,l0) best DREG, allocno GENERAL_REGS
    r191: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a166 (r191,l0) best DIREG, allocno GENERAL_REGS
    r190: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a169 (r190,l0) best SIREG, allocno GENERAL_REGS
    r189: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a168 (r189,l0) best DIREG, allocno GENERAL_REGS
    r188: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a171 (r188,l0) best SIREG, allocno GENERAL_REGS
    r187: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a170 (r187,l0) best DIREG, allocno GENERAL_REGS
    r186: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a172 (r186,l0) best AREG, allocno GENERAL_REGS
    r185: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a173 (r185,l0) best DIREG, allocno GENERAL_REGS
    r184: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a174 (r184,l0) best AREG, allocno GENERAL_REGS
    r183: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a175 (r183,l0) best DIREG, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a180 (r180,l0) best DIREG, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a184 (r177,l0) best DIREG, allocno GENERAL_REGS
    r176: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a185 (r176,l0) best DIREG, allocno GENERAL_REGS
    r175: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a186 (r175,l0) best DIREG, allocno GENERAL_REGS
    r174: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a187 (r174,l0) best DIREG, allocno GENERAL_REGS
    r173: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a188 (r173,l0) best DIREG, allocno GENERAL_REGS
    r172: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a189 (r172,l0) best DIREG, allocno GENERAL_REGS
    r171: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a190 (r171,l0) best SIREG, allocno GENERAL_REGS
    r170: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a192 (r170,l0) best SIREG, allocno GENERAL_REGS
    r169: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a193 (r169,l0) best DREG, allocno GENERAL_REGS
    r168: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a191 (r168,l0) best DIREG, allocno GENERAL_REGS
    r167: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a195 (r167,l0) best SIREG, allocno GENERAL_REGS
    r166: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a194 (r166,l0) best DIREG, allocno GENERAL_REGS
    r165: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a197 (r165,l0) best DREG, allocno GENERAL_REGS
    r164: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a196 (r164,l0) best DIREG, allocno GENERAL_REGS
    r163: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a199 (r163,l0) best SIREG, allocno GENERAL_REGS
    r162: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a198 (r162,l0) best DIREG, allocno GENERAL_REGS
    r161: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a201 (r161,l0) best SIREG, allocno GENERAL_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a200 (r160,l0) best DIREG, allocno GENERAL_REGS
    r159: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a202 (r159,l0) best AREG, allocno GENERAL_REGS
    r158: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a203 (r158,l0) best DIREG, allocno GENERAL_REGS
    r157: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a204 (r157,l0) best AREG, allocno GENERAL_REGS
    r156: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a205 (r156,l0) best DIREG, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a221 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a220 (r141,l0) best DREG, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r138,l0) best DIREG, allocno GENERAL_REGS
    r137: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r137,l0) best DIREG, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r127,l0) best DREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r123,l0) best DREG, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a108 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a113 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a119 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a126 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r103,l0) best SIREG, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a139 (r102,l0) best AREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a143 (r100,l0) best DREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a144 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a145 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a152 (r95,l0) best DREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a181 (r92,l0) best DREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a222 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a223 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a224 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a2(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a6(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a7(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a9(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a11(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a13(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a14(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a16(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a18(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a20(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a21(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a22(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a23(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a24(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a25(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a26(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a27(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a29(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a30(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a31(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a32(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a33(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a34(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:34 INT_SSE_REGS:26 ALL_REGS:516 MEM:8
  a35(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a36(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a37(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a38(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a39(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a40(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a41(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a42(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a43(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a44(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a45(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a46(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a47(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a49(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a50(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a51(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a52(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a55(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a56(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a57(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a58(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a59(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a60(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a61(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a62(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a63(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a64(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a67(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a68(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a69(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a70(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a71(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a72(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a73(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a74(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a75(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a76(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a77(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a78(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a79(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a80(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a81(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a82(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a83(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a84(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a85(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a86(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a87(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a88(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a89(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a90(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a91(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a92(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a94(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a95(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a96(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a97(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a98(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a99(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a100(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a101(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a102(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a103(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a104(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a105(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a106(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a107(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a108(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a109(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a110(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a111(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a112(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a113(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a114(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a115(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a116(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a118(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a119(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a120(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a121(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a122(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a123(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a124(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a125(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a126(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a127(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a128(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a129(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a130(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a131(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a132(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a133(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a134(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a135(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a136(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a137(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a138(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a139(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a140(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a141(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a142(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a143(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a144(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a145(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a146(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a147(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a148(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a149(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a150(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a151(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a152(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a153(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a154(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a155(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a156(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a157(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a158(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a159(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a160(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a161(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a162(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a163(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a164(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a165(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a166(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a167(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a168(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a169(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a170(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a171(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a172(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a173(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a174(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a175(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a176(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a177(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a178(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a179(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a180(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a181(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a182(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a183(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a184(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a185(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a186(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a187(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a188(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a189(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a190(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a191(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a192(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a193(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a194(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a195(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a196(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a197(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a198(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a199(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a200(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a201(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a202(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a203(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a204(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a205(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a206(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a207(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a208(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a209(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a210(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a211(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:103 NO_REX_SSE_REGS:103 SSE_REGS:103 MMX_REGS:133 INT_SSE_REGS:109 ALL_REGS:2072 MEM:30
  a212(r91,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:46 NO_REX_SSE_REGS:46 SSE_REGS:46 MMX_REGS:66 INT_SSE_REGS:50 ALL_REGS:938 MEM:18
  a213(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a214(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a215(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:10
  a216(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a217(r145,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a218(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a219(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a220(r141,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a221(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a222(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a223(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a224(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a225(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a226(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 628(l0): point = 1
   Insn 623(l0): point = 4
   Insn 622(l0): point = 6
   Insn 621(l0): point = 8
   Insn 620(l0): point = 10
   Insn 619(l0): point = 12
   Insn 618(l0): point = 14
   Insn 708(l0): point = 17
   Insn 766(l0): point = 20
   Insn 614(l0): point = 22
   Insn 613(l0): point = 24
   Insn 612(l0): point = 26
   Insn 611(l0): point = 28
   Insn 714(l0): point = 30
   Insn 607(l0): point = 33
   Insn 606(l0): point = 35
   Insn 605(l0): point = 37
   Insn 604(l0): point = 39
   Insn 603(l0): point = 41
   Insn 602(l0): point = 43
   Insn 692(l0): point = 46
   Insn 764(l0): point = 49
   Insn 598(l0): point = 51
   Insn 597(l0): point = 53
   Insn 596(l0): point = 55
   Insn 595(l0): point = 57
   Insn 698(l0): point = 60
   Insn 762(l0): point = 63
   Insn 591(l0): point = 65
   Insn 590(l0): point = 67
   Insn 589(l0): point = 69
   Insn 588(l0): point = 71
   Insn 704(l0): point = 73
   Insn 584(l0): point = 76
   Insn 583(l0): point = 78
   Insn 582(l0): point = 80
   Insn 581(l0): point = 82
   Insn 580(l0): point = 84
   Insn 579(l0): point = 86
   Insn 664(l0): point = 89
   Insn 760(l0): point = 92
   Insn 575(l0): point = 94
   Insn 574(l0): point = 96
   Insn 573(l0): point = 98
   Insn 572(l0): point = 100
   Insn 670(l0): point = 103
   Insn 758(l0): point = 106
   Insn 568(l0): point = 108
   Insn 567(l0): point = 110
   Insn 566(l0): point = 112
   Insn 565(l0): point = 114
   Insn 676(l0): point = 117
   Insn 756(l0): point = 120
   Insn 561(l0): point = 122
   Insn 560(l0): point = 124
   Insn 559(l0): point = 126
   Insn 558(l0): point = 128
   Insn 682(l0): point = 131
   Insn 754(l0): point = 134
   Insn 554(l0): point = 136
   Insn 553(l0): point = 138
   Insn 552(l0): point = 140
   Insn 551(l0): point = 142
   Insn 688(l0): point = 144
   Insn 547(l0): point = 147
   Insn 546(l0): point = 149
   Insn 545(l0): point = 151
   Insn 544(l0): point = 153
   Insn 543(l0): point = 155
   Insn 542(l0): point = 157
   Insn 636(l0): point = 160
   Insn 752(l0): point = 163
   Insn 538(l0): point = 165
   Insn 537(l0): point = 167
   Insn 536(l0): point = 169
   Insn 535(l0): point = 171
   Insn 642(l0): point = 174
   Insn 750(l0): point = 177
   Insn 531(l0): point = 179
   Insn 530(l0): point = 181
   Insn 529(l0): point = 183
   Insn 528(l0): point = 185
   Insn 648(l0): point = 188
   Insn 748(l0): point = 191
   Insn 524(l0): point = 193
   Insn 523(l0): point = 195
   Insn 522(l0): point = 197
   Insn 521(l0): point = 199
   Insn 654(l0): point = 202
   Insn 746(l0): point = 205
   Insn 517(l0): point = 207
   Insn 516(l0): point = 209
   Insn 515(l0): point = 211
   Insn 514(l0): point = 213
   Insn 660(l0): point = 215
   Insn 744(l0): point = 218
   Insn 627(l0): point = 221
   Insn 626(l0): point = 223
   Insn 717(l0): point = 225
   Insn 506(l0): point = 228
   Insn 505(l0): point = 230
   Insn 504(l0): point = 232
   Insn 503(l0): point = 234
   Insn 502(l0): point = 236
   Insn 501(l0): point = 238
   Insn 500(l0): point = 240
   Insn 499(l0): point = 242
   Insn 498(l0): point = 244
   Insn 740(l0): point = 247
   Insn 493(l0): point = 249
   Insn 492(l0): point = 251
   Insn 738(l0): point = 254
   Insn 487(l0): point = 256
   Insn 486(l0): point = 258
   Insn 485(l0): point = 260
   Insn 484(l0): point = 262
   Insn 483(l0): point = 264
   Insn 482(l0): point = 266
   Insn 481(l0): point = 268
   Insn 480(l0): point = 270
   Insn 479(l0): point = 272
   Insn 478(l0): point = 274
   Insn 477(l0): point = 276
   Insn 476(l0): point = 278
   Insn 475(l0): point = 280
   Insn 474(l0): point = 282
   Insn 473(l0): point = 284
   Insn 472(l0): point = 286
   Insn 471(l0): point = 288
   Insn 470(l0): point = 290
   Insn 469(l0): point = 292
   Insn 468(l0): point = 294
   Insn 736(l0): point = 297
   Insn 463(l0): point = 299
   Insn 462(l0): point = 301
   Insn 461(l0): point = 303
   Insn 460(l0): point = 305
   Insn 459(l0): point = 307
   Insn 458(l0): point = 309
   Insn 457(l0): point = 311
   Insn 456(l0): point = 313
   Insn 455(l0): point = 315
   Insn 454(l0): point = 317
   Insn 453(l0): point = 319
   Insn 452(l0): point = 321
   Insn 451(l0): point = 323
   Insn 450(l0): point = 325
   Insn 449(l0): point = 327
   Insn 448(l0): point = 329
   Insn 447(l0): point = 331
   Insn 446(l0): point = 333
   Insn 445(l0): point = 335
   Insn 444(l0): point = 337
   Insn 443(l0): point = 339
   Insn 442(l0): point = 341
   Insn 441(l0): point = 343
   Insn 440(l0): point = 345
   Insn 439(l0): point = 347
   Insn 438(l0): point = 349
   Insn 734(l0): point = 352
   Insn 433(l0): point = 354
   Insn 432(l0): point = 356
   Insn 431(l0): point = 358
   Insn 430(l0): point = 360
   Insn 429(l0): point = 362
   Insn 428(l0): point = 364
   Insn 427(l0): point = 366
   Insn 426(l0): point = 368
   Insn 425(l0): point = 370
   Insn 424(l0): point = 372
   Insn 423(l0): point = 374
   Insn 422(l0): point = 376
   Insn 421(l0): point = 378
   Insn 420(l0): point = 380
   Insn 419(l0): point = 382
   Insn 418(l0): point = 384
   Insn 417(l0): point = 386
   Insn 416(l0): point = 388
   Insn 415(l0): point = 390
   Insn 414(l0): point = 392
   Insn 413(l0): point = 394
   Insn 412(l0): point = 396
   Insn 411(l0): point = 398
   Insn 410(l0): point = 400
   Insn 409(l0): point = 402
   Insn 408(l0): point = 404
   Insn 732(l0): point = 407
   Insn 401(l0): point = 409
   Insn 400(l0): point = 411
   Insn 399(l0): point = 413
   Insn 398(l0): point = 415
   Insn 397(l0): point = 417
   Insn 730(l0): point = 420
   Insn 392(l0): point = 422
   Insn 391(l0): point = 424
   Insn 390(l0): point = 426
   Insn 389(l0): point = 428
   Insn 387(l0): point = 431
   Insn 386(l0): point = 433
   Insn 385(l0): point = 435
   Insn 384(l0): point = 437
   Insn 383(l0): point = 439
   Insn 382(l0): point = 441
   Insn 381(l0): point = 443
   Insn 380(l0): point = 445
   Insn 379(l0): point = 447
   Insn 378(l0): point = 449
   Insn 377(l0): point = 451
   Insn 376(l0): point = 453
   Insn 375(l0): point = 455
   Insn 374(l0): point = 457
   Insn 728(l0): point = 460
   Insn 367(l0): point = 462
   Insn 366(l0): point = 464
   Insn 365(l0): point = 466
   Insn 364(l0): point = 468
   Insn 363(l0): point = 470
   Insn 726(l0): point = 473
   Insn 358(l0): point = 475
   Insn 357(l0): point = 477
   Insn 356(l0): point = 479
   Insn 355(l0): point = 481
   Insn 353(l0): point = 484
   Insn 352(l0): point = 486
   Insn 351(l0): point = 488
   Insn 350(l0): point = 490
   Insn 349(l0): point = 492
   Insn 348(l0): point = 494
   Insn 347(l0): point = 496
   Insn 346(l0): point = 498
   Insn 345(l0): point = 500
   Insn 344(l0): point = 502
   Insn 343(l0): point = 504
   Insn 342(l0): point = 506
   Insn 341(l0): point = 508
   Insn 340(l0): point = 510
   Insn 724(l0): point = 513
   Insn 335(l0): point = 515
   Insn 334(l0): point = 517
   Insn 333(l0): point = 519
   Insn 332(l0): point = 521
   Insn 331(l0): point = 523
   Insn 330(l0): point = 525
   Insn 329(l0): point = 527
   Insn 328(l0): point = 529
   Insn 327(l0): point = 531
   Insn 326(l0): point = 533
   Insn 325(l0): point = 535
   Insn 323(l0): point = 538
   Insn 322(l0): point = 540
   Insn 321(l0): point = 542
   Insn 320(l0): point = 544
   Insn 319(l0): point = 546
   Insn 317(l0): point = 549
   Insn 316(l0): point = 551
   Insn 315(l0): point = 553
   Insn 314(l0): point = 555
   Insn 313(l0): point = 557
   Insn 312(l0): point = 559
   Insn 311(l0): point = 561
   Insn 310(l0): point = 563
   Insn 309(l0): point = 565
   Insn 308(l0): point = 567
   Insn 307(l0): point = 569
   Insn 306(l0): point = 571
   Insn 305(l0): point = 573
   Insn 304(l0): point = 575
   Insn 303(l0): point = 577
   Insn 302(l0): point = 579
   Insn 301(l0): point = 581
   Insn 300(l0): point = 583
   Insn 299(l0): point = 585
   Insn 298(l0): point = 587
   Insn 297(l0): point = 589
   Insn 296(l0): point = 591
   Insn 295(l0): point = 593
   Insn 294(l0): point = 595
   Insn 293(l0): point = 597
   Insn 292(l0): point = 599
   Insn 291(l0): point = 601
   Insn 722(l0): point = 604
   Insn 286(l0): point = 606
   Insn 285(l0): point = 608
   Insn 284(l0): point = 610
   Insn 283(l0): point = 612
   Insn 282(l0): point = 614
   Insn 280(l0): point = 616
   Insn 279(l0): point = 618
   Insn 278(l0): point = 620
   Insn 277(l0): point = 622
   Insn 276(l0): point = 624
   Insn 275(l0): point = 626
   Insn 274(l0): point = 628
   Insn 273(l0): point = 630
   Insn 272(l0): point = 632
   Insn 271(l0): point = 634
   Insn 270(l0): point = 636
   Insn 269(l0): point = 638
   Insn 268(l0): point = 640
   Insn 267(l0): point = 642
   Insn 266(l0): point = 644
   Insn 265(l0): point = 646
   Insn 264(l0): point = 648
   Insn 263(l0): point = 650
   Insn 262(l0): point = 652
   Insn 261(l0): point = 654
   Insn 260(l0): point = 656
   Insn 259(l0): point = 658
   Insn 258(l0): point = 660
   Insn 257(l0): point = 662
   Insn 256(l0): point = 664
   Insn 255(l0): point = 666
   Insn 254(l0): point = 668
   Insn 252(l0): point = 671
   Insn 251(l0): point = 673
   Insn 250(l0): point = 675
   Insn 249(l0): point = 677
   Insn 248(l0): point = 679
   Insn 246(l0): point = 682
   Insn 245(l0): point = 684
   Insn 244(l0): point = 686
   Insn 243(l0): point = 688
   Insn 242(l0): point = 690
   Insn 241(l0): point = 692
   Insn 239(l0): point = 695
   Insn 238(l0): point = 697
   Insn 237(l0): point = 699
   Insn 236(l0): point = 701
   Insn 235(l0): point = 703
   Insn 234(l0): point = 705
   Insn 233(l0): point = 707
   Insn 232(l0): point = 709
   Insn 231(l0): point = 711
   Insn 230(l0): point = 713
   Insn 229(l0): point = 715
   Insn 228(l0): point = 717
   Insn 227(l0): point = 719
   Insn 226(l0): point = 721
   Insn 225(l0): point = 723
   Insn 224(l0): point = 725
   Insn 223(l0): point = 727
   Insn 222(l0): point = 729
   Insn 221(l0): point = 731
   Insn 220(l0): point = 733
   Insn 219(l0): point = 735
   Insn 218(l0): point = 737
   Insn 217(l0): point = 739
   Insn 216(l0): point = 741
   Insn 215(l0): point = 743
   Insn 214(l0): point = 745
   Insn 213(l0): point = 747
   Insn 212(l0): point = 749
   Insn 211(l0): point = 751
   Insn 720(l0): point = 754
   Insn 206(l0): point = 756
   Insn 205(l0): point = 758
   Insn 204(l0): point = 760
   Insn 203(l0): point = 762
   Insn 202(l0): point = 764
   Insn 201(l0): point = 766
   Insn 200(l0): point = 768
   Insn 199(l0): point = 770
   Insn 198(l0): point = 772
   Insn 197(l0): point = 774
   Insn 196(l0): point = 776
   Insn 195(l0): point = 778
   Insn 194(l0): point = 780
   Insn 193(l0): point = 782
   Insn 192(l0): point = 784
   Insn 191(l0): point = 786
   Insn 190(l0): point = 788
   Insn 189(l0): point = 790
   Insn 188(l0): point = 792
   Insn 187(l0): point = 794
   Insn 186(l0): point = 796
   Insn 185(l0): point = 798
   Insn 184(l0): point = 800
   Insn 183(l0): point = 802
   Insn 182(l0): point = 804
   Insn 181(l0): point = 806
   Insn 180(l0): point = 808
   Insn 178(l0): point = 811
   Insn 177(l0): point = 813
   Insn 176(l0): point = 815
   Insn 175(l0): point = 817
   Insn 174(l0): point = 819
   Insn 172(l0): point = 822
   Insn 171(l0): point = 824
   Insn 170(l0): point = 826
   Insn 169(l0): point = 828
   Insn 168(l0): point = 830
   Insn 167(l0): point = 832
   Insn 166(l0): point = 834
   Insn 164(l0): point = 837
   Insn 163(l0): point = 839
   Insn 162(l0): point = 841
   Insn 161(l0): point = 843
   Insn 160(l0): point = 845
   Insn 159(l0): point = 847
   Insn 157(l0): point = 850
   Insn 156(l0): point = 852
   Insn 155(l0): point = 854
   Insn 154(l0): point = 856
   Insn 153(l0): point = 858
   Insn 152(l0): point = 860
   Insn 150(l0): point = 863
   Insn 149(l0): point = 865
   Insn 148(l0): point = 867
   Insn 147(l0): point = 869
   Insn 146(l0): point = 871
   Insn 145(l0): point = 873
   Insn 144(l0): point = 875
   Insn 143(l0): point = 877
   Insn 142(l0): point = 879
   Insn 141(l0): point = 881
   Insn 140(l0): point = 883
   Insn 139(l0): point = 885
   Insn 138(l0): point = 887
   Insn 137(l0): point = 889
   Insn 136(l0): point = 891
   Insn 135(l0): point = 893
   Insn 134(l0): point = 895
   Insn 133(l0): point = 897
   Insn 132(l0): point = 899
   Insn 131(l0): point = 901
   Insn 130(l0): point = 903
   Insn 129(l0): point = 905
   Insn 718(l0): point = 908
   Insn 124(l0): point = 910
   Insn 123(l0): point = 912
   Insn 122(l0): point = 914
   Insn 121(l0): point = 916
   Insn 120(l0): point = 918
   Insn 119(l0): point = 920
   Insn 118(l0): point = 922
   Insn 117(l0): point = 924
   Insn 116(l0): point = 926
   Insn 115(l0): point = 928
   Insn 114(l0): point = 930
   Insn 113(l0): point = 932
   Insn 112(l0): point = 934
   Insn 111(l0): point = 936
   Insn 110(l0): point = 938
   Insn 109(l0): point = 940
   Insn 108(l0): point = 942
   Insn 107(l0): point = 944
   Insn 106(l0): point = 946
   Insn 105(l0): point = 948
   Insn 104(l0): point = 950
   Insn 103(l0): point = 952
   Insn 102(l0): point = 954
   Insn 101(l0): point = 956
   Insn 100(l0): point = 958
   Insn 99(l0): point = 960
   Insn 98(l0): point = 962
   Insn 97(l0): point = 964
   Insn 95(l0): point = 967
   Insn 94(l0): point = 969
   Insn 93(l0): point = 971
   Insn 92(l0): point = 973
   Insn 91(l0): point = 975
   Insn 89(l0): point = 978
   Insn 88(l0): point = 980
   Insn 87(l0): point = 982
   Insn 86(l0): point = 984
   Insn 85(l0): point = 986
   Insn 84(l0): point = 988
   Insn 83(l0): point = 990
   Insn 81(l0): point = 993
   Insn 80(l0): point = 995
   Insn 79(l0): point = 997
   Insn 78(l0): point = 999
   Insn 77(l0): point = 1001
   Insn 76(l0): point = 1003
   Insn 74(l0): point = 1006
   Insn 73(l0): point = 1008
   Insn 72(l0): point = 1010
   Insn 71(l0): point = 1012
   Insn 70(l0): point = 1014
   Insn 69(l0): point = 1016
   Insn 67(l0): point = 1019
   Insn 66(l0): point = 1021
   Insn 65(l0): point = 1023
   Insn 64(l0): point = 1025
   Insn 63(l0): point = 1027
   Insn 62(l0): point = 1029
   Insn 61(l0): point = 1031
   Insn 60(l0): point = 1033
   Insn 59(l0): point = 1035
   Insn 58(l0): point = 1037
   Insn 57(l0): point = 1039
   Insn 56(l0): point = 1041
   Insn 55(l0): point = 1043
   Insn 54(l0): point = 1045
   Insn 53(l0): point = 1047
   Insn 52(l0): point = 1049
   Insn 51(l0): point = 1051
   Insn 50(l0): point = 1053
   Insn 49(l0): point = 1055
   Insn 48(l0): point = 1057
   Insn 47(l0): point = 1059
   Insn 46(l0): point = 1061
   Insn 39(l0): point = 1064
   Insn 38(l0): point = 1066
   Insn 37(l0): point = 1068
   Insn 36(l0): point = 1070
   Insn 35(l0): point = 1072
   Insn 34(l0): point = 1075
   Insn 33(l0): point = 1077
   Insn 32(l0): point = 1079
   Insn 31(l0): point = 1081
   Insn 30(l0): point = 1083
   Insn 29(l0): point = 1085
   Insn 28(l0): point = 1087
   Insn 27(l0): point = 1089
   Insn 26(l0): point = 1091
   Insn 25(l0): point = 1093
   Insn 24(l0): point = 1095
   Insn 23(l0): point = 1097
   Insn 22(l0): point = 1099
   Insn 21(l0): point = 1101
   Insn 20(l0): point = 1103
   Insn 19(l0): point = 1105
   Insn 18(l0): point = 1107
   Insn 17(l0): point = 1109
   Insn 16(l0): point = 1111
   Insn 15(l0): point = 1113
   Insn 14(l0): point = 1115
   Insn 13(l0): point = 1117
   Insn 12(l0): point = 1119
   Insn 11(l0): point = 1121
   Insn 10(l0): point = 1123
   Insn 9(l0): point = 1125
   Insn 8(l0): point = 1127
   Insn 7(l0): point = 1129
   Insn 4(l0): point = 1131
   Insn 2(l0): point = 1133
 a0(r138): [7..8]
 a1(r325): [20..22] [9..17]
 a2(r329): [13..14]
 a3(r326): [23..30]
 a4(r324): [27..28]
 a5(r109): [36..37]
 a6(r321): [49..51] [38..46]
 a7(r323): [42..43]
 a8(r316): [63..65] [52..60]
 a9(r320): [56..57]
 a10(r317): [66..73]
 a11(r315): [70..71]
 a12(r108): [79..80]
 a13(r312): [92..94] [81..89]
 a14(r314): [85..86]
 a15(r309): [106..108] [95..103]
 a16(r311): [99..100]
 a17(r306): [120..122] [109..117]
 a18(r308): [113..114]
 a19(r301): [134..136] [123..131]
 a20(r305): [127..128]
 a21(r302): [137..144]
 a22(r300): [141..142]
 a23(r115): [150..151]
 a24(r297): [163..165] [152..160]
 a25(r299): [156..157]
 a26(r294): [177..179] [166..174]
 a27(r296): [170..171]
 a28(r291): [191..193] [180..188]
 a29(r293): [184..185]
 a30(r286): [205..207] [194..202]
 a31(r290): [198..199]
 a32(r287): [208..215]
 a33(r285): [212..213]
 a34(r137): [231..238]
 a35(r284): [239..240]
 a36(r283): [250..251]
 a37(r282): [257..258]
 a38(r136): [257..260]
 a39(r135): [261..262]
 a40(r281): [263..264]
 a41(r280): [267..268]
 a42(r134): [267..270]
 a43(r133): [271..272]
 a44(r132): [273..274]
 a45(r131): [273..278]
 a46(r279): [275..276]
 a47(r130): [279..280]
 a48(r278): [281..282]
 a49(r277): [285..286]
 a50(r276): [291..294]
 a51(r275): [300..301]
 a52(r129): [300..303]
 a53(r128): [304..305]
 a54(r274): [306..307]
 a55(r273): [312..317]
 a56(r127): [316..319]
 a57(r126): [320..321]
 a58(r272): [324..325]
 a59(r271): [328..329]
 a60(r270): [334..337]
 a61(r269): [340..341]
 a62(r268): [346..349]
 a63(r267): [355..356]
 a64(r125): [355..358]
 a65(r124): [359..360]
 a66(r266): [361..362]
 a67(r265): [367..372]
 a68(r123): [371..374]
 a69(r122): [375..376]
 a70(r264): [379..380]
 a71(r263): [383..384]
 a72(r262): [389..392]
 a73(r261): [395..396]
 a74(r260): [401..404]
 a75(r259): [410..411]
 a76(r121): [410..413]
 a77(r120): [414..415]
 a78(r258): [416..417]
 a79(r257): [423..424]
 a80(r119): [423..426]
 a81(r256): [427..428]
 a82(r255): [436..437]
 a83(r254): [442..445]
 a84(r253): [448..449]
 a85(r252): [454..457]
 a86(r251): [463..464]
 a87(r118): [463..466]
 a88(r117): [467..468]
 a89(r250): [469..470]
 a90(r249): [476..477]
 a91(r116): [476..479]
 a92(r248): [480..481]
 a93(r247): [489..490]
 a94(r246): [495..498]
 a95(r245): [501..502]
 a96(r244): [507..510]
 a97(r243): [516..517]
 a98(r114): [516..519]
 a99(r113): [520..521]
 a100(r242): [522..523]
 a101(r241): [528..529]
 a102(r240): [534..535]
 a103(r239): [541..544]
 a104(r238): [543..546]
 a105(r236): [552..559]
 a106(r237): [556..557]
 a107(r235): [564..567]
 a108(r112): [566..569]
 a109(r234): [574..577]
 a110(r111): [582..587]
 a111(r233): [584..585]
 a112(r232): [588..589]
 a113(r110): [592..593]
 a114(r231): [598..601]
 a115(r230): [607..608]
 a116(r107): [607..610]
 a117(r106): [611..612]
 a118(r229): [613..614]
 a119(r105): [619..624]
 a120(r228): [621..622]
 a121(r227): [625..626]
 a122(r226): [631..634]
 a123(r225): [633..636]
 a124(r224): [639..640]
 a125(r223): [641..642]
 a126(r104): [647..648]
 a127(r222): [649..650]
 a128(r221): [655..656]
 a129(r220): [661..662]
 a130(r219): [667..668]
 a131(r218): [674..677]
 a132(r217): [676..679]
 a133(r215): [685..692]
 a134(r216): [687..690]
 a135(r213): [698..705]
 a136(r214): [702..703]
 a137(r212): [710..713]
 a138(r103): [712..715]
 a139(r102): [716..717]
 a140(r101): [722..725]
 a141(r211): [726..727]
 a142(r210): [732..737]
 a143(r100): [736..739]
 a144(r99): [740..741]
 a145(r98): [746..749]
 a146(r209): [750..751]
 a147(r208): [757..758]
 a148(r97): [757..760]
 a149(r96): [761..762]
 a150(r207): [763..764]
 a151(r206): [769..774]
 a152(r95): [773..776]
 a153(r205): [777..778]
 a154(r204): [783..784]
 a155(r203): [789..790]
 a156(r202): [795..796]
 a157(r201): [801..802]
 a158(r200): [807..808]
 a159(r199): [814..817]
 a160(r198): [816..819]
 a161(r195): [825..834]
 a162(r197): [827..830]
 a163(r196): [829..832]
 a164(r193): [840..847]
 a165(r194): [842..845]
 a166(r191): [853..860]
 a167(r192): [857..858]
 a168(r189): [866..871]
 a169(r190): [868..869]
 a170(r187): [876..881]
 a171(r188): [878..879]
 a172(r186): [884..885]
 a173(r185): [890..893]
 a174(r184): [896..897]
 a175(r183): [902..905]
 a176(r182): [911..912]
 a177(r94): [911..914]
 a178(r93): [915..916]
 a179(r181): [917..918]
 a180(r180): [923..928]
 a181(r92): [927..930]
 a182(r179): [931..932]
 a183(r178): [931..934]
 a184(r177): [939..940]
 a185(r176): [945..946]
 a186(r175): [951..952]
 a187(r174): [957..958]
 a188(r173): [963..964]
 a189(r172): [970..973]
 a190(r171): [972..975]
 a191(r168): [981..990]
 a192(r170): [983..986]
 a193(r169): [985..988]
 a194(r166): [996..1003]
 a195(r167): [998..1001]
 a196(r164): [1009..1016]
 a197(r165): [1013..1014]
 a198(r162): [1022..1027]
 a199(r163): [1024..1025]
 a200(r160): [1032..1037]
 a201(r161): [1034..1035]
 a202(r159): [1040..1041]
 a203(r158): [1046..1049]
 a204(r157): [1052..1053]
 a205(r156): [1058..1061]
 a206(r155): [1065..1066]
 a207(r154): [1067..1068]
 a208(r153): [1069..1070]
 a209(r152): [1071..1072]
 a210(r151): [1080..1081]
 a211(r148): [1086..1095] [1082..1083]
 a212(r91): [1082..1113]
 a213(r150): [1084..1085]
 a214(r149): [1088..1089]
 a215(r147): [1092..1097]
 a216(r146): [1100..1101]
 a217(r145): [1102..1103]
 a218(r144): [1102..1105]
 a219(r143): [1106..1107]
 a220(r141): [1108..1109]
 a221(r142): [1110..1111]
 a222(r90): [1114..1115]
 a223(r89): [1120..1123]
 a224(r88): [1122..1125]
 a225(r87): [1126..1127]
 a226(r140): [1128..1129]
Compressing live ranges: from 1136 to 354 - 31%
Ranges after the compression:
 a0(r138): [0..1]
 a1(r325): [2..5]
 a2(r329): [2..3]
 a3(r326): [6..7]
 a4(r324): [6..7]
 a5(r109): [8..9]
 a6(r321): [10..13]
 a7(r323): [10..11]
 a8(r316): [14..17]
 a9(r320): [14..15]
 a10(r317): [18..19]
 a11(r315): [18..19]
 a12(r108): [20..21]
 a13(r312): [22..25]
 a14(r314): [22..23]
 a15(r309): [26..29]
 a16(r311): [26..27]
 a17(r306): [30..33]
 a18(r308): [30..31]
 a19(r301): [34..37]
 a20(r305): [34..35]
 a21(r302): [38..39]
 a22(r300): [38..39]
 a23(r115): [40..41]
 a24(r297): [42..45]
 a25(r299): [42..43]
 a26(r294): [46..49]
 a27(r296): [46..47]
 a28(r291): [50..53]
 a29(r293): [50..51]
 a30(r286): [54..57]
 a31(r290): [54..55]
 a32(r287): [58..59]
 a33(r285): [58..59]
 a34(r137): [60..61]
 a35(r284): [62..63]
 a36(r283): [64..65]
 a37(r282): [66..67]
 a38(r136): [66..67]
 a39(r135): [68..69]
 a40(r281): [70..71]
 a41(r280): [72..73]
 a42(r134): [72..73]
 a43(r133): [74..75]
 a44(r132): [76..77]
 a45(r131): [76..79]
 a46(r279): [78..79]
 a47(r130): [80..81]
 a48(r278): [82..83]
 a49(r277): [84..85]
 a50(r276): [86..87]
 a51(r275): [88..89]
 a52(r129): [88..89]
 a53(r128): [90..91]
 a54(r274): [92..93]
 a55(r273): [94..95]
 a56(r127): [94..95]
 a57(r126): [96..97]
 a58(r272): [98..99]
 a59(r271): [100..101]
 a60(r270): [102..103]
 a61(r269): [104..105]
 a62(r268): [106..107]
 a63(r267): [108..109]
 a64(r125): [108..109]
 a65(r124): [110..111]
 a66(r266): [112..113]
 a67(r265): [114..115]
 a68(r123): [114..115]
 a69(r122): [116..117]
 a70(r264): [118..119]
 a71(r263): [120..121]
 a72(r262): [122..123]
 a73(r261): [124..125]
 a74(r260): [126..127]
 a75(r259): [128..129]
 a76(r121): [128..129]
 a77(r120): [130..131]
 a78(r258): [132..133]
 a79(r257): [134..135]
 a80(r119): [134..135]
 a81(r256): [136..137]
 a82(r255): [138..139]
 a83(r254): [140..141]
 a84(r253): [142..143]
 a85(r252): [144..145]
 a86(r251): [146..147]
 a87(r118): [146..147]
 a88(r117): [148..149]
 a89(r250): [150..151]
 a90(r249): [152..153]
 a91(r116): [152..153]
 a92(r248): [154..155]
 a93(r247): [156..157]
 a94(r246): [158..159]
 a95(r245): [160..161]
 a96(r244): [162..163]
 a97(r243): [164..165]
 a98(r114): [164..165]
 a99(r113): [166..167]
 a100(r242): [168..169]
 a101(r241): [170..171]
 a102(r240): [172..173]
 a103(r239): [174..175]
 a104(r238): [174..175]
 a105(r236): [176..177]
 a106(r237): [176..177]
 a107(r235): [178..179]
 a108(r112): [178..179]
 a109(r234): [180..181]
 a110(r111): [182..183]
 a111(r233): [182..183]
 a112(r232): [184..185]
 a113(r110): [186..187]
 a114(r231): [188..189]
 a115(r230): [190..191]
 a116(r107): [190..191]
 a117(r106): [192..193]
 a118(r229): [194..195]
 a119(r105): [196..197]
 a120(r228): [196..197]
 a121(r227): [198..199]
 a122(r226): [200..201]
 a123(r225): [200..201]
 a124(r224): [202..203]
 a125(r223): [204..205]
 a126(r104): [206..207]
 a127(r222): [208..209]
 a128(r221): [210..211]
 a129(r220): [212..213]
 a130(r219): [214..215]
 a131(r218): [216..217]
 a132(r217): [216..217]
 a133(r215): [218..219]
 a134(r216): [218..219]
 a135(r213): [220..221]
 a136(r214): [220..221]
 a137(r212): [222..223]
 a138(r103): [222..223]
 a139(r102): [224..225]
 a140(r101): [226..227]
 a141(r211): [228..229]
 a142(r210): [230..231]
 a143(r100): [230..231]
 a144(r99): [232..233]
 a145(r98): [234..235]
 a146(r209): [236..237]
 a147(r208): [238..239]
 a148(r97): [238..239]
 a149(r96): [240..241]
 a150(r207): [242..243]
 a151(r206): [244..245]
 a152(r95): [244..245]
 a153(r205): [246..247]
 a154(r204): [248..249]
 a155(r203): [250..251]
 a156(r202): [252..253]
 a157(r201): [254..255]
 a158(r200): [256..257]
 a159(r199): [258..259]
 a160(r198): [258..259]
 a161(r195): [260..261]
 a162(r197): [260..261]
 a163(r196): [260..261]
 a164(r193): [262..263]
 a165(r194): [262..263]
 a166(r191): [264..265]
 a167(r192): [264..265]
 a168(r189): [266..267]
 a169(r190): [266..267]
 a170(r187): [268..269]
 a171(r188): [268..269]
 a172(r186): [270..271]
 a173(r185): [272..273]
 a174(r184): [274..275]
 a175(r183): [276..277]
 a176(r182): [278..279]
 a177(r94): [278..279]
 a178(r93): [280..281]
 a179(r181): [282..283]
 a180(r180): [284..285]
 a181(r92): [284..285]
 a182(r179): [286..287]
 a183(r178): [286..287]
 a184(r177): [288..289]
 a185(r176): [290..291]
 a186(r175): [292..293]
 a187(r174): [294..295]
 a188(r173): [296..297]
 a189(r172): [298..299]
 a190(r171): [298..299]
 a191(r168): [300..301]
 a192(r170): [300..301]
 a193(r169): [300..301]
 a194(r166): [302..303]
 a195(r167): [302..303]
 a196(r164): [304..305]
 a197(r165): [304..305]
 a198(r162): [306..307]
 a199(r163): [306..307]
 a200(r160): [308..309]
 a201(r161): [308..309]
 a202(r159): [310..311]
 a203(r158): [312..313]
 a204(r157): [314..315]
 a205(r156): [316..317]
 a206(r155): [318..319]
 a207(r154): [320..321]
 a208(r153): [322..323]
 a209(r152): [324..325]
 a210(r151): [326..327]
 a211(r148): [332..335] [328..329]
 a212(r91): [328..345]
 a213(r150): [330..331]
 a214(r149): [332..333]
 a215(r147): [334..335]
 a216(r146): [336..337]
 a217(r145): [338..339]
 a218(r144): [338..339]
 a219(r143): [340..341]
 a220(r141): [342..343]
 a221(r142): [344..345]
 a222(r90): [346..347]
 a223(r89): [348..349]
 a224(r88): [348..349]
 a225(r87): [350..351]
 a226(r140): [352..353]
  pref0:a220(r141)<-hr1@1
  regions=1, blocks=64, points=354
    allocnos=227 (big 0), copies=0, conflicts=0, ranges=228
Disposition:
  225:r87  l0     0  224:r88  l0     1  223:r89  l0     0  222:r90  l0     0
  212:r91  l0     2  181:r92  l0     1  178:r93  l0     0  177:r94  l0     1
  152:r95  l0     1  149:r96  l0     0  148:r97  l0     1  145:r98  l0     0
  144:r99  l0     0  143:r100 l0     1  140:r101 l0     0  139:r102 l0     0
  138:r103 l0     1  126:r104 l0     0  119:r105 l0     1  117:r106 l0     0
  116:r107 l0     1   12:r108 l0     0    5:r109 l0     0  113:r110 l0     0
  110:r111 l0     1  108:r112 l0     1   99:r113 l0     0   98:r114 l0     1
   23:r115 l0     0   91:r116 l0     1   88:r117 l0     0   87:r118 l0     1
   80:r119 l0     1   77:r120 l0     0   76:r121 l0     1   69:r122 l0     0
   68:r123 l0     1   65:r124 l0     0   64:r125 l0     1   57:r126 l0     0
   56:r127 l0     1   53:r128 l0     0   52:r129 l0     1   47:r130 l0     0
   45:r131 l0     1   44:r132 l0     0   43:r133 l0     0   42:r134 l0     1
   39:r135 l0     0   38:r136 l0     1   34:r137 l0     0    0:r138 l0     0
  226:r140 l0     0  220:r141 l0     1  221:r142 l0     1  219:r143 l0     0
  218:r144 l0     1  217:r145 l0     0  216:r146 l0     0  215:r147 l0     1
  211:r148 l0     0  214:r149 l0     1  213:r150 l0     0  210:r151 l0     0
  209:r152 l0     0  208:r153 l0     0  207:r154 l0     0  206:r155 l0     0
  205:r156 l0     0  204:r157 l0     0  203:r158 l0     0  202:r159 l0     0
  200:r160 l0     0  201:r161 l0     1  198:r162 l0     0  199:r163 l0     1
  196:r164 l0     0  197:r165 l0     1  194:r166 l0     0  195:r167 l0     2
  191:r168 l0     0  193:r169 l0     1  192:r170 l0     2  190:r171 l0     1
  189:r172 l0     0  188:r173 l0     0  187:r174 l0     0  186:r175 l0     0
  185:r176 l0     0  184:r177 l0     0  183:r178 l0     1  182:r179 l0     0
  180:r180 l0     0  179:r181 l0     0  176:r182 l0     0  175:r183 l0     0
  174:r184 l0     0  173:r185 l0     0  172:r186 l0     0  170:r187 l0     0
  171:r188 l0     1  168:r189 l0     0  169:r190 l0     1  166:r191 l0     0
  167:r192 l0     1  164:r193 l0     0  165:r194 l0     2  161:r195 l0     0
  163:r196 l0     1  162:r197 l0     2  160:r198 l0     1  159:r199 l0     0
  158:r200 l0     0  157:r201 l0     0  156:r202 l0     0  155:r203 l0     0
  154:r204 l0     0  153:r205 l0     0  151:r206 l0     0  150:r207 l0     0
  147:r208 l0     0  146:r209 l0     0  142:r210 l0     0  141:r211 l0     0
  137:r212 l0     0  135:r213 l0     0  136:r214 l0     1  133:r215 l0     0
  134:r216 l0     2  132:r217 l0     1  131:r218 l0     0  130:r219 l0     0
  129:r220 l0     0  128:r221 l0     0  127:r222 l0     0  125:r223 l0     0
  124:r224 l0     0  123:r225 l0     1  122:r226 l0     0  121:r227 l0     0
  120:r228 l0     0  118:r229 l0     0  115:r230 l0     0  114:r231 l0     0
  112:r232 l0     0  111:r233 l0     0  109:r234 l0     0  107:r235 l0     0
  105:r236 l0     0  106:r237 l0     1  104:r238 l0     1  103:r239 l0     0
  102:r240 l0     0  101:r241 l0     0  100:r242 l0     0   97:r243 l0     0
   96:r244 l0     0   95:r245 l0     0   94:r246 l0     0   93:r247 l0     0
   92:r248 l0     0   90:r249 l0     0   89:r250 l0     0   86:r251 l0     0
   85:r252 l0     0   84:r253 l0     0   83:r254 l0     0   82:r255 l0     0
   81:r256 l0     0   79:r257 l0     0   78:r258 l0     0   75:r259 l0     0
   74:r260 l0     0   73:r261 l0     0   72:r262 l0     0   71:r263 l0     0
   70:r264 l0     0   67:r265 l0     0   66:r266 l0     0   63:r267 l0     0
   62:r268 l0     0   61:r269 l0     0   60:r270 l0     0   59:r271 l0     0
   58:r272 l0     0   55:r273 l0     0   54:r274 l0     0   51:r275 l0     0
   50:r276 l0     0   49:r277 l0     0   48:r278 l0     0   46:r279 l0     0
   41:r280 l0     0   40:r281 l0     0   37:r282 l0     0   36:r283 l0     0
   35:r284 l0     0   33:r285 l0     0   30:r286 l0     3   32:r287 l0     3
   31:r290 l0     0   28:r291 l0     3   29:r293 l0     0   26:r294 l0     3
   27:r296 l0     0   24:r297 l0     3   25:r299 l0     0   22:r300 l0     0
   19:r301 l0     3   21:r302 l0     3   20:r305 l0     0   17:r306 l0     3
   18:r308 l0     0   15:r309 l0     3   16:r311 l0     0   13:r312 l0     3
   14:r314 l0     0   11:r315 l0     0    8:r316 l0     3   10:r317 l0     3
    9:r320 l0     0    6:r321 l0     3    7:r323 l0     0    4:r324 l0     0
    1:r325 l0     3    3:r326 l0     3    2:r329 l0     0
+++Costs: overall -141, reg -141, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void IntCode::step()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={99d,35u} r1={114d,15u} r2={84d} r4={130d,46u} r5={166d,83u} r6={1d,63u} r7={1d,146u} r8={83d} r9={83d} r10={83d} r11={83d} r12={83d} r13={83d} r14={83d} r15={83d} r16={1d,62u} r17={183d,6u} r18={83d} r19={83d} r20={1d,221u,7e} r21={84d} r22={84d} r23={84d} r24={84d} r25={84d} r26={84d} r27={84d} r28={84d} r29={83d} r30={83d} r31={83d} r32={83d} r33={83d} r34={83d} r35={83d} r36={83d} r37={84d} r38={84d} r39={83d} r40={83d} r45={83d} r46={83d} r47={83d} r48={83d} r49={83d} r50={83d} r51={83d} r52={83d} r53={83d} r54={83d} r55={83d} r56={83d} r57={83d} r58={83d} r59={83d} r60={83d} r61={83d} r62={83d} r63={83d} r64={83d} r65={83d} r66={83d} r67={83d} r68={83d} r69={83d} r70={83d} r71={83d} r72={83d} r73={83d} r74={83d} r75={83d} r76={83d} r77={83d} r78={83d} r79={83d} r80={83d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,4u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,2u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,2u,1e} r148={5d,6u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={2d,1u} r287={1d,1u} r290={1d,1u} r291={2d,1u} r293={1d,1u} r294={2d,1u} r296={1d,1u} r297={2d,1u} r299={1d,1u} r300={1d,1u} r301={2d,1u} r302={1d,1u} r305={1d,1u} r306={2d,1u} r308={1d,1u} r309={2d,1u} r311={1d,1u} r312={2d,1u} r314={1d,1u} r315={1d,1u} r316={2d,1u} r317={1d,1u} r320={1d,1u} r321={2d,1u} r323={1d,1u} r324={1d,1u} r325={2d,1u} r326={1d,1u} r329={1d,1u} 
;;    total ref usage 7432{6510d,914u,8e} in 537{454 regular + 83 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 140 141 142 143 144 145 146 147 148 149 150 151
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:61 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48723+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:61 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:62 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 87 [ D.48714 ])
        (mem/j:SI (plus:DI (reg/f:DI 140)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])) intcode.cpp:62 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 88 [ D.48715 ])
        (sign_extend:DI (reg:SI 87 [ D.48714 ]))) intcode.cpp:62 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ D.48714 ])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 89 [ D.48716 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:62 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 88 [ D.48715 ])) intcode.cpp:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.48715 ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.48716 ])) intcode.cpp:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48716 ])
        (nil)))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:62 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg/f:DI 90 [ D.48717 ])
        (reg:DI 0 ax)) intcode.cpp:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 91 [ D.48718 ])
        (mem:DI (reg/f:DI 90 [ D.48717 ]) [0 *_21+0 S8 A64])) intcode.cpp:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48717 ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 142)
        (const_int -6640827866535438581 [0xa3d70a3d70a3d70b])) intcode.cpp:62 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 141)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 91 [ D.48718 ]))
                            (sign_extend:TI (reg:DI 142)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:62 332 {*smuldi3_highpart_1}
     (expr_list:REG_DEAD (reg:DI 142)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg:DI 141)
                    (reg:DI 91 [ D.48718 ])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:62 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 141)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 144)
                (ashiftrt:DI (reg:DI 143)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:62 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 143)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 145)
                (ashiftrt:DI (reg:DI 91 [ D.48718 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:62 537 {ashrdi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 146)
                (minus:DI (reg:DI 144)
                    (reg:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:62 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 145)
        (expr_list:REG_DEAD (reg:DI 144)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 22 21 23 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [0 opc+0 S8 A64])
        (reg:DI 146)) intcode.cpp:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 147)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [0 opc+0 S8 A64])) intcode.cpp:62 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 148)
        (reg:DI 147)) intcode.cpp:62 89 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 148)
                (ashift:DI (reg:DI 148)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:62 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg:DI 148)
                    (reg:DI 147)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:62 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 147)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 147)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 27 26 28 2 (parallel [
            (set (reg:DI 149)
                (ashift:DI (reg:DI 148)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:62 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg:DI 148)
                    (reg:DI 149)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:62 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 149)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 2 (parallel [
            (set (reg:DI 150)
                (ashift:DI (reg:DI 148)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:62 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 148)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 2 (set (reg:DI 148)
        (reg:DI 150)) intcode.cpp:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 150)
        (nil)))
(insn 31 30 32 2 (parallel [
            (set (reg:DI 151)
                (minus:DI (reg:DI 91 [ D.48718 ])
                    (reg:DI 148)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:62 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 148)
        (expr_list:REG_DEAD (reg:DI 91 [ D.48718 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 32 31 33 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [0 opc+0 S8 A64])
        (reg:DI 151)) intcode.cpp:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 151)
        (nil)))
(insn 33 32 34 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -200 [0xffffffffffffff38])) [0 opc+0 S8 A64])
            (const_int 99 [0x63]))) intcode.cpp:64 8 {*cmpdi_1}
     (nil))
(jump_insn 34 33 632 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 496)
            (pc))) intcode.cpp:64 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 496)
;;  succ:       33
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 152 153 154 155
(note 632 34 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 632 36 3 (set (reg:DI 152)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [0 opc+0 S8 A64])) intcode.cpp:64 89 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (parallel [
            (set (reg:DI 153)
                (ashift:DI (reg:DI 152)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:64 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 152)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 3 (parallel [
            (set (reg/f:DI 154)
                (plus:DI (reg:DI 153)
                    (label_ref:DI 41)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:64 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 153)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (insn_list:REG_LABEL_OPERAND 41 (nil)))))
(insn 38 37 39 3 (set (reg:DI 155)
        (mem/u/c:DI (reg/f:DI 154) [0  S8 A8])) intcode.cpp:64 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154)
        (nil)))
(jump_insn 39 38 40 3 (parallel [
            (set (pc)
                (reg:DI 155))
            (use (label_ref 41))
        ]) intcode.cpp:64 658 {*tablejump_1}
     (expr_list:REG_DEAD (reg:DI 155)
        (nil))
 -> 41)
;;  succ:       33
;;              4
;;              10
;;              16
;;              20
;;              23
;;              26
;;              29
;;              30
;;              31
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 40 39 41)
;; Insn is not within a basic block
(code_label 41 40 42 56 "" [2 uses])
;; Insn is not within a basic block
(jump_table_data 42 41 43 (addr_vec:DI [
            (label_ref:DI 496)
            (label_ref:DI 44)
            (label_ref:DI 127)
            (label_ref:DI 209)
            (label_ref:DI 289)
            (label_ref:DI 338)
            (label_ref:DI 372)
            (label_ref:DI 406)
            (label_ref:DI 436)
            (label_ref:DI 466)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 496)
            (label_ref:DI 490)
        ]))
(barrier 43 42 44)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 156 157 158 159 160 161 162 163
(code_label 44 43 45 4 55 "" [1 uses])
(note 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 4 (set (reg:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:66 89 {*movdi_internal}
     (nil))
(insn 47 46 48 4 (set (reg:SI 4 si)
        (const_int 1 [0x1])) intcode.cpp:66 90 {*movsi_internal}
     (nil))
(insn 48 47 49 4 (set (reg:DI 5 di)
        (reg:DI 156)) intcode.cpp:66 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 156)
        (nil)))
(call_insn 49 48 50 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:66 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 50 49 51 4 (set (reg:DI 157)
        (reg:DI 0 ax)) intcode.cpp:66 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 51 50 52 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])
        (reg:DI 157)) intcode.cpp:66 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 157)
        (nil)))
(insn 52 51 53 4 (set (reg:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:67 89 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:SI 4 si)
        (const_int 2 [0x2])) intcode.cpp:67 90 {*movsi_internal}
     (nil))
(insn 54 53 55 4 (set (reg:DI 5 di)
        (reg:DI 158)) intcode.cpp:67 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 158)
        (nil)))
(call_insn 55 54 56 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:67 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 56 55 57 4 (set (reg:DI 159)
        (reg:DI 0 ax)) intcode.cpp:67 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 57 56 58 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])
        (reg:DI 159)) intcode.cpp:67 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 159)
        (nil)))
(insn 58 57 59 4 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 58 60 4 (set (reg:DI 161)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])) intcode.cpp:68 89 {*movdi_internal}
     (nil))
(insn 60 59 61 4 (set (reg:DI 4 si)
        (reg:DI 161)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 161)
        (nil)))
(insn 61 60 62 4 (set (reg:DI 5 di)
        (reg:DI 160)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 160)
        (nil)))
(call_insn 62 61 63 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx119to_stringEx") [flags 0x3]  <function_decl 0x7fdf7d103bd0 to_string>) [0 to_string S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 63 62 64 4 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 64 63 65 4 (set (reg:DI 163)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])) intcode.cpp:68 89 {*movdi_internal}
     (nil))
(insn 65 64 66 4 (set (reg:DI 4 si)
        (reg:DI 163)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 163)
        (nil)))
(insn 66 65 67 4 (set (reg:DI 5 di)
        (reg:DI 162)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 162)
        (nil)))
(call_insn 67 66 68 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx119to_stringEx") [flags 0x3]  <function_decl 0x7fdf7d103bd0 to_string>) [0 to_string S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       43 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 164 165
(note 68 67 69 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 5 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 70 69 71 5 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 71 70 72 5 (set (reg:DI 1 dx)
        (reg:DI 165)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 165)
        (nil)))
(insn 72 71 73 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fdf7b99b090 *.LC5>)) intcode.cpp:68 89 {*movdi_internal}
     (nil))
(insn 73 72 74 5 (set (reg:DI 5 di)
        (reg:DI 164)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 164)
        (nil)))
(call_insn 74 73 75 5 (call (mem:QI (symbol_ref/i:DI ("_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_") [flags 0x3]  <function_decl 0x7fdf7cd91bd0 operator+>) [0 operator+ S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       41 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 166 167
(note 75 74 76 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 6 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 77 76 78 6 (parallel [
            (set (reg:DI 167)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 78 77 79 6 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fdf7b99b1b0 *.LC6>)) intcode.cpp:68 89 {*movdi_internal}
     (nil))
(insn 79 78 80 6 (set (reg:DI 4 si)
        (reg:DI 167)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 167)
        (nil)))
(insn 80 79 81 6 (set (reg:DI 5 di)
        (reg:DI 166)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 166)
        (nil)))
(call_insn 81 80 82 6 (call (mem:QI (symbol_ref/i:DI ("_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_") [flags 0x3]  <function_decl 0x7fdf7be130d8 operator+>) [0 operator+ S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 3 [0x3])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       39 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 168 169 170
(note 82 81 83 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 7 (parallel [
            (set (reg:DI 168)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 84 83 85 7 (parallel [
            (set (reg:DI 169)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 85 84 86 7 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 86 85 87 7 (set (reg:DI 1 dx)
        (reg:DI 169)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 169)
        (nil)))
(insn 87 86 88 7 (set (reg:DI 4 si)
        (reg:DI 170)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 170)
        (nil)))
(insn 88 87 89 7 (set (reg:DI 5 di)
        (reg:DI 168)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 168)
        (nil)))
(call_insn 89 88 90 7 (call (mem:QI (symbol_ref/i:DI ("_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_") [flags 0x3]  <function_decl 0x7fdf7cd89a20 operator+>) [0 operator+ S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       37 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 171 172
(note 90 89 91 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 8 (parallel [
            (set (reg:DI 171)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 92 91 93 8 (set (reg:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:68 89 {*movdi_internal}
     (nil))
(insn 93 92 94 8 (set (reg:DI 4 si)
        (reg:DI 171)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 171)
        (nil)))
(insn 94 93 95 8 (set (reg:DI 5 di)
        (reg:DI 172)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 172)
        (nil)))
(call_insn 95 94 96 8 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode3logENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x3]  <function_decl 0x7fdf7bddba20 log>) [0 log S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 5 [0x5])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       36 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93 94 173 174 175 176 177 178 179 180 181 182
(note 96 95 97 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 9 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 98 97 99 9 (set (reg:DI 5 di)
        (reg:DI 173)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173)
        (nil)))
(call_insn 99 98 100 9 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 100 99 101 9 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 101 100 102 9 (set (reg:DI 5 di)
        (reg:DI 174)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 174)
        (nil)))
(call_insn 102 101 103 9 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 103 102 104 9 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 104 103 105 9 (set (reg:DI 5 di)
        (reg:DI 175)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 175)
        (nil)))
(call_insn 105 104 106 9 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 106 105 107 9 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 107 106 108 9 (set (reg:DI 5 di)
        (reg:DI 176)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 176)
        (nil)))
(call_insn 108 107 109 9 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 109 108 110 9 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 110 109 111 9 (set (reg:DI 5 di)
        (reg:DI 177)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 177)
        (nil)))
(call_insn 111 110 112 9 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 9 (set (reg:DI 178)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])) intcode.cpp:69 89 {*movdi_internal}
     (nil))
(insn 113 112 114 9 (set (reg:DI 179)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])) intcode.cpp:69 89 {*movdi_internal}
     (nil))
(insn 114 113 115 9 (parallel [
            (set (reg:DI 92 [ D.48718 ])
                (plus:DI (reg:DI 178)
                    (reg:DI 179)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:69 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 179)
        (expr_list:REG_DEAD (reg:DI 178)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])
                        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64]))
                    (nil))))))
(insn 115 114 116 9 (set (reg:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:69 89 {*movdi_internal}
     (nil))
(insn 116 115 117 9 (set (reg:DI 1 dx)
        (reg:DI 92 [ D.48718 ])) intcode.cpp:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ D.48718 ])
        (nil)))
(insn 117 116 118 9 (set (reg:SI 4 si)
        (const_int 3 [0x3])) intcode.cpp:69 90 {*movsi_internal}
     (nil))
(insn 118 117 119 9 (set (reg:DI 5 di)
        (reg:DI 180)) intcode.cpp:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 180)
        (nil)))
(call_insn 119 118 120 9 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8setParamEix") [flags 0x3]  <function_decl 0x7fdf7bddb948 setParam>) [0 setParam S1 A8])
        (const_int 0 [0])) intcode.cpp:69 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 120 119 121 9 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:70 89 {*movdi_internal}
     (nil))
(insn 121 120 122 9 (set (reg:SI 93 [ D.48714 ])
        (mem/j:SI (plus:DI (reg/f:DI 181)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])) intcode.cpp:70 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 181)
        (nil)))
(insn 122 121 123 9 (parallel [
            (set (reg:SI 94 [ D.48714 ])
                (plus:SI (reg:SI 93 [ D.48714 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:70 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.48714 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 123 122 124 9 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:70 89 {*movdi_internal}
     (nil))
(insn 124 123 718 9 (set (mem/j:SI (plus:DI (reg/f:DI 182)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])
        (reg:SI 94 [ D.48714 ])) intcode.cpp:70 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 182)
        (expr_list:REG_DEAD (reg:SI 94 [ D.48714 ])
            (nil))))
(jump_insn 718 124 719 9 (set (pc)
        (label_ref 508)) intcode.cpp:71 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 719 718 127)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 183 184 185 186 187 188 189 190
(code_label 127 719 128 10 57 "" [1 uses])
(note 128 127 129 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 10 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:73 89 {*movdi_internal}
     (nil))
(insn 130 129 131 10 (set (reg:SI 4 si)
        (const_int 1 [0x1])) intcode.cpp:73 90 {*movsi_internal}
     (nil))
(insn 131 130 132 10 (set (reg:DI 5 di)
        (reg:DI 183)) intcode.cpp:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 183)
        (nil)))
(call_insn 132 131 133 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:73 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 133 132 134 10 (set (reg:DI 184)
        (reg:DI 0 ax)) intcode.cpp:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 134 133 135 10 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])
        (reg:DI 184)) intcode.cpp:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 184)
        (nil)))
(insn 135 134 136 10 (set (reg:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:74 89 {*movdi_internal}
     (nil))
(insn 136 135 137 10 (set (reg:SI 4 si)
        (const_int 2 [0x2])) intcode.cpp:74 90 {*movsi_internal}
     (nil))
(insn 137 136 138 10 (set (reg:DI 5 di)
        (reg:DI 185)) intcode.cpp:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 185)
        (nil)))
(call_insn 138 137 139 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:74 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 139 138 140 10 (set (reg:DI 186)
        (reg:DI 0 ax)) intcode.cpp:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 140 139 141 10 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])
        (reg:DI 186)) intcode.cpp:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 186)
        (nil)))
(insn 141 140 142 10 (parallel [
            (set (reg:DI 187)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 142 141 143 10 (set (reg:DI 188)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])) intcode.cpp:75 89 {*movdi_internal}
     (nil))
(insn 143 142 144 10 (set (reg:DI 4 si)
        (reg:DI 188)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 188)
        (nil)))
(insn 144 143 145 10 (set (reg:DI 5 di)
        (reg:DI 187)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 187)
        (nil)))
(call_insn 145 144 146 10 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx119to_stringEx") [flags 0x3]  <function_decl 0x7fdf7d103bd0 to_string>) [0 to_string S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 146 145 147 10 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 147 146 148 10 (set (reg:DI 190)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])) intcode.cpp:75 89 {*movdi_internal}
     (nil))
(insn 148 147 149 10 (set (reg:DI 4 si)
        (reg:DI 190)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 190)
        (nil)))
(insn 149 148 150 10 (set (reg:DI 5 di)
        (reg:DI 189)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 189)
        (nil)))
(call_insn 150 149 151 10 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx119to_stringEx") [flags 0x3]  <function_decl 0x7fdf7d103bd0 to_string>) [0 to_string S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 6 [0x6])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       52 (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 191 192
(note 151 150 152 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 11 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 153 152 154 11 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 154 153 155 11 (set (reg:DI 1 dx)
        (reg:DI 192)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 192)
        (nil)))
(insn 155 154 156 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fdf7b99b480 *.LC7>)) intcode.cpp:75 89 {*movdi_internal}
     (nil))
(insn 156 155 157 11 (set (reg:DI 5 di)
        (reg:DI 191)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 191)
        (nil)))
(call_insn 157 156 158 11 (call (mem:QI (symbol_ref/i:DI ("_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_") [flags 0x3]  <function_decl 0x7fdf7cd91bd0 operator+>) [0 operator+ S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 7 [0x7])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       50 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 193 194
(note 158 157 159 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 12 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 160 159 161 12 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 161 160 162 12 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fdf7b99b1b0 *.LC6>)) intcode.cpp:75 89 {*movdi_internal}
     (nil))
(insn 162 161 163 12 (set (reg:DI 4 si)
        (reg:DI 194)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 194)
        (nil)))
(insn 163 162 164 12 (set (reg:DI 5 di)
        (reg:DI 193)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(call_insn 164 163 165 12 (call (mem:QI (symbol_ref/i:DI ("_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_") [flags 0x3]  <function_decl 0x7fdf7be130d8 operator+>) [0 operator+ S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 8 [0x8])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       48 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 195 196 197
(note 165 164 166 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 13 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 167 166 168 13 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 168 167 169 13 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 169 168 170 13 (set (reg:DI 1 dx)
        (reg:DI 196)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 196)
        (nil)))
(insn 170 169 171 13 (set (reg:DI 4 si)
        (reg:DI 197)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 197)
        (nil)))
(insn 171 170 172 13 (set (reg:DI 5 di)
        (reg:DI 195)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 195)
        (nil)))
(call_insn 172 171 173 13 (call (mem:QI (symbol_ref/i:DI ("_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_") [flags 0x3]  <function_decl 0x7fdf7cd89a20 operator+>) [0 operator+ S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 9 [0x9])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       46 (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 198 199
(note 173 172 174 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 14 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 175 174 176 14 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:75 89 {*movdi_internal}
     (nil))
(insn 176 175 177 14 (set (reg:DI 4 si)
        (reg:DI 198)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 198)
        (nil)))
(insn 177 176 178 14 (set (reg:DI 5 di)
        (reg:DI 199)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(call_insn 178 177 179 14 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode3logENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x3]  <function_decl 0x7fdf7bddba20 log>) [0 log S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 10 [0xa])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       45 (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 96 97 200 201 202 203 204 205 206 207 208
(note 179 178 180 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 15 (parallel [
            (set (reg:DI 200)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 181 180 182 15 (set (reg:DI 5 di)
        (reg:DI 200)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 200)
        (nil)))
(call_insn 182 181 183 15 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 183 182 184 15 (parallel [
            (set (reg:DI 201)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 184 183 185 15 (set (reg:DI 5 di)
        (reg:DI 201)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 201)
        (nil)))
(call_insn 185 184 186 15 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 186 185 187 15 (parallel [
            (set (reg:DI 202)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 187 186 188 15 (set (reg:DI 5 di)
        (reg:DI 202)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 202)
        (nil)))
(call_insn 188 187 189 15 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 189 188 190 15 (parallel [
            (set (reg:DI 203)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 190 189 191 15 (set (reg:DI 5 di)
        (reg:DI 203)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 203)
        (nil)))
(call_insn 191 190 192 15 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 192 191 193 15 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 193 192 194 15 (set (reg:DI 5 di)
        (reg:DI 204)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 204)
        (nil)))
(call_insn 194 193 195 15 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 195 194 196 15 (set (reg:DI 205)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])) intcode.cpp:76 89 {*movdi_internal}
     (nil))
(insn 196 195 197 15 (parallel [
            (set (reg:DI 95 [ D.48718 ])
                (mult:DI (reg:DI 205)
                    (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:76 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 205)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 197 196 198 15 (set (reg:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:76 89 {*movdi_internal}
     (nil))
(insn 198 197 199 15 (set (reg:DI 1 dx)
        (reg:DI 95 [ D.48718 ])) intcode.cpp:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95 [ D.48718 ])
        (nil)))
(insn 199 198 200 15 (set (reg:SI 4 si)
        (const_int 3 [0x3])) intcode.cpp:76 90 {*movsi_internal}
     (nil))
(insn 200 199 201 15 (set (reg:DI 5 di)
        (reg:DI 206)) intcode.cpp:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 206)
        (nil)))
(call_insn 201 200 202 15 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8setParamEix") [flags 0x3]  <function_decl 0x7fdf7bddb948 setParam>) [0 setParam S1 A8])
        (const_int 0 [0])) intcode.cpp:76 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 202 201 203 15 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:77 89 {*movdi_internal}
     (nil))
(insn 203 202 204 15 (set (reg:SI 96 [ D.48714 ])
        (mem/j:SI (plus:DI (reg/f:DI 207)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])) intcode.cpp:77 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 207)
        (nil)))
(insn 204 203 205 15 (parallel [
            (set (reg:SI 97 [ D.48714 ])
                (plus:SI (reg:SI 96 [ D.48714 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:77 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.48714 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 205 204 206 15 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:77 89 {*movdi_internal}
     (nil))
(insn 206 205 720 15 (set (mem/j:SI (plus:DI (reg/f:DI 208)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])
        (reg:SI 97 [ D.48714 ])) intcode.cpp:77 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 208)
        (expr_list:REG_DEAD (reg:SI 97 [ D.48714 ])
            (nil))))
(jump_insn 720 206 721 15 (set (pc)
        (label_ref 508)) intcode.cpp:78 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 721 720 209)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99 100 101 102 103 209 210 211 212 213 214
(code_label 209 721 210 16 58 "" [1 uses])
(note 210 209 211 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 16 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:80 89 {*movdi_internal}
     (nil))
(insn 212 211 213 16 (parallel [
            (set (reg/f:DI 98 [ D.48716 ])
                (plus:DI (reg/f:DI 209)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:80 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 209)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 213 212 214 16 (set (reg:DI 4 si)
        (const_int 0 [0])) intcode.cpp:80 89 {*movdi_internal}
     (nil))
(insn 214 213 215 16 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.48716 ])) intcode.cpp:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.48716 ])
        (nil)))
(call_insn 215 214 216 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:80 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 216 215 217 16 (set (reg/f:DI 99 [ D.48717 ])
        (reg:DI 0 ax)) intcode.cpp:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 217 216 218 16 (set (reg:DI 100 [ D.48718 ])
        (mem:DI (reg/f:DI 99 [ D.48717 ]) [0 *_96+0 S8 A64])) intcode.cpp:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.48717 ])
        (nil)))
(insn 218 217 219 16 (set (reg:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:80 89 {*movdi_internal}
     (nil))
(insn 219 218 220 16 (set (reg:DI 1 dx)
        (reg:DI 100 [ D.48718 ])) intcode.cpp:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ D.48718 ])
        (nil)))
(insn 220 219 221 16 (set (reg:SI 4 si)
        (const_int 1 [0x1])) intcode.cpp:80 90 {*movsi_internal}
     (nil))
(insn 221 220 222 16 (set (reg:DI 5 di)
        (reg:DI 210)) intcode.cpp:80 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 210)
        (nil)))
(call_insn 222 221 223 16 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8setParamEix") [flags 0x3]  <function_decl 0x7fdf7bddb948 setParam>) [0 setParam S1 A8])
        (const_int 0 [0])) intcode.cpp:80 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 223 222 224 16 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:81 89 {*movdi_internal}
     (nil))
(insn 224 223 225 16 (parallel [
            (set (reg/f:DI 101 [ D.48716 ])
                (plus:DI (reg/f:DI 211)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 211)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 225 224 226 16 (set (reg:DI 4 si)
        (const_int 0 [0])) intcode.cpp:81 89 {*movdi_internal}
     (nil))
(insn 226 225 227 16 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.48716 ])) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.48716 ])
        (nil)))
(call_insn 227 226 228 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:81 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 228 227 229 16 (set (reg/f:DI 102 [ D.48717 ])
        (reg:DI 0 ax)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 229 228 230 16 (set (reg:DI 103 [ D.48718 ])
        (mem:DI (reg/f:DI 102 [ D.48717 ]) [0 *_101+0 S8 A64])) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.48717 ])
        (nil)))
(insn 230 229 231 16 (parallel [
            (set (reg:DI 212)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 231 230 232 16 (set (reg:DI 4 si)
        (reg:DI 103 [ D.48718 ])) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103 [ D.48718 ])
        (nil)))
(insn 232 231 233 16 (set (reg:DI 5 di)
        (reg:DI 212)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 212)
        (nil)))
(call_insn 233 232 234 16 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx119to_stringEx") [flags 0x3]  <function_decl 0x7fdf7d103bd0 to_string>) [0 to_string S1 A8])
        (const_int 0 [0])) intcode.cpp:81 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 234 233 235 16 (parallel [
            (set (reg:DI 213)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 235 234 236 16 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 236 235 237 16 (set (reg:DI 1 dx)
        (reg:DI 214)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 214)
        (nil)))
(insn 237 236 238 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fdf7b99b750 *.LC8>)) intcode.cpp:81 89 {*movdi_internal}
     (nil))
(insn 238 237 239 16 (set (reg:DI 5 di)
        (reg:DI 213)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 213)
        (nil)))
(call_insn 239 238 240 16 (call (mem:QI (symbol_ref/i:DI ("_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_") [flags 0x3]  <function_decl 0x7fdf7cd91bd0 operator+>) [0 operator+ S1 A8])
        (const_int 0 [0])) intcode.cpp:81 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 11 [0xb])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       57 (ABNORMAL,ABNORMAL_CALL,EH)
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 215 216
(note 240 239 241 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 17 (parallel [
            (set (reg:DI 215)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 242 241 243 17 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 243 242 244 17 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fdf7b99b870 *.LC9>)) intcode.cpp:81 89 {*movdi_internal}
     (nil))
(insn 244 243 245 17 (set (reg:DI 4 si)
        (reg:DI 216)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 216)
        (nil)))
(insn 245 244 246 17 (set (reg:DI 5 di)
        (reg:DI 215)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 215)
        (nil)))
(call_insn 246 245 247 17 (call (mem:QI (symbol_ref/i:DI ("_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_") [flags 0x3]  <function_decl 0x7fdf7be130d8 operator+>) [0 operator+ S1 A8])
        (const_int 0 [0])) intcode.cpp:81 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 12 [0xc])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       55 (ABNORMAL,ABNORMAL_CALL,EH)
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 217 218
(note 247 246 248 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 18 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 249 248 250 18 (set (reg:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:81 89 {*movdi_internal}
     (nil))
(insn 250 249 251 18 (set (reg:DI 4 si)
        (reg:DI 217)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 217)
        (nil)))
(insn 251 250 252 18 (set (reg:DI 5 di)
        (reg:DI 218)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 218)
        (nil)))
(call_insn 252 251 253 18 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode3logENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x3]  <function_decl 0x7fdf7bddba20 log>) [0 log S1 A8])
        (const_int 0 [0])) intcode.cpp:81 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 13 [0xd])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       54 (ABNORMAL,ABNORMAL_CALL,EH)
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 104 105 106 107 219 220 221 222 223 224 225 226 227 228 229 230
(note 253 252 254 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 19 (parallel [
            (set (reg:DI 219)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 255 254 256 19 (set (reg:DI 5 di)
        (reg:DI 219)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 219)
        (nil)))
(call_insn 256 255 257 19 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:81 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 257 256 258 19 (parallel [
            (set (reg:DI 220)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 258 257 259 19 (set (reg:DI 5 di)
        (reg:DI 220)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 220)
        (nil)))
(call_insn 259 258 260 19 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:81 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 260 259 261 19 (parallel [
            (set (reg:DI 221)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 261 260 262 19 (set (reg:DI 5 di)
        (reg:DI 221)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 221)
        (nil)))
(call_insn 262 261 263 19 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:81 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 263 262 264 19 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:82 89 {*movdi_internal}
     (nil))
(insn 264 263 265 19 (parallel [
            (set (reg/f:DI 104 [ D.48716 ])
                (plus:DI (reg/f:DI 222)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:82 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 222)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 265 264 266 19 (set (reg:DI 5 di)
        (reg/f:DI 104 [ D.48716 ])) intcode.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.48716 ])
        (nil)))
(call_insn 266 265 267 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE5beginEv") [flags 0x3]  <function_decl 0x7fdf7c18d948 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) intcode.cpp:82 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 267 266 268 19 (set (reg:DI 223)
        (reg:DI 0 ax)) intcode.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 268 267 269 19 (set (reg:DI 224)
        (reg:DI 223)) intcode.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 223)
        (nil)))
(insn 269 268 270 19 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 D.43535+0 S8 A64])
        (reg:DI 224)) intcode.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 224)
        (nil)))
(insn 270 269 271 19 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:82 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 271 270 272 19 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -208 [0xffffffffffffff30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:82 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 272 271 273 19 (set (reg:DI 4 si)
        (reg:DI 225)) intcode.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 225)
        (nil)))
(insn 273 272 274 19 (set (reg:DI 5 di)
        (reg:DI 226)) intcode.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 226)
        (nil)))
(call_insn 274 273 275 19 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC1IPxEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameIS9_S8_E7__valueES5_E6__typeEEE") [flags 0x3]  <function_decl 0x7fdf7be62948 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:82 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 275 274 276 19 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:82 89 {*movdi_internal}
     (nil))
(insn 276 275 277 19 (parallel [
            (set (reg/f:DI 105 [ D.48716 ])
                (plus:DI (reg/f:DI 227)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:82 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 227)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 277 276 278 19 (set (reg:DI 228)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 D.43671+0 S8 A64])) intcode.cpp:82 89 {*movdi_internal}
     (nil))
(insn 278 277 279 19 (set (reg:DI 4 si)
        (reg:DI 228)) intcode.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 228)
        (nil)))
(insn 279 278 280 19 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.48716 ])) intcode.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.48716 ])
        (nil)))
(call_insn 280 279 282 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE5eraseEN9__gnu_cxx17__normal_iteratorIPKxS1_EE") [flags 0x3]  <function_decl 0x7fdf7c19be58 erase>) [0 erase S1 A8])
            (const_int 0 [0]))) intcode.cpp:82 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 282 280 283 19 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:83 89 {*movdi_internal}
     (nil))
(insn 283 282 284 19 (set (reg:SI 106 [ D.48714 ])
        (mem/j:SI (plus:DI (reg/f:DI 229)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])) intcode.cpp:83 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 229)
        (nil)))
(insn 284 283 285 19 (parallel [
            (set (reg:SI 107 [ D.48714 ])
                (plus:SI (reg:SI 106 [ D.48714 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:83 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 106 [ D.48714 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 285 284 286 19 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:83 89 {*movdi_internal}
     (nil))
(insn 286 285 722 19 (set (mem/j:SI (plus:DI (reg/f:DI 230)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])
        (reg:SI 107 [ D.48714 ])) intcode.cpp:83 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 230)
        (expr_list:REG_DEAD (reg:SI 107 [ D.48714 ])
            (nil))))
(jump_insn 722 286 723 19 (set (pc)
        (label_ref 508)) intcode.cpp:84 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 723 722 289)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 110 111 112 231 232 233 234 235 236 237
(code_label 289 723 290 20 59 "" [1 uses])
(note 290 289 291 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 20 (set (reg:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:86 89 {*movdi_internal}
     (nil))
(insn 292 291 293 20 (set (reg:SI 4 si)
        (const_int 1 [0x1])) intcode.cpp:86 90 {*movsi_internal}
     (nil))
(insn 293 292 294 20 (set (reg:DI 5 di)
        (reg:DI 231)) intcode.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 231)
        (nil)))
(call_insn 294 293 295 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:86 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 295 294 296 20 (set (reg:DI 110 [ D.48718 ])
        (reg:DI 0 ax)) intcode.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 296 295 297 20 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 D.43695+0 S8 A64])
        (reg:DI 110 [ D.48718 ])) intcode.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ D.48718 ])
        (nil)))
(insn 297 296 298 20 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:86 89 {*movdi_internal}
     (nil))
(insn 298 297 299 20 (parallel [
            (set (reg/f:DI 111 [ D.48716 ])
                (plus:DI (reg/f:DI 232)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:86 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 232)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 299 298 300 20 (parallel [
            (set (reg:DI 233)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -208 [0xffffffffffffff30])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:86 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 300 299 301 20 (set (reg:DI 4 si)
        (reg:DI 233)) intcode.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 233)
        (nil)))
(insn 301 300 302 20 (set (reg:DI 5 di)
        (reg/f:DI 111 [ D.48716 ])) intcode.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.48716 ])
        (nil)))
(call_insn 302 301 303 20 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_") [flags 0x3]  <function_decl 0x7fdf7be72288 emplace_back>) [0 emplace_back S1 A8])
        (const_int 0 [0])) intcode.cpp:86 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 303 302 304 20 (set (reg:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:87 89 {*movdi_internal}
     (nil))
(insn 304 303 305 20 (set (reg:SI 4 si)
        (const_int 1 [0x1])) intcode.cpp:87 90 {*movsi_internal}
     (nil))
(insn 305 304 306 20 (set (reg:DI 5 di)
        (reg:DI 234)) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 234)
        (nil)))
(call_insn 306 305 307 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:87 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 307 306 308 20 (set (reg:DI 112 [ D.48718 ])
        (reg:DI 0 ax)) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 308 307 309 20 (parallel [
            (set (reg:DI 235)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:87 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 309 308 310 20 (set (reg:DI 4 si)
        (reg:DI 112 [ D.48718 ])) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112 [ D.48718 ])
        (nil)))
(insn 310 309 311 20 (set (reg:DI 5 di)
        (reg:DI 235)) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 235)
        (nil)))
(call_insn 311 310 312 20 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx119to_stringEx") [flags 0x3]  <function_decl 0x7fdf7d103bd0 to_string>) [0 to_string S1 A8])
        (const_int 0 [0])) intcode.cpp:87 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 312 311 313 20 (parallel [
            (set (reg:DI 236)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:87 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 313 312 314 20 (parallel [
            (set (reg:DI 237)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:87 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 314 313 315 20 (set (reg:DI 1 dx)
        (reg:DI 237)) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 237)
        (nil)))
(insn 315 314 316 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fdf7b99ba20 *.LC10>)) intcode.cpp:87 89 {*movdi_internal}
     (nil))
(insn 316 315 317 20 (set (reg:DI 5 di)
        (reg:DI 236)) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 236)
        (nil)))
(call_insn 317 316 318 20 (call (mem:QI (symbol_ref/i:DI ("_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_") [flags 0x3]  <function_decl 0x7fdf7cd91bd0 operator+>) [0 operator+ S1 A8])
        (const_int 0 [0])) intcode.cpp:87 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 17 [0x11])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       60 (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 238 239
(note 318 317 319 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 21 (parallel [
            (set (reg:DI 238)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:87 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 320 319 321 21 (set (reg:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:87 89 {*movdi_internal}
     (nil))
(insn 321 320 322 21 (set (reg:DI 4 si)
        (reg:DI 238)) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 238)
        (nil)))
(insn 322 321 323 21 (set (reg:DI 5 di)
        (reg:DI 239)) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 239)
        (nil)))
(call_insn 323 322 324 21 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode3logENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x3]  <function_decl 0x7fdf7bddba20 log>) [0 log S1 A8])
        (const_int 0 [0])) intcode.cpp:87 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 18 [0x12])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       59 (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 113 114 240 241 242 243
(note 324 323 325 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 22 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:87 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 326 325 327 22 (set (reg:DI 5 di)
        (reg:DI 240)) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 240)
        (nil)))
(call_insn 327 326 328 22 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:87 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 328 327 329 22 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:87 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 329 328 330 22 (set (reg:DI 5 di)
        (reg:DI 241)) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 241)
        (nil)))
(call_insn 330 329 331 22 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:87 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 331 330 332 22 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:88 89 {*movdi_internal}
     (nil))
(insn 332 331 333 22 (set (reg:SI 113 [ D.48714 ])
        (mem/j:SI (plus:DI (reg/f:DI 242)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])) intcode.cpp:88 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 242)
        (nil)))
(insn 333 332 334 22 (parallel [
            (set (reg:SI 114 [ D.48714 ])
                (plus:SI (reg:SI 113 [ D.48714 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:88 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 113 [ D.48714 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 334 333 335 22 (set (reg/f:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:88 89 {*movdi_internal}
     (nil))
(insn 335 334 724 22 (set (mem/j:SI (plus:DI (reg/f:DI 243)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])
        (reg:SI 114 [ D.48714 ])) intcode.cpp:88 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 243)
        (expr_list:REG_DEAD (reg:SI 114 [ D.48714 ])
            (nil))))
(jump_insn 724 335 725 22 (set (pc)
        (label_ref 508)) intcode.cpp:89 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 725 724 338)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 244 245 246 247
(code_label 338 725 339 23 60 "" [1 uses])
(note 339 338 340 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 23 (set (reg:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:91 89 {*movdi_internal}
     (nil))
(insn 341 340 342 23 (set (reg:SI 4 si)
        (const_int 1 [0x1])) intcode.cpp:91 90 {*movsi_internal}
     (nil))
(insn 342 341 343 23 (set (reg:DI 5 di)
        (reg:DI 244)) intcode.cpp:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 244)
        (nil)))
(call_insn 343 342 344 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:91 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 344 343 345 23 (set (reg:DI 245)
        (reg:DI 0 ax)) intcode.cpp:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 345 344 346 23 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])
        (reg:DI 245)) intcode.cpp:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 245)
        (nil)))
(insn 346 345 347 23 (set (reg:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:92 89 {*movdi_internal}
     (nil))
(insn 347 346 348 23 (set (reg:SI 4 si)
        (const_int 2 [0x2])) intcode.cpp:92 90 {*movsi_internal}
     (nil))
(insn 348 347 349 23 (set (reg:DI 5 di)
        (reg:DI 246)) intcode.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 246)
        (nil)))
(call_insn 349 348 350 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:92 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 350 349 351 23 (set (reg:DI 247)
        (reg:DI 0 ax)) intcode.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 351 350 352 23 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])
        (reg:DI 247)) intcode.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 247)
        (nil)))
(insn 352 351 353 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])
            (const_int 0 [0]))) intcode.cpp:93 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 353 352 354 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 361)
            (pc))) intcode.cpp:93 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 361)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 116 248 249
(note 354 353 355 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 24 (set (reg:DI 248)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])) intcode.cpp:94 89 {*movdi_internal}
     (nil))
(insn 356 355 357 24 (set (reg:SI 116 [ D.48714 ])
        (subreg:SI (reg:DI 248) 0)) intcode.cpp:94 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 248)
        (nil)))
(insn 357 356 358 24 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:94 89 {*movdi_internal}
     (nil))
(insn 358 357 726 24 (set (mem/j:SI (plus:DI (reg/f:DI 249)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])
        (reg:SI 116 [ D.48714 ])) intcode.cpp:94 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 249)
        (expr_list:REG_DEAD (reg:SI 116 [ D.48714 ])
            (nil))))
(jump_insn 726 358 727 24 (set (pc)
        (label_ref 508)) intcode.cpp:97 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 727 726 361)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 117 118 250 251
(code_label 361 727 362 25 67 "" [1 uses])
(note 362 361 363 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 364 25 (set (reg/f:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:96 89 {*movdi_internal}
     (nil))
(insn 364 363 365 25 (set (reg:SI 117 [ D.48714 ])
        (mem/j:SI (plus:DI (reg/f:DI 250)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])) intcode.cpp:96 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 250)
        (nil)))
(insn 365 364 366 25 (parallel [
            (set (reg:SI 118 [ D.48714 ])
                (plus:SI (reg:SI 117 [ D.48714 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:96 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 117 [ D.48714 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 366 365 367 25 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:96 89 {*movdi_internal}
     (nil))
(insn 367 366 728 25 (set (mem/j:SI (plus:DI (reg/f:DI 251)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])
        (reg:SI 118 [ D.48714 ])) intcode.cpp:96 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 251)
        (expr_list:REG_DEAD (reg:SI 118 [ D.48714 ])
            (nil))))
(jump_insn 728 367 729 25 (set (pc)
        (label_ref 508)) intcode.cpp:97 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 729 728 372)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 252 253 254 255
(code_label 372 729 373 26 61 "" [1 uses])
(note 373 372 374 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 26 (set (reg:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:99 89 {*movdi_internal}
     (nil))
(insn 375 374 376 26 (set (reg:SI 4 si)
        (const_int 1 [0x1])) intcode.cpp:99 90 {*movsi_internal}
     (nil))
(insn 376 375 377 26 (set (reg:DI 5 di)
        (reg:DI 252)) intcode.cpp:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 252)
        (nil)))
(call_insn 377 376 378 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:99 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 378 377 379 26 (set (reg:DI 253)
        (reg:DI 0 ax)) intcode.cpp:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 379 378 380 26 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])
        (reg:DI 253)) intcode.cpp:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 253)
        (nil)))
(insn 380 379 381 26 (set (reg:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:100 89 {*movdi_internal}
     (nil))
(insn 381 380 382 26 (set (reg:SI 4 si)
        (const_int 2 [0x2])) intcode.cpp:100 90 {*movsi_internal}
     (nil))
(insn 382 381 383 26 (set (reg:DI 5 di)
        (reg:DI 254)) intcode.cpp:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 254)
        (nil)))
(call_insn 383 382 384 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 384 383 385 26 (set (reg:DI 255)
        (reg:DI 0 ax)) intcode.cpp:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 385 384 386 26 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])
        (reg:DI 255)) intcode.cpp:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 255)
        (nil)))
(insn 386 385 387 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])
            (const_int 0 [0]))) intcode.cpp:101 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 387 386 388 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 395)
            (pc))) intcode.cpp:101 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 395)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 119 256 257
(note 388 387 389 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 27 (set (reg:DI 256)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])) intcode.cpp:102 89 {*movdi_internal}
     (nil))
(insn 390 389 391 27 (set (reg:SI 119 [ D.48714 ])
        (subreg:SI (reg:DI 256) 0)) intcode.cpp:102 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 256)
        (nil)))
(insn 391 390 392 27 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:102 89 {*movdi_internal}
     (nil))
(insn 392 391 730 27 (set (mem/j:SI (plus:DI (reg/f:DI 257)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])
        (reg:SI 119 [ D.48714 ])) intcode.cpp:102 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 257)
        (expr_list:REG_DEAD (reg:SI 119 [ D.48714 ])
            (nil))))
(jump_insn 730 392 731 27 (set (pc)
        (label_ref 508)) intcode.cpp:105 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 731 730 395)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120 121 258 259
(code_label 395 731 396 28 69 "" [1 uses])
(note 396 395 397 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 28 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:104 89 {*movdi_internal}
     (nil))
(insn 398 397 399 28 (set (reg:SI 120 [ D.48714 ])
        (mem/j:SI (plus:DI (reg/f:DI 258)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])) intcode.cpp:104 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 258)
        (nil)))
(insn 399 398 400 28 (parallel [
            (set (reg:SI 121 [ D.48714 ])
                (plus:SI (reg:SI 120 [ D.48714 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:104 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 120 [ D.48714 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 400 399 401 28 (set (reg/f:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:104 89 {*movdi_internal}
     (nil))
(insn 401 400 732 28 (set (mem/j:SI (plus:DI (reg/f:DI 259)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])
        (reg:SI 121 [ D.48714 ])) intcode.cpp:104 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 259)
        (expr_list:REG_DEAD (reg:SI 121 [ D.48714 ])
            (nil))))
(jump_insn 732 401 733 28 (set (pc)
        (label_ref 508)) intcode.cpp:105 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 733 732 406)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 122 123 124 125 260 261 262 263 264 265 266 267
(code_label 406 733 407 29 62 "" [1 uses])
(note 407 406 408 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 409 29 (set (reg:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:107 89 {*movdi_internal}
     (nil))
(insn 409 408 410 29 (set (reg:SI 4 si)
        (const_int 1 [0x1])) intcode.cpp:107 90 {*movsi_internal}
     (nil))
(insn 410 409 411 29 (set (reg:DI 5 di)
        (reg:DI 260)) intcode.cpp:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 260)
        (nil)))
(call_insn 411 410 412 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:107 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 412 411 413 29 (set (reg:DI 261)
        (reg:DI 0 ax)) intcode.cpp:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 413 412 414 29 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])
        (reg:DI 261)) intcode.cpp:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 261)
        (nil)))
(insn 414 413 415 29 (set (reg:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:108 89 {*movdi_internal}
     (nil))
(insn 415 414 416 29 (set (reg:SI 4 si)
        (const_int 2 [0x2])) intcode.cpp:108 90 {*movsi_internal}
     (nil))
(insn 416 415 417 29 (set (reg:DI 5 di)
        (reg:DI 262)) intcode.cpp:108 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 262)
        (nil)))
(call_insn 417 416 418 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:108 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 418 417 419 29 (set (reg:DI 263)
        (reg:DI 0 ax)) intcode.cpp:108 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 419 418 420 29 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])
        (reg:DI 263)) intcode.cpp:108 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 263)
        (nil)))
(insn 420 419 421 29 (set (reg:DI 264)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])) intcode.cpp:109 89 {*movdi_internal}
     (nil))
(insn 421 420 422 29 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 264)
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64]))) intcode.cpp:109 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 264)
        (nil)))
(insn 422 421 423 29 (set (reg:QI 122 [ D.48719 ])
        (lt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) intcode.cpp:109 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 423 422 424 29 (set (reg:DI 123 [ D.48718 ])
        (zero_extend:DI (reg:QI 122 [ D.48719 ]))) intcode.cpp:109 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 122 [ D.48719 ])
        (nil)))
(insn 424 423 425 29 (set (reg:DI 265)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:109 89 {*movdi_internal}
     (nil))
(insn 425 424 426 29 (set (reg:DI 1 dx)
        (reg:DI 123 [ D.48718 ])) intcode.cpp:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123 [ D.48718 ])
        (nil)))
(insn 426 425 427 29 (set (reg:SI 4 si)
        (const_int 3 [0x3])) intcode.cpp:109 90 {*movsi_internal}
     (nil))
(insn 427 426 428 29 (set (reg:DI 5 di)
        (reg:DI 265)) intcode.cpp:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 265)
        (nil)))
(call_insn 428 427 429 29 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8setParamEix") [flags 0x3]  <function_decl 0x7fdf7bddb948 setParam>) [0 setParam S1 A8])
        (const_int 0 [0])) intcode.cpp:109 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 429 428 430 29 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:110 89 {*movdi_internal}
     (nil))
(insn 430 429 431 29 (set (reg:SI 124 [ D.48714 ])
        (mem/j:SI (plus:DI (reg/f:DI 266)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])) intcode.cpp:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 266)
        (nil)))
(insn 431 430 432 29 (parallel [
            (set (reg:SI 125 [ D.48714 ])
                (plus:SI (reg:SI 124 [ D.48714 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:110 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 124 [ D.48714 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 432 431 433 29 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:110 89 {*movdi_internal}
     (nil))
(insn 433 432 734 29 (set (mem/j:SI (plus:DI (reg/f:DI 267)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])
        (reg:SI 125 [ D.48714 ])) intcode.cpp:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 267)
        (expr_list:REG_DEAD (reg:SI 125 [ D.48714 ])
            (nil))))
(jump_insn 734 433 735 29 (set (pc)
        (label_ref 508)) intcode.cpp:111 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 735 734 436)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 126 127 128 129 268 269 270 271 272 273 274 275
(code_label 436 735 437 30 63 "" [1 uses])
(note 437 436 438 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 438 437 439 30 (set (reg:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:113 89 {*movdi_internal}
     (nil))
(insn 439 438 440 30 (set (reg:SI 4 si)
        (const_int 1 [0x1])) intcode.cpp:113 90 {*movsi_internal}
     (nil))
(insn 440 439 441 30 (set (reg:DI 5 di)
        (reg:DI 268)) intcode.cpp:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 268)
        (nil)))
(call_insn 441 440 442 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:113 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 442 441 443 30 (set (reg:DI 269)
        (reg:DI 0 ax)) intcode.cpp:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 443 442 444 30 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])
        (reg:DI 269)) intcode.cpp:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 269)
        (nil)))
(insn 444 443 445 30 (set (reg:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:114 89 {*movdi_internal}
     (nil))
(insn 445 444 446 30 (set (reg:SI 4 si)
        (const_int 2 [0x2])) intcode.cpp:114 90 {*movsi_internal}
     (nil))
(insn 446 445 447 30 (set (reg:DI 5 di)
        (reg:DI 270)) intcode.cpp:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 270)
        (nil)))
(call_insn 447 446 448 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:114 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 448 447 449 30 (set (reg:DI 271)
        (reg:DI 0 ax)) intcode.cpp:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 449 448 450 30 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64])
        (reg:DI 271)) intcode.cpp:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 271)
        (nil)))
(insn 450 449 451 30 (set (reg:DI 272)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])) intcode.cpp:115 89 {*movdi_internal}
     (nil))
(insn 451 450 452 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 272)
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 b+0 S8 A64]))) intcode.cpp:115 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 272)
        (nil)))
(insn 452 451 453 30 (set (reg:QI 126 [ D.48719 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) intcode.cpp:115 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 453 452 454 30 (set (reg:DI 127 [ D.48718 ])
        (zero_extend:DI (reg:QI 126 [ D.48719 ]))) intcode.cpp:115 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 126 [ D.48719 ])
        (nil)))
(insn 454 453 455 30 (set (reg:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:115 89 {*movdi_internal}
     (nil))
(insn 455 454 456 30 (set (reg:DI 1 dx)
        (reg:DI 127 [ D.48718 ])) intcode.cpp:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127 [ D.48718 ])
        (nil)))
(insn 456 455 457 30 (set (reg:SI 4 si)
        (const_int 3 [0x3])) intcode.cpp:115 90 {*movsi_internal}
     (nil))
(insn 457 456 458 30 (set (reg:DI 5 di)
        (reg:DI 273)) intcode.cpp:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 273)
        (nil)))
(call_insn 458 457 459 30 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8setParamEix") [flags 0x3]  <function_decl 0x7fdf7bddb948 setParam>) [0 setParam S1 A8])
        (const_int 0 [0])) intcode.cpp:115 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 459 458 460 30 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:116 89 {*movdi_internal}
     (nil))
(insn 460 459 461 30 (set (reg:SI 128 [ D.48714 ])
        (mem/j:SI (plus:DI (reg/f:DI 274)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])) intcode.cpp:116 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 274)
        (nil)))
(insn 461 460 462 30 (parallel [
            (set (reg:SI 129 [ D.48714 ])
                (plus:SI (reg:SI 128 [ D.48714 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:116 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 128 [ D.48714 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 462 461 463 30 (set (reg/f:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:116 89 {*movdi_internal}
     (nil))
(insn 463 462 736 30 (set (mem/j:SI (plus:DI (reg/f:DI 275)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])
        (reg:SI 129 [ D.48714 ])) intcode.cpp:116 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 275)
        (expr_list:REG_DEAD (reg:SI 129 [ D.48714 ])
            (nil))))
(jump_insn 736 463 737 30 (set (pc)
        (label_ref 508)) intcode.cpp:117 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 737 736 466)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 130 131 132 133 134 135 136 276 277 278 279 280 281 282
(code_label 466 737 467 31 64 "" [1 uses])
(note 467 466 468 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 31 (set (reg:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:119 89 {*movdi_internal}
     (nil))
(insn 469 468 470 31 (set (reg:SI 4 si)
        (const_int 1 [0x1])) intcode.cpp:119 90 {*movsi_internal}
     (nil))
(insn 470 469 471 31 (set (reg:DI 5 di)
        (reg:DI 276)) intcode.cpp:119 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 276)
        (nil)))
(call_insn 471 470 472 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode8getParamEi") [flags 0x3]  <function_decl 0x7fdf7bddb870 getParam>) [0 getParam S1 A8])
            (const_int 0 [0]))) intcode.cpp:119 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 472 471 473 31 (set (reg:DI 277)
        (reg:DI 0 ax)) intcode.cpp:119 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 473 472 474 31 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])
        (reg:DI 277)) intcode.cpp:119 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 277)
        (nil)))
(insn 474 473 475 31 (set (reg/f:DI 278)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:120 89 {*movdi_internal}
     (nil))
(insn 475 474 476 31 (set (reg:SI 130 [ D.48714 ])
        (mem/j:SI (plus:DI (reg/f:DI 278)
                (const_int 28 [0x1c])) [0 this_16(D)->rel+0 S4 A32])) intcode.cpp:120 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 278)
        (nil)))
(insn 476 475 477 31 (set (reg:SI 131 [ D.48720 ])
        (reg:SI 130 [ D.48714 ])) intcode.cpp:120 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 130 [ D.48714 ])
        (nil)))
(insn 477 476 478 31 (set (reg:DI 279)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 a+0 S8 A64])) intcode.cpp:120 89 {*movdi_internal}
     (nil))
(insn 478 477 479 31 (set (reg:SI 132 [ D.48720 ])
        (subreg:SI (reg:DI 279) 0)) intcode.cpp:120 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 279)
        (nil)))
(insn 479 478 480 31 (parallel [
            (set (reg:SI 133 [ D.48720 ])
                (plus:SI (reg:SI 131 [ D.48720 ])
                    (reg:SI 132 [ D.48720 ])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:120 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 132 [ D.48720 ])
        (expr_list:REG_DEAD (reg:SI 131 [ D.48720 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 480 479 481 31 (set (reg:SI 134 [ D.48714 ])
        (reg:SI 133 [ D.48720 ])) intcode.cpp:120 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133 [ D.48720 ])
        (nil)))
(insn 481 480 482 31 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:120 89 {*movdi_internal}
     (nil))
(insn 482 481 483 31 (set (mem/j:SI (plus:DI (reg/f:DI 280)
                (const_int 28 [0x1c])) [0 this_16(D)->rel+0 S4 A32])
        (reg:SI 134 [ D.48714 ])) intcode.cpp:120 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 280)
        (expr_list:REG_DEAD (reg:SI 134 [ D.48714 ])
            (nil))))
(insn 483 482 484 31 (set (reg/f:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:121 89 {*movdi_internal}
     (nil))
(insn 484 483 485 31 (set (reg:SI 135 [ D.48714 ])
        (mem/j:SI (plus:DI (reg/f:DI 281)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])) intcode.cpp:121 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 281)
        (nil)))
(insn 485 484 486 31 (parallel [
            (set (reg:SI 136 [ D.48714 ])
                (plus:SI (reg:SI 135 [ D.48714 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:121 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 135 [ D.48714 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 486 485 487 31 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:121 89 {*movdi_internal}
     (nil))
(insn 487 486 738 31 (set (mem/j:SI (plus:DI (reg/f:DI 282)
                (const_int 24 [0x18])) [0 this_16(D)->ind+0 S4 A64])
        (reg:SI 136 [ D.48714 ])) intcode.cpp:121 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 282)
        (expr_list:REG_DEAD (reg:SI 136 [ D.48714 ])
            (nil))))
(jump_insn 738 487 739 31 (set (pc)
        (label_ref 508)) intcode.cpp:122 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 739 738 490)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 283
(code_label 490 739 491 32 65 "" [1 uses])
(note 491 490 492 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 32 (set (reg/f:DI 283)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 this+0 S8 A64])) intcode.cpp:124 89 {*movdi_internal}
     (nil))
(insn 493 492 740 32 (set (mem/j:QI (plus:DI (reg/f:DI 283)
                (const_int 80 [0x50])) [0 this_16(D)->done+0 S1 A64])
        (const_int 1 [0x1])) intcode.cpp:124 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 283)
        (nil)))
(jump_insn 740 493 741 32 (set (pc)
        (label_ref 508)) intcode.cpp:125 654 {jump}
     (nil)
 -> 508)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 741 740 496)
;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;;              2
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 137 284
(code_label 496 741 497 33 54 "" [91 uses])
(note 497 496 498 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 499 33 (set (reg:DI 5 di)
        (const_int 4 [0x4])) intcode.cpp:128 89 {*movdi_internal}
     (nil))
(call_insn 499 498 500 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_allocate_exception") [flags 0x41]  <function_decl 0x7fdf7be72870 __cxa_allocate_exception>) [0 __cxa_allocate_exception S1 A8])
            (const_int 0 [0]))) intcode.cpp:128 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 500 499 501 33 (set (reg/f:DI 284)
        (reg:DI 0 ax)) intcode.cpp:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 284)
            (nil))))
(insn 501 500 502 33 (set (reg/f:DI 137 [ D.48721 ])
        (reg/f:DI 284)) intcode.cpp:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 284)
        (nil)))
(insn 502 501 503 33 (set (mem:SI (reg/f:DI 137 [ D.48721 ]) [0 MEM[(int *)_205]+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) intcode.cpp:128 90 {*movsi_internal}
     (nil))
(insn 503 502 504 33 (set (reg:DI 1 dx)
        (const_int 0 [0])) intcode.cpp:128 89 {*movdi_internal}
     (nil))
(insn 504 503 505 33 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZTIi") [flags 0x40]  <var_decl 0x7fdf7be783f0 _ZTIi>)) intcode.cpp:128 89 {*movdi_internal}
     (nil))
(insn 505 504 506 33 (set (reg:DI 5 di)
        (reg/f:DI 137 [ D.48721 ])) intcode.cpp:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137 [ D.48721 ])
        (nil)))
(call_insn 506 505 507 33 (call (mem:QI (symbol_ref:DI ("__cxa_throw") [flags 0x41]  <function_decl 0x7fdf7be726c0 __cxa_throw>) [0 __cxa_throw S1 A8])
        (const_int 0 [0])) intcode.cpp:128 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 507 506 508)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 [100.0%] 
;;              9 [100.0%] 
;;              15 [100.0%] 
;;              19 [100.0%] 
;;              24 [100.0%] 
;;              27 [100.0%] 
;;              28 [100.0%] 
;;              29 [100.0%] 
;;              30 [100.0%] 
;;              31 [100.0%] 
;;              22 [100.0%] 
;;              32 [100.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 508 507 509 34 66 "" [12 uses])
(note 509 508 717 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 717 509 626 34 (const_int 0 [0]) intcode.cpp:130 684 {nop}
     (nil))
(insn 626 717 627 34 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48723+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) intcode.cpp:130 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 627 626 742 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 630)
            (pc))) intcode.cpp:130 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 630)
;;  succ:       63
;;              35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 742 627 744 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(jump_insn 744 742 745 35 (set (pc)
        (label_ref 743)) 654 {jump}
     (nil)
 -> 743)
;;  succ:       62 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 745 744 659)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 36 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 285 286 287
(code_label/s 659 745 662 36 91 "" [1 uses])
(note 662 659 660 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 660 662 514 36 (set (reg:DI 287)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 514 660 515 36 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 515 514 516 36 (set (reg:DI 5 di)
        (reg:DI 285)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 285)
        (nil)))
(call_insn 516 515 517 36 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 517 516 746 36 (set (reg:DI 286)
        (reg:DI 287)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 287)
        (nil)))
(jump_insn 746 517 747 36 (set (pc)
        (label_ref 519)) 654 {jump}
     (nil)
 -> 519)
;;  succ:       38 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 286

(barrier 747 746 653)
;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 37 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 286
(code_label/s 653 747 658 37 90 "" [1 uses])
(note 658 653 654 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 654 658 519 37 (set (reg:DI 286)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       38 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 286

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 [100.0%]  (FALLTHRU)
;;              36 [100.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 286
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 286
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 290 291
(code_label 519 654 520 38 72 "" [1 uses])
(note 520 519 521 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 521 520 522 38 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 522 521 523 38 (set (reg:DI 5 di)
        (reg:DI 290)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 290)
        (nil)))
(call_insn 523 522 524 38 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 524 523 748 38 (set (reg:DI 291)
        (reg:DI 286)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 286)
        (nil)))
(jump_insn 748 524 749 38 (set (pc)
        (label_ref 526)) 654 {jump}
     (nil)
 -> 526)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 291

(barrier 749 748 647)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 39 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 291
(code_label/s 647 749 652 39 89 "" [1 uses])
(note 652 647 648 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 648 652 526 39 (set (reg:DI 291)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       40 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 291

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 [100.0%]  (FALLTHRU)
;;              38 [100.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 291
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 291
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 293 294
(code_label 526 648 527 40 73 "" [1 uses])
(note 527 526 528 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 528 527 529 40 (parallel [
            (set (reg:DI 293)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 529 528 530 40 (set (reg:DI 5 di)
        (reg:DI 293)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 293)
        (nil)))
(call_insn 530 529 531 40 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 531 530 750 40 (set (reg:DI 294)
        (reg:DI 291)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 291)
        (nil)))
(jump_insn 750 531 751 40 (set (pc)
        (label_ref 533)) 654 {jump}
     (nil)
 -> 533)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 294

(barrier 751 750 641)
;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 41 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 294
(code_label/s 641 751 646 41 88 "" [1 uses])
(note 646 641 642 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 642 646 533 41 (set (reg:DI 294)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       42 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 294

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 [100.0%]  (FALLTHRU)
;;              40 [100.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 294
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 294
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 296 297
(code_label 533 642 534 42 74 "" [1 uses])
(note 534 533 535 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 535 534 536 42 (parallel [
            (set (reg:DI 296)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 536 535 537 42 (set (reg:DI 5 di)
        (reg:DI 296)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 296)
        (nil)))
(call_insn 537 536 538 42 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 538 537 752 42 (set (reg:DI 297)
        (reg:DI 294)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 294)
        (nil)))
(jump_insn 752 538 753 42 (set (pc)
        (label_ref 540)) 654 {jump}
     (nil)
 -> 540)
;;  succ:       44 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 297

(barrier 753 752 635)
;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 43 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 297
(code_label/s 635 753 640 43 87 "" [1 uses])
(note 640 635 636 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 636 640 540 43 (set (reg:DI 297)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       44 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 297

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 [100.0%]  (FALLTHRU)
;;              42 [100.0%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 297
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 297
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 299
(code_label 540 636 541 44 75 "" [1 uses])
(note 541 540 542 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 542 541 543 44 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:68 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 543 542 544 44 (set (reg:DI 5 di)
        (reg:DI 299)) intcode.cpp:68 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 299)
        (nil)))
(call_insn 544 543 545 44 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:68 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 545 544 546 44 (set (reg/f:DI 115 [ D.48710 ])
        (reg:DI 297)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 297)
        (nil)))
(insn 546 545 547 44 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.48710 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.48710 ])
        (nil)))
(call_insn 547 546 548 44 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 548 547 687)
;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 45 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 300 301 302
(code_label/s 687 548 690 45 96 "" [1 uses])
(note 690 687 688 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 688 690 551 45 (set (reg:DI 302)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 551 688 552 45 (parallel [
            (set (reg:DI 300)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 552 551 553 45 (set (reg:DI 5 di)
        (reg:DI 300)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 300)
        (nil)))
(call_insn 553 552 554 45 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 554 553 754 45 (set (reg:DI 301)
        (reg:DI 302)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 302)
        (nil)))
(jump_insn 754 554 755 45 (set (pc)
        (label_ref 556)) 654 {jump}
     (nil)
 -> 556)
;;  succ:       47 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 301

(barrier 755 754 681)
;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 46 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 301
(code_label/s 681 755 686 46 95 "" [1 uses])
(note 686 681 682 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 682 686 556 46 (set (reg:DI 301)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       47 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 301

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 [100.0%]  (FALLTHRU)
;;              45 [100.0%] 
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 301
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 301
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 305 306
(code_label 556 682 557 47 77 "" [1 uses])
(note 557 556 558 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 558 557 559 47 (parallel [
            (set (reg:DI 305)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 559 558 560 47 (set (reg:DI 5 di)
        (reg:DI 305)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 305)
        (nil)))
(call_insn 560 559 561 47 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 561 560 756 47 (set (reg:DI 306)
        (reg:DI 301)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 301)
        (nil)))
(jump_insn 756 561 757 47 (set (pc)
        (label_ref 563)) 654 {jump}
     (nil)
 -> 563)
;;  succ:       49 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 306

(barrier 757 756 675)
;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 48 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 306
(code_label/s 675 757 680 48 94 "" [1 uses])
(note 680 675 676 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 676 680 563 48 (set (reg:DI 306)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       49 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 306

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 [100.0%]  (FALLTHRU)
;;              47 [100.0%] 
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 306
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 306
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 308 309
(code_label 563 676 564 49 78 "" [1 uses])
(note 564 563 565 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 565 564 566 49 (parallel [
            (set (reg:DI 308)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 566 565 567 49 (set (reg:DI 5 di)
        (reg:DI 308)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 308)
        (nil)))
(call_insn 567 566 568 49 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 568 567 758 49 (set (reg:DI 309)
        (reg:DI 306)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 306)
        (nil)))
(jump_insn 758 568 759 49 (set (pc)
        (label_ref 570)) 654 {jump}
     (nil)
 -> 570)
;;  succ:       51 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 309

(barrier 759 758 669)
;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 50 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 309
(code_label/s 669 759 674 50 93 "" [1 uses])
(note 674 669 670 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 670 674 570 50 (set (reg:DI 309)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       51 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 309

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 [100.0%]  (FALLTHRU)
;;              49 [100.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 309
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 309
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 311 312
(code_label 570 670 571 51 79 "" [1 uses])
(note 571 570 572 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 572 571 573 51 (parallel [
            (set (reg:DI 311)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 573 572 574 51 (set (reg:DI 5 di)
        (reg:DI 311)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 311)
        (nil)))
(call_insn 574 573 575 51 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 575 574 760 51 (set (reg:DI 312)
        (reg:DI 309)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 309)
        (nil)))
(jump_insn 760 575 761 51 (set (pc)
        (label_ref 577)) 654 {jump}
     (nil)
 -> 577)
;;  succ:       53 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 312

(barrier 761 760 663)
;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 52 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 312
(code_label/s 663 761 668 52 92 "" [1 uses])
(note 668 663 664 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 664 668 577 52 (set (reg:DI 312)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       53 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 312

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 [100.0%]  (FALLTHRU)
;;              51 [100.0%] 
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 312
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 312
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 108 314
(code_label 577 664 578 53 80 "" [1 uses])
(note 578 577 579 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 579 578 580 53 (parallel [
            (set (reg:DI 314)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:75 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 580 579 581 53 (set (reg:DI 5 di)
        (reg:DI 314)) intcode.cpp:75 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 314)
        (nil)))
(call_insn 581 580 582 53 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:75 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 582 581 583 53 (set (reg/f:DI 108 [ D.48711 ])
        (reg:DI 312)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 312)
        (nil)))
(insn 583 582 584 53 (set (reg:DI 5 di)
        (reg/f:DI 108 [ D.48711 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ D.48711 ])
        (nil)))
(call_insn 584 583 585 53 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 585 584 703)
;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 54 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 315 316 317
(code_label/s 703 585 706 54 99 "" [1 uses])
(note 706 703 704 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 704 706 588 54 (set (reg:DI 317)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 588 704 589 54 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 589 588 590 54 (set (reg:DI 5 di)
        (reg:DI 315)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 315)
        (nil)))
(call_insn 590 589 591 54 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:81 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 591 590 762 54 (set (reg:DI 316)
        (reg:DI 317)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 317)
        (nil)))
(jump_insn 762 591 763 54 (set (pc)
        (label_ref 593)) 654 {jump}
     (nil)
 -> 593)
;;  succ:       56 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 316

(barrier 763 762 697)
;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 55 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 316
(code_label/s 697 763 702 55 98 "" [1 uses])
(note 702 697 698 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 698 702 593 55 (set (reg:DI 316)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       56 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 316

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 [100.0%]  (FALLTHRU)
;;              54 [100.0%] 
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 316
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 316
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 320 321
(code_label 593 698 594 56 82 "" [1 uses])
(note 594 593 595 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 56 (parallel [
            (set (reg:DI 320)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 596 595 597 56 (set (reg:DI 5 di)
        (reg:DI 320)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 320)
        (nil)))
(call_insn 597 596 598 56 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:81 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 598 597 764 56 (set (reg:DI 321)
        (reg:DI 316)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 316)
        (nil)))
(jump_insn 764 598 765 56 (set (pc)
        (label_ref 600)) 654 {jump}
     (nil)
 -> 600)
;;  succ:       58 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321

(barrier 765 764 691)
;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 57 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 321
(code_label/s 691 765 696 57 97 "" [1 uses])
(note 696 691 692 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 692 696 600 57 (set (reg:DI 321)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       58 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 [100.0%]  (FALLTHRU)
;;              56 [100.0%] 
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 109 323
(code_label 600 692 601 58 83 "" [1 uses])
(note 601 600 602 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 58 (parallel [
            (set (reg:DI 323)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:81 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 603 602 604 58 (set (reg:DI 5 di)
        (reg:DI 323)) intcode.cpp:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 323)
        (nil)))
(call_insn 604 603 605 58 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:81 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 605 604 606 58 (set (reg/f:DI 109 [ D.48712 ])
        (reg:DI 321)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 321)
        (nil)))
(insn 606 605 607 58 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.48712 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.48712 ])
        (nil)))
(call_insn 607 606 608 58 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 608 607 713)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 59 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 324 325 326
(code_label/s 713 608 716 59 101 "" [1 uses])
(note 716 713 714 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 714 716 611 59 (set (reg:DI 326)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 611 714 612 59 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:87 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 612 611 613 59 (set (reg:DI 5 di)
        (reg:DI 324)) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 324)
        (nil)))
(call_insn 613 612 614 59 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:87 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 614 613 766 59 (set (reg:DI 325)
        (reg:DI 326)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 326)
        (nil)))
(jump_insn 766 614 767 59 (set (pc)
        (label_ref 616)) 654 {jump}
     (nil)
 -> 616)
;;  succ:       61 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 325

(barrier 767 766 707)
;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 60 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 325
(code_label/s 707 767 712 60 100 "" [1 uses])
(note 712 707 708 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 708 712 616 60 (set (reg:DI 325)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       61 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 325

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60 [100.0%]  (FALLTHRU)
;;              59 [100.0%] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 325
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 325
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 138 329
(code_label 616 708 617 61 85 "" [1 uses])
(note 617 616 618 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 618 617 619 61 (parallel [
            (set (reg:DI 329)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:87 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 619 618 620 61 (set (reg:DI 5 di)
        (reg:DI 329)) intcode.cpp:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 329)
        (nil)))
(call_insn 620 619 621 61 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.cpp:87 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 621 620 622 61 (set (reg/f:DI 138 [ D.48713 ])
        (reg:DI 325)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 325)
        (nil)))
(insn 622 621 623 61 (set (reg:DI 5 di)
        (reg/f:DI 138 [ D.48713 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ D.48713 ])
        (nil)))
(call_insn 623 622 624 61 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 624 623 743)
;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 [100.0%] 
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 743 624 633 62 102 "" [1 uses])
(note 633 743 628 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(call_insn 628 633 629 62 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) intcode.cpp:130 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 629 628 630)
;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 630 629 634 63 86 "" [1 uses])
(note 634 630 0 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void IntCode::run(bool) (_ZN7IntCode3runEb, funcdef_no=1898, decl_uid=43110, cgraph_uid=517, symbol_order=519)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5

   Insn 35(l0): point = 1
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 31(l0): point = 13
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 21(l0): point = 27
   Insn 20(l0): point = 29
   Insn 19(l0): point = 31
   Insn 4(l0): point = 34
   Insn 3(l0): point = 36
   Insn 2(l0): point = 38
 a0(r91): [30..31]
 a1(r90): [23..24]
 a2(r87): [7..8]
 a3(r89): [9..10]
 a4(r88): [35..36]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r91): [6..7]
 a1(r90): [4..5]
 a2(r87): [0..1]
 a3(r89): [2..3]
 a4(r88): [8..9]
  regions=1, blocks=9, points=10
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    2:r87  l0     0    4:r88  l0     0    3:r89  l0     0    1:r90  l0     0
    0:r91  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void IntCode::run(bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d,1u} r5={5d,3u} r6={1d,8u} r7={1d,10u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,7u} r17={4d,2u} r18={2d} r19={2d} r20={1d,14u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 222{172d,50u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:132 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg:SI 88)
        (reg:SI 4 si [ print ])) intcode.cpp:132 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ print ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 print+0 S1 A32])
        (subreg:QI (reg:SI 88) 0)) intcode.cpp:132 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(note 5 4 24 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 89
(code_label 24 5 7 3 106 "" [1 uses])
(note 7 24 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:133 89 {*movdi_internal}
     (nil))
(insn 9 8 10 3 (set (reg:QI 87 [ D.48745 ])
        (mem/j:QI (plus:DI (reg/f:DI 89)
                (const_int 80 [0x50])) [0 this_4(D)->done+0 S1 A64])) intcode.cpp:133 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.48745 ])
            (const_int 0 [0]))) intcode.cpp:133 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 87 [ D.48745 ])
        (nil)))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 34)
            (pc))) intcode.cpp:133 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 34)
;;  succ:       8
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:134 89 {*movdi_internal}
     (nil))
(insn 14 13 15 4 (set (reg:DI 5 di)
        (reg:DI 90)) intcode.cpp:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 15 14 16 4 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode4stepEv") [flags 0x3]  <function_decl 0x7fdf7bddb510 step>) [0 step S1 A8])
        (const_int 0 [0])) intcode.cpp:134 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 print+0 S1 A32])
            (const_int 0 [0]))) intcode.cpp:135 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) intcode.cpp:135 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:136 89 {*movdi_internal}
     (nil))
(insn 20 19 21 5 (set (reg:DI 5 di)
        (reg:DI 91)) intcode.cpp:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 21 20 22 5 (call (mem:QI (symbol_ref:DI ("_ZN7IntCode5printEv") [flags 0x3]  <function_decl 0x7fdf7bddb6c0 print>) [0 print S1 A8])
        (const_int 0 [0])) intcode.cpp:136 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 22 21 23 6 105 "" [1 uses])
(note 23 22 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 31 23 32 6 (set (pc)
        (label_ref 24)) intcode.cpp:133 654 {jump}
     (nil)
 -> 24)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 32 31 34)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 7, flags: (NEW, RTL, MODIFIED)
;;  pred:       3
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 34 32 33 8 107 "" [1 uses])
(note 33 34 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 29 8 (const_int 0 [0]) intcode.cpp:138 684 {nop}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 29 35 30 7 103 "" [0 uses])
(note 30 29 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void IntCode::print() (_ZN7IntCode5printEv, funcdef_no=1899, decl_uid=43112, cgraph_uid=518, symbol_order=520)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 22 count 18 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 94.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 126.
verify found no changes in insn with uid = 130.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 145.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 161.
verify found no changes in insn with uid = 165.
verify found no changes in insn with uid = 169.
verify found no changes in insn with uid = 174.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 182.
verify found no changes in insn with uid = 188.
verify found no changes in insn with uid = 196.
verify found no changes in insn with uid = 200.
verify found no changes in insn with uid = 204.
verify found no changes in insn with uid = 208.
verify found no changes in insn with uid = 212.
verify found no changes in insn with uid = 217.
verify found no changes in insn with uid = 221.
verify found no changes in insn with uid = 225.
verify found no changes in insn with uid = 243.
verify found no changes in insn with uid = 247.
verify found no changes in insn with uid = 251.
verify found no changes in insn with uid = 255.
verify found no changes in insn with uid = 259.
verify found no changes in insn with uid = 263.
verify found no changes in insn with uid = 267.
verify found no changes in insn with uid = 271.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r153,l0) best DIREG, allocno GENERAL_REGS
    r152: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r152,l0) best SIREG, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r149,l0) best DIREG, allocno GENERAL_REGS
    r148: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r148,l0) best SIREG, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r146,l0) best AREG, allocno GENERAL_REGS
    r145: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r145,l0) best AREG, allocno GENERAL_REGS
    r144: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r144,l0) best AREG, allocno GENERAL_REGS
    r143: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r143,l0) best AREG, allocno GENERAL_REGS
    r142: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r142,l0) best AREG, allocno GENERAL_REGS
    r141: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r141,l0) best AREG, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r139,l0) best AREG, allocno GENERAL_REGS
    r138: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r138,l0) best AREG, allocno GENERAL_REGS
    r137: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r137,l0) best SIREG, allocno GENERAL_REGS
    r136: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r136,l0) best AREG, allocno GENERAL_REGS
    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r135,l0) best AREG, allocno GENERAL_REGS
    r134: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r134,l0) best AREG, allocno GENERAL_REGS
    r133: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r133,l0) best AREG, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r131,l0) best AREG, allocno GENERAL_REGS
    r130: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r130,l0) best DIREG, allocno GENERAL_REGS
    r129: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r129,l0) best AREG, allocno GENERAL_REGS
    r128: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r128,l0) best AREG, allocno GENERAL_REGS
    r127: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r127,l0) best SIREG, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r126,l0) best AREG, allocno GENERAL_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r125,l0) best AREG, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r124,l0) best AREG, allocno GENERAL_REGS
    r123: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r123,l0) best AREG, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r121,l0) best AREG, allocno GENERAL_REGS
    r120: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r120,l0) best DIREG, allocno GENERAL_REGS
    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r119,l0) best AREG, allocno GENERAL_REGS
    r118: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r118,l0) best SIREG, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r117,l0) best AREG, allocno GENERAL_REGS
    r116: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r116,l0) best DIREG, allocno GENERAL_REGS
    r115: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r115,l0) best SIREG, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r114,l0) best AREG, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r111,l0) best SIREG, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r108,l0) best SIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r102,l0) best AREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a5(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a6(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a7(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a8(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a9(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a10(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a11(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a12(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a14(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a15(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a16(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a17(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a18(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:2
  a19(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a20(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a22(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a23(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a24(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a25(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a26(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a27(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a28(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a29(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a30(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:2
  a31(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a33(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a34(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a35(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a36(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a37(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a38(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a39(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a40(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a41(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a42(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a43(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a44(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a46(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a47(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a48(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a49(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a50(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a51(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a52(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a54(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a55(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a56(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a57(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a58(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a59(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a60(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a61(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a62(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a63(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a64(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a67(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a68(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a69(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a70(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a71(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a72(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a73(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a74(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4

   Insn 271(l0): point = 1
   Insn 270(l0): point = 4
   Insn 269(l0): point = 6
   Insn 277(l0): point = 8
   Insn 267(l0): point = 10
   Insn 266(l0): point = 12
   Insn 265(l0): point = 14
   Insn 264(l0): point = 16
   Insn 263(l0): point = 18
   Insn 262(l0): point = 20
   Insn 261(l0): point = 22
   Insn 260(l0): point = 24
   Insn 259(l0): point = 26
   Insn 258(l0): point = 28
   Insn 257(l0): point = 30
   Insn 256(l0): point = 32
   Insn 255(l0): point = 34
   Insn 254(l0): point = 36
   Insn 253(l0): point = 38
   Insn 252(l0): point = 40
   Insn 251(l0): point = 42
   Insn 250(l0): point = 44
   Insn 249(l0): point = 46
   Insn 248(l0): point = 48
   Insn 247(l0): point = 50
   Insn 246(l0): point = 52
   Insn 245(l0): point = 54
   Insn 244(l0): point = 56
   Insn 243(l0): point = 58
   Insn 242(l0): point = 60
   Insn 241(l0): point = 62
   Insn 238(l0): point = 65
   Insn 282(l0): point = 68
   Insn 233(l0): point = 70
   Insn 231(l0): point = 73
   Insn 230(l0): point = 75
   Insn 229(l0): point = 77
   Insn 228(l0): point = 79
   Insn 225(l0): point = 82
   Insn 224(l0): point = 84
   Insn 223(l0): point = 86
   Insn 222(l0): point = 88
   Insn 221(l0): point = 90
   Insn 220(l0): point = 92
   Insn 219(l0): point = 94
   Insn 218(l0): point = 96
   Insn 217(l0): point = 98
   Insn 216(l0): point = 100
   Insn 215(l0): point = 102
   Insn 214(l0): point = 104
   Insn 213(l0): point = 106
   Insn 212(l0): point = 108
   Insn 211(l0): point = 110
   Insn 210(l0): point = 112
   Insn 209(l0): point = 114
   Insn 208(l0): point = 116
   Insn 207(l0): point = 118
   Insn 206(l0): point = 120
   Insn 205(l0): point = 122
   Insn 204(l0): point = 124
   Insn 203(l0): point = 126
   Insn 202(l0): point = 128
   Insn 201(l0): point = 130
   Insn 200(l0): point = 132
   Insn 199(l0): point = 134
   Insn 198(l0): point = 136
   Insn 197(l0): point = 138
   Insn 196(l0): point = 140
   Insn 195(l0): point = 142
   Insn 194(l0): point = 144
   Insn 192(l0): point = 147
   Insn 191(l0): point = 149
   Insn 190(l0): point = 151
   Insn 189(l0): point = 153
   Insn 188(l0): point = 155
   Insn 187(l0): point = 157
   Insn 186(l0): point = 159
   Insn 185(l0): point = 161
   Insn 182(l0): point = 164
   Insn 181(l0): point = 166
   Insn 180(l0): point = 168
   Insn 179(l0): point = 170
   Insn 178(l0): point = 172
   Insn 177(l0): point = 174
   Insn 176(l0): point = 176
   Insn 175(l0): point = 178
   Insn 174(l0): point = 180
   Insn 173(l0): point = 182
   Insn 172(l0): point = 184
   Insn 171(l0): point = 186
   Insn 170(l0): point = 188
   Insn 169(l0): point = 190
   Insn 168(l0): point = 192
   Insn 167(l0): point = 194
   Insn 166(l0): point = 196
   Insn 165(l0): point = 198
   Insn 164(l0): point = 200
   Insn 163(l0): point = 202
   Insn 162(l0): point = 204
   Insn 161(l0): point = 206
   Insn 160(l0): point = 208
   Insn 159(l0): point = 210
   Insn 158(l0): point = 212
   Insn 157(l0): point = 214
   Insn 156(l0): point = 216
   Insn 155(l0): point = 218
   Insn 154(l0): point = 220
   Insn 153(l0): point = 222
   Insn 152(l0): point = 224
   Insn 151(l0): point = 226
   Insn 149(l0): point = 229
   Insn 148(l0): point = 231
   Insn 147(l0): point = 233
   Insn 146(l0): point = 235
   Insn 145(l0): point = 237
   Insn 144(l0): point = 239
   Insn 143(l0): point = 241
   Insn 142(l0): point = 243
   Insn 141(l0): point = 245
   Insn 140(l0): point = 247
   Insn 139(l0): point = 249
   Insn 82(l0): point = 252
   Insn 81(l0): point = 254
   Insn 80(l0): point = 256
   Insn 79(l0): point = 258
   Insn 78(l0): point = 260
   Insn 77(l0): point = 262
   Insn 76(l0): point = 264
   Insn 75(l0): point = 266
   Insn 74(l0): point = 268
   Insn 73(l0): point = 270
   Insn 72(l0): point = 272
   Insn 71(l0): point = 274
   Insn 70(l0): point = 276
   Insn 69(l0): point = 278
   Insn 68(l0): point = 280
   Insn 67(l0): point = 282
   Insn 66(l0): point = 284
   Insn 65(l0): point = 286
   Insn 64(l0): point = 288
   Insn 63(l0): point = 290
   Insn 62(l0): point = 292
   Insn 280(l0): point = 295
   Insn 133(l0): point = 297
   Insn 130(l0): point = 300
   Insn 129(l0): point = 302
   Insn 128(l0): point = 304
   Insn 127(l0): point = 306
   Insn 126(l0): point = 308
   Insn 125(l0): point = 310
   Insn 124(l0): point = 312
   Insn 123(l0): point = 314
   Insn 122(l0): point = 316
   Insn 121(l0): point = 318
   Insn 120(l0): point = 320
   Insn 119(l0): point = 322
   Insn 118(l0): point = 324
   Insn 117(l0): point = 326
   Insn 116(l0): point = 328
   Insn 278(l0): point = 331
   Insn 111(l0): point = 333
   Insn 110(l0): point = 335
   Insn 109(l0): point = 337
   Insn 108(l0): point = 339
   Insn 107(l0): point = 341
   Insn 106(l0): point = 343
   Insn 105(l0): point = 345
   Insn 104(l0): point = 347
   Insn 103(l0): point = 349
   Insn 102(l0): point = 351
   Insn 101(l0): point = 353
   Insn 100(l0): point = 355
   Insn 99(l0): point = 357
   Insn 98(l0): point = 359
   Insn 97(l0): point = 361
   Insn 96(l0): point = 363
   Insn 95(l0): point = 365
   Insn 94(l0): point = 367
   Insn 93(l0): point = 369
   Insn 92(l0): point = 371
   Insn 91(l0): point = 373
   Insn 90(l0): point = 375
   Insn 89(l0): point = 377
   Insn 87(l0): point = 380
   Insn 86(l0): point = 382
   Insn 85(l0): point = 384
   Insn 84(l0): point = 386
   Insn 60(l0): point = 389
   Insn 59(l0): point = 391
   Insn 58(l0): point = 393
   Insn 57(l0): point = 395
   Insn 56(l0): point = 397
   Insn 55(l0): point = 399
   Insn 54(l0): point = 401
   Insn 53(l0): point = 403
   Insn 52(l0): point = 405
   Insn 51(l0): point = 407
   Insn 50(l0): point = 409
   Insn 49(l0): point = 411
   Insn 48(l0): point = 413
   Insn 47(l0): point = 415
   Insn 46(l0): point = 417
   Insn 45(l0): point = 419
   Insn 44(l0): point = 421
   Insn 43(l0): point = 423
   Insn 42(l0): point = 425
   Insn 41(l0): point = 427
   Insn 40(l0): point = 429
   Insn 39(l0): point = 431
   Insn 38(l0): point = 433
   Insn 37(l0): point = 435
   Insn 36(l0): point = 437
   Insn 35(l0): point = 439
   Insn 34(l0): point = 441
   Insn 33(l0): point = 443
   Insn 32(l0): point = 445
   Insn 31(l0): point = 447
   Insn 30(l0): point = 449
   Insn 29(l0): point = 451
   Insn 28(l0): point = 453
   Insn 27(l0): point = 455
   Insn 26(l0): point = 457
   Insn 25(l0): point = 459
   Insn 24(l0): point = 461
   Insn 23(l0): point = 463
   Insn 22(l0): point = 465
   Insn 21(l0): point = 467
   Insn 20(l0): point = 469
   Insn 19(l0): point = 471
   Insn 18(l0): point = 473
   Insn 17(l0): point = 475
   Insn 16(l0): point = 477
   Insn 15(l0): point = 479
   Insn 14(l0): point = 481
   Insn 13(l0): point = 483
   Insn 12(l0): point = 485
   Insn 11(l0): point = 487
   Insn 10(l0): point = 489
   Insn 9(l0): point = 491
   Insn 8(l0): point = 493
   Insn 7(l0): point = 495
   Insn 4(l0): point = 497
   Insn 2(l0): point = 499
 a0(r146): [13..16]
 a1(r145): [21..24]
 a2(r144): [29..32]
 a3(r143): [37..40]
 a4(r87): [68..70] [39..65]
 a5(r142): [45..48]
 a6(r141): [53..56]
 a7(r140): [76..77]
 a8(r161): [78..79]
 a9(r139): [85..88]
 a10(r138): [93..96]
 a11(r137): [95..104]
 a12(r160): [105..106]
 a13(r136): [111..114]
 a14(r135): [119..122]
 a15(r134): [127..130]
 a16(r133): [135..138]
 a17(r132): [150..151]
 a18(r131): [152..153]
 a19(r130): [158..159]
 a20(r159): [160..161]
 a21(r129): [167..170]
 a22(r128): [175..178]
 a23(r127): [177..186]
 a24(r158): [187..188]
 a25(r126): [193..196]
 a26(r125): [201..204]
 a27(r124): [209..212]
 a28(r123): [217..220]
 a29(r122): [232..233]
 a30(r121): [234..235]
 a31(r120): [240..241]
 a32(r157): [242..243]
 a33(r119): [303..306]
 a34(r118): [313..314]
 a35(r117): [315..316]
 a36(r116): [321..324]
 a37(r115): [323..326]
 a38(r156): [327..328]
 a39(r114): [336..339]
 a40(r113): [344..347]
 a41(r112): [352..355]
 a42(r111): [354..363]
 a43(r110): [364..365]
 a44(r109): [370..373]
 a45(r108): [372..375]
 a46(r155): [376..377]
 a47(r107): [383..384]
 a48(r154): [385..386]
 a49(r106): [255..256]
 a50(r105): [259..260]
 a51(r104): [261..262]
 a52(r153): [267..270]
 a53(r152): [269..272]
 a54(r103): [275..276]
 a55(r102): [277..278]
 a56(r101): [283..284]
 a57(r100): [287..288]
 a58(r99): [289..290]
 a59(r151): [291..292]
 a60(r150): [390..391]
 a61(r98): [392..393]
 a62(r149): [398..401]
 a63(r148): [400..403]
 a64(r97): [408..409]
 a65(r96): [410..411]
 a66(r147): [412..413]
 a67(r95): [424..427]
 a68(r94): [432..435]
 a69(r93): [440..443]
 a70(r92): [448..451]
 a71(r91): [462..465]
 a72(r90): [470..473]
 a73(r89): [478..481]
 a74(r88): [486..489]
Compressing live ranges: from 502 to 136 - 27%
Ranges after the compression:
 a0(r146): [0..1]
 a1(r145): [2..3]
 a2(r144): [4..5]
 a3(r143): [6..7]
 a4(r87): [6..13]
 a5(r142): [8..9]
 a6(r141): [10..11]
 a7(r140): [14..15]
 a8(r161): [16..17]
 a9(r139): [18..19]
 a10(r138): [20..21]
 a11(r137): [20..21]
 a12(r160): [22..23]
 a13(r136): [24..25]
 a14(r135): [26..27]
 a15(r134): [28..29]
 a16(r133): [30..31]
 a17(r132): [32..33]
 a18(r131): [34..35]
 a19(r130): [36..37]
 a20(r159): [38..39]
 a21(r129): [40..41]
 a22(r128): [42..43]
 a23(r127): [42..43]
 a24(r158): [44..45]
 a25(r126): [46..47]
 a26(r125): [48..49]
 a27(r124): [50..51]
 a28(r123): [52..53]
 a29(r122): [54..55]
 a30(r121): [56..57]
 a31(r120): [58..59]
 a32(r157): [60..61]
 a33(r119): [82..83]
 a34(r118): [84..85]
 a35(r117): [86..87]
 a36(r116): [88..89]
 a37(r115): [88..89]
 a38(r156): [90..91]
 a39(r114): [92..93]
 a40(r113): [94..95]
 a41(r112): [96..97]
 a42(r111): [96..97]
 a43(r110): [98..99]
 a44(r109): [100..101]
 a45(r108): [100..101]
 a46(r155): [102..103]
 a47(r107): [104..105]
 a48(r154): [106..107]
 a49(r106): [62..63]
 a50(r105): [64..65]
 a51(r104): [66..67]
 a52(r153): [68..69]
 a53(r152): [68..69]
 a54(r103): [70..71]
 a55(r102): [72..73]
 a56(r101): [74..75]
 a57(r100): [76..77]
 a58(r99): [78..79]
 a59(r151): [80..81]
 a60(r150): [108..109]
 a61(r98): [110..111]
 a62(r149): [112..113]
 a63(r148): [112..113]
 a64(r97): [114..115]
 a65(r96): [116..117]
 a66(r147): [118..119]
 a67(r95): [120..121]
 a68(r94): [122..123]
 a69(r93): [124..125]
 a70(r92): [126..127]
 a71(r91): [128..129]
 a72(r90): [130..131]
 a73(r89): [132..133]
 a74(r88): [134..135]
  regions=1, blocks=18, points=136
    allocnos=75 (big 0), copies=0, conflicts=0, ranges=75
Disposition:
    4:r87  l0     3   74:r88  l0     0   73:r89  l0     0   72:r90  l0     0
   71:r91  l0     0   70:r92  l0     0   69:r93  l0     0   68:r94  l0     0
   67:r95  l0     0   65:r96  l0     0   64:r97  l0     0   61:r98  l0     0
   58:r99  l0     0   57:r100 l0     0   56:r101 l0     0   55:r102 l0     0
   54:r103 l0     0   51:r104 l0     0   50:r105 l0     0   49:r106 l0     0
   47:r107 l0     0   45:r108 l0     1   44:r109 l0     0   43:r110 l0     0
   42:r111 l0     3   41:r112 l0     0   40:r113 l0     0   39:r114 l0     0
   37:r115 l0     1   36:r116 l0     0   35:r117 l0     0   34:r118 l0     0
   33:r119 l0     0   31:r120 l0     0   30:r121 l0     0   29:r122 l0     0
   28:r123 l0     0   27:r124 l0     0   26:r125 l0     0   25:r126 l0     0
   23:r127 l0     3   22:r128 l0     0   21:r129 l0     0   19:r130 l0     0
   18:r131 l0     0   17:r132 l0     0   16:r133 l0     0   15:r134 l0     0
   14:r135 l0     0   13:r136 l0     0   11:r137 l0     3   10:r138 l0     0
    9:r139 l0     0    7:r140 l0     0    6:r141 l0     0    5:r142 l0     0
    3:r143 l0     0    2:r144 l0     0    1:r145 l0     0    0:r146 l0     0
   66:r147 l0     0   63:r148 l0     1   62:r149 l0     0   60:r150 l0     0
   59:r151 l0     0   53:r152 l0     1   52:r153 l0     0   48:r154 l0     0
   46:r155 l0     0   38:r156 l0     0   32:r157 l0     0   24:r158 l0     0
   20:r159 l0     0   12:r160 l0     0    8:r161 l0     0
+++Costs: overall -53, reg -53, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void IntCode::print()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={50d,37u} r1={50d} r2={50d} r4={95d,45u} r5={98d,49u} r6={1d,17u} r7={1d,66u} r8={49d} r9={49d} r10={49d} r11={49d} r12={49d} r13={49d} r14={49d} r15={49d} r16={1d,16u} r17={70d,7u} r18={49d} r19={49d} r20={1d,46u,4e} r21={50d} r22={50d} r23={50d} r24={50d} r25={50d} r26={50d} r27={50d} r28={50d} r29={49d} r30={49d} r31={49d} r32={49d} r33={49d} r34={49d} r35={49d} r36={49d} r37={50d} r38={50d} r39={49d} r40={49d} r45={49d} r46={49d} r47={49d} r48={49d} r49={49d} r50={49d} r51={49d} r52={49d} r53={49d} r54={49d} r55={49d} r56={49d} r57={49d} r58={49d} r59={49d} r60={49d} r61={49d} r62={49d} r63={49d} r64={49d} r65={49d} r66={49d} r67={49d} r68={49d} r69={49d} r70={49d} r71={49d} r72={49d} r73={49d} r74={49d} r75={49d} r76={49d} r77={49d} r78={49d} r79={49d} r80={49d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} 
;;    total ref usage 4099{3737d,358u,4e} in 243{194 regular + 49 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 93 94 95 96 97 98 147 148 149 150
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48758+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:140 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fdf7c96b1b0 endl>)) intcode.cpp:141 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:141 89 {*movdi_internal}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7fdf7c9401b0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:141 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg/f:DI 88 [ D.48747 ])
        (reg:DI 0 ax)) intcode.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fdf7b5cab40 *.LC11>)) intcode.cpp:141 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48747 ])) intcode.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48747 ])
        (nil)))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:141 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg/f:DI 89 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fdf7b5cabd0 *.LC12>)) intcode.cpp:141 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.48748 ])) intcode.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48748 ])
        (nil)))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:141 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg/f:DI 90 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fdf7b5cac60 *.LC13>)) intcode.cpp:141 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.48748 ])) intcode.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48748 ])
        (nil)))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:141 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 22 21 23 2 (set (reg/f:DI 91 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fdf7b5cacf0 *.LC14>)) intcode.cpp:141 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48748 ])) intcode.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48748 ])
        (nil)))
(call_insn 25 24 26 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:141 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fdf7b5cab40 *.LC11>)) intcode.cpp:142 89 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:142 89 {*movdi_internal}
     (nil))
(call_insn 28 27 29 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:142 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 29 28 30 2 (set (reg/f:DI 92 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:142 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 30 29 31 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fdf7b5cabd0 *.LC12>)) intcode.cpp:142 89 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.48748 ])) intcode.cpp:142 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.48748 ])
        (nil)))
(call_insn 32 31 33 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:142 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 2 (set (reg/f:DI 93 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:142 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 34 33 35 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fdf7b5cad80 *.LC15>)) intcode.cpp:142 89 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.48748 ])) intcode.cpp:142 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.48748 ])
        (nil)))
(call_insn 36 35 37 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:142 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 37 36 38 2 (set (reg/f:DI 94 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:142 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 38 37 39 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fdf7b5cacf0 *.LC14>)) intcode.cpp:142 89 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.48748 ])) intcode.cpp:142 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.48748 ])
        (nil)))
(call_insn 40 39 41 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:142 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 41 40 42 2 (set (reg/f:DI 95 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:142 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 42 41 43 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fdf7c96b1b0 endl>)) intcode.cpp:142 89 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.48748 ])) intcode.cpp:142 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.48748 ])
        (nil)))
(call_insn 44 43 45 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7fdf7c9401b0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:142 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 45 44 46 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fdf7b5cae10 *.LC16>)) intcode.cpp:143 89 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:143 89 {*movdi_internal}
     (nil))
(call_insn 47 46 48 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:143 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 48 47 49 2 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:144 89 {*movdi_internal}
     (nil))
(insn 49 48 50 2 (set (reg:SI 96 [ D.48749 ])
        (mem/j:SI (plus:DI (reg/f:DI 147)
                (const_int 24 [0x18])) [0 this_35(D)->ind+0 S4 A64])) intcode.cpp:144 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 147)
        (nil)))
(insn 50 49 51 2 (parallel [
            (set (reg:SI 97 [ D.48749 ])
                (plus:SI (reg:SI 96 [ D.48749 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:144 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.48749 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 51 50 52 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.43737+0 S4 A64])
        (reg:SI 97 [ D.48749 ])) intcode.cpp:144 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ D.48749 ])
        (nil)))
(insn 52 51 53 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 D.43736+0 S4 A32])
        (const_int 0 [0])) intcode.cpp:144 90 {*movsi_internal}
     (nil))
(insn 53 52 54 2 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:144 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 53 55 2 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:144 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 55 54 56 2 (set (reg:DI 4 si)
        (reg:DI 148)) intcode.cpp:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 148)
        (nil)))
(insn 56 55 57 2 (set (reg:DI 5 di)
        (reg:DI 149)) intcode.cpp:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 149)
        (nil)))
(call_insn 57 56 58 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3maxIiERKT_S2_S2_") [flags 0x3]  <function_decl 0x7fdf7be8be58 max>) [0 max S1 A8])
            (const_int 0 [0]))) intcode.cpp:144 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 58 57 59 2 (set (reg/f:DI 98 [ D.48750 ])
        (reg:DI 0 ax)) intcode.cpp:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 59 58 60 2 (set (reg:SI 150)
        (mem:SI (reg/f:DI 98 [ D.48750 ]) [0 *_41+0 S4 A32])) intcode.cpp:144 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.48750 ])
        (nil)))
(insn 60 59 134 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (reg:SI 150)) intcode.cpp:144 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 150)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 100 101 102 103 104 105 106 151 152 153
(code_label 134 60 61 3 112 "" [1 uses])
(note 61 134 62 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 3 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:144 89 {*movdi_internal}
     (nil))
(insn 63 62 64 3 (set (reg:SI 99 [ D.48749 ])
        (mem/j:SI (plus:DI (reg/f:DI 151)
                (const_int 24 [0x18])) [0 this_35(D)->ind+0 S4 A64])) intcode.cpp:144 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 151)
        (nil)))
(insn 64 63 65 3 (parallel [
            (set (reg:SI 100 [ D.48749 ])
                (plus:SI (reg:SI 99 [ D.48749 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:144 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ D.48749 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.43742+0 S4 A64])
        (reg:SI 100 [ D.48749 ])) intcode.cpp:144 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ D.48749 ])
        (nil)))
(insn 66 65 67 3 (set (reg/f:DI 101 [ D.48751 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:144 89 {*movdi_internal}
     (nil))
(insn 67 66 68 3 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.48751 ])) intcode.cpp:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.48751 ])
        (nil)))
(call_insn 68 67 69 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE4sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195438 size>) [0 size S1 A8])
            (const_int 0 [0]))) intcode.cpp:144 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 69 68 70 3 (set (reg:DI 102 [ D.48752 ])
        (reg:DI 0 ax)) intcode.cpp:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 70 69 71 3 (set (reg:SI 103 [ D.48749 ])
        (subreg:SI (reg:DI 102 [ D.48752 ]) 0)) intcode.cpp:144 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 102 [ D.48752 ])
        (nil)))
(insn 71 70 72 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 D.43741+0 S4 A32])
        (reg:SI 103 [ D.48749 ])) intcode.cpp:144 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103 [ D.48749 ])
        (nil)))
(insn 72 71 73 3 (parallel [
            (set (reg:DI 152)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:144 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 73 72 74 3 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:144 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 74 73 75 3 (set (reg:DI 4 si)
        (reg:DI 152)) intcode.cpp:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 152)
        (nil)))
(insn 75 74 76 3 (set (reg:DI 5 di)
        (reg:DI 153)) intcode.cpp:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 153)
        (nil)))
(call_insn 76 75 77 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3minIiERKT_S2_S2_") [flags 0x3]  <function_decl 0x7fdf7be92288 min>) [0 min S1 A8])
            (const_int 0 [0]))) intcode.cpp:144 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 77 76 78 3 (set (reg/f:DI 104 [ D.48750 ])
        (reg:DI 0 ax)) intcode.cpp:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 78 77 79 3 (set (reg:SI 105 [ D.48749 ])
        (mem:SI (reg/f:DI 104 [ D.48750 ]) [0 *_54+0 S4 A32])) intcode.cpp:144 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.48750 ])
        (nil)))
(insn 79 78 80 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 105 [ D.48749 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) intcode.cpp:144 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 105 [ D.48749 ])
        (nil)))
(insn 80 79 81 3 (set (reg:QI 106 [ D.48753 ])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) intcode.cpp:144 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 81 80 82 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 106 [ D.48753 ])
            (const_int 0 [0]))) intcode.cpp:144 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 106 [ D.48753 ])
        (nil)))
(jump_insn 82 81 83 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) intcode.cpp:144 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 137)
;;  succ:       4 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 107 154
(note 83 82 84 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 4 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:145 89 {*movdi_internal}
     (nil))
(insn 85 84 86 4 (set (reg:SI 107 [ D.48749 ])
        (mem/j:SI (plus:DI (reg/f:DI 154)
                (const_int 24 [0x18])) [0 this_35(D)->ind+0 S4 A64])) intcode.cpp:145 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154)
        (nil)))
(insn 86 85 87 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.48749 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) intcode.cpp:145 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 107 [ D.48749 ])
        (nil)))
(jump_insn 87 86 88 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) intcode.cpp:145 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 114)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 108 109 110 111 112 113 114 155
(note 88 87 89 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 5 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) intcode.cpp:146 90 {*movsi_internal}
     (nil))
(insn 90 89 91 5 (set (reg:DI 108 [ D.48752 ])
        (sign_extend:DI (reg:SI 155))) intcode.cpp:146 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 155)
        (nil)))
(insn 91 90 92 5 (set (reg/f:DI 109 [ D.48751 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:146 89 {*movdi_internal}
     (nil))
(insn 92 91 93 5 (set (reg:DI 4 si)
        (reg:DI 108 [ D.48752 ])) intcode.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108 [ D.48752 ])
        (nil)))
(insn 93 92 94 5 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.48751 ])) intcode.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.48751 ])
        (nil)))
(call_insn 94 93 95 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:146 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 95 94 96 5 (set (reg/f:DI 110 [ D.48754 ])
        (reg:DI 0 ax)) intcode.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 96 95 97 5 (set (reg:DI 111 [ D.48755 ])
        (mem:DI (reg/f:DI 110 [ D.48754 ]) [0 *_63+0 S8 A64])) intcode.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.48754 ])
        (nil)))
(insn 97 96 98 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fdf7b5cabd0 *.LC12>)) intcode.cpp:146 89 {*movdi_internal}
     (nil))
(insn 98 97 99 5 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:146 89 {*movdi_internal}
     (nil))
(call_insn 99 98 100 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:146 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 100 99 101 5 (set (reg/f:DI 112 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 101 100 102 5 (set (reg:DI 4 si)
        (reg:DI 111 [ D.48755 ])) intcode.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111 [ D.48755 ])
        (nil)))
(insn 102 101 103 5 (set (reg:DI 5 di)
        (reg/f:DI 112 [ D.48748 ])) intcode.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.48748 ])
        (nil)))
(call_insn 103 102 104 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEx") [flags 0x41]  <function_decl 0x7fdf7c9555e8 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:146 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 104 103 105 5 (set (reg/f:DI 113 [ D.48747 ])
        (reg:DI 0 ax)) intcode.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 105 104 106 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fdf7b5caea0 *.LC17>)) intcode.cpp:146 89 {*movdi_internal}
     (nil))
(insn 106 105 107 5 (set (reg:DI 5 di)
        (reg/f:DI 113 [ D.48747 ])) intcode.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113 [ D.48747 ])
        (nil)))
(call_insn 107 106 108 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:146 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 108 107 109 5 (set (reg/f:DI 114 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 109 108 110 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fdf7b5cacf0 *.LC14>)) intcode.cpp:146 89 {*movdi_internal}
     (nil))
(insn 110 109 111 5 (set (reg:DI 5 di)
        (reg/f:DI 114 [ D.48748 ])) intcode.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114 [ D.48748 ])
        (nil)))
(call_insn 111 110 278 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:146 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 278 111 279 5 (set (pc)
        (label_ref 131)) 654 {jump}
     (nil)
 -> 131)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 279 278 114)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 116 117 118 119 156
(code_label 114 279 115 6 110 "" [1 uses])
(note 115 114 116 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 6 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) intcode.cpp:148 90 {*movsi_internal}
     (nil))
(insn 117 116 118 6 (set (reg:DI 115 [ D.48752 ])
        (sign_extend:DI (reg:SI 156))) intcode.cpp:148 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
(insn 118 117 119 6 (set (reg/f:DI 116 [ D.48751 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:148 89 {*movdi_internal}
     (nil))
(insn 119 118 120 6 (set (reg:DI 4 si)
        (reg:DI 115 [ D.48752 ])) intcode.cpp:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115 [ D.48752 ])
        (nil)))
(insn 120 119 121 6 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.48751 ])) intcode.cpp:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.48751 ])
        (nil)))
(call_insn 121 120 122 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:148 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 122 121 123 6 (set (reg/f:DI 117 [ D.48754 ])
        (reg:DI 0 ax)) intcode.cpp:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 123 122 124 6 (set (reg:DI 118 [ D.48755 ])
        (mem:DI (reg/f:DI 117 [ D.48754 ]) [0 *_78+0 S8 A64])) intcode.cpp:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ D.48754 ])
        (nil)))
(insn 124 123 125 6 (set (reg:DI 4 si)
        (reg:DI 118 [ D.48755 ])) intcode.cpp:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118 [ D.48755 ])
        (nil)))
(insn 125 124 126 6 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:148 89 {*movdi_internal}
     (nil))
(call_insn 126 125 127 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEx") [flags 0x41]  <function_decl 0x7fdf7c9555e8 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:148 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 127 126 128 6 (set (reg/f:DI 119 [ D.48747 ])
        (reg:DI 0 ax)) intcode.cpp:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 128 127 129 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fdf7b5caea0 *.LC17>)) intcode.cpp:148 89 {*movdi_internal}
     (nil))
(insn 129 128 130 6 (set (reg:DI 5 di)
        (reg/f:DI 119 [ D.48747 ])) intcode.cpp:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.48747 ])
        (nil)))
(call_insn 130 129 131 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:148 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 131 130 132 7 111 "" [1 uses])
(note 132 131 133 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 280 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:144 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 280 133 281 7 (set (pc)
        (label_ref 134)) intcode.cpp:144 654 {jump}
     (nil)
 -> 134)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 281 280 137)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 120 121 122 157
(code_label 137 281 138 8 109 "" [1 uses])
(note 138 137 139 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 8 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fdf7c96b1b0 endl>)) intcode.cpp:149 89 {*movdi_internal}
     (nil))
(insn 140 139 141 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:149 89 {*movdi_internal}
     (nil))
(call_insn 141 140 142 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7fdf7c9401b0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:149 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 142 141 143 8 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:150 89 {*movdi_internal}
     (nil))
(insn 143 142 144 8 (parallel [
            (set (reg/f:DI 120 [ D.48751 ])
                (plus:DI (reg/f:DI 157)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:150 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 157)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 144 143 145 8 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.48751 ])) intcode.cpp:150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.48751 ])
        (nil)))
(call_insn 145 144 146 8 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE5emptyEv") [flags 0x3]  <function_decl 0x7fdf7c195948 empty>) [0 empty S1 A8])
            (const_int 0 [0]))) intcode.cpp:150 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 146 145 147 8 (set (reg:QI 121 [ D.48753 ])
        (reg:QI 0 ax)) intcode.cpp:150 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 147 146 148 8 (parallel [
            (set (reg:QI 122 [ D.48753 ])
                (xor:QI (reg:QI 121 [ D.48753 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:150 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 121 [ D.48753 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 148 147 149 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ D.48753 ])
            (const_int 0 [0]))) intcode.cpp:150 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 122 [ D.48753 ])
        (nil)))
(jump_insn 149 148 150 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) intcode.cpp:150 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 183)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 123 124 125 126 127 128 129 158
(note 150 149 151 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fdf7b5caf30 *.LC18>)) intcode.cpp:151 89 {*movdi_internal}
     (nil))
(insn 152 151 153 9 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:151 89 {*movdi_internal}
     (nil))
(call_insn 153 152 154 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:151 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 154 153 155 9 (set (reg/f:DI 123 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 155 154 156 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fdf7b5cabd0 *.LC12>)) intcode.cpp:151 89 {*movdi_internal}
     (nil))
(insn 156 155 157 9 (set (reg:DI 5 di)
        (reg/f:DI 123 [ D.48748 ])) intcode.cpp:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ D.48748 ])
        (nil)))
(call_insn 157 156 158 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:151 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 158 157 159 9 (set (reg/f:DI 124 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 159 158 160 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fdf7b5d4000 *.LC19>)) intcode.cpp:151 89 {*movdi_internal}
     (nil))
(insn 160 159 161 9 (set (reg:DI 5 di)
        (reg/f:DI 124 [ D.48748 ])) intcode.cpp:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124 [ D.48748 ])
        (nil)))
(call_insn 161 160 162 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:151 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 162 161 163 9 (set (reg/f:DI 125 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 163 162 164 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fdf7b5cacf0 *.LC14>)) intcode.cpp:151 89 {*movdi_internal}
     (nil))
(insn 164 163 165 9 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.48748 ])) intcode.cpp:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 125 [ D.48748 ])
        (nil)))
(call_insn 165 164 166 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:151 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 166 165 167 9 (set (reg/f:DI 126 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 167 166 168 9 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fdf7c96b1b0 endl>)) intcode.cpp:151 89 {*movdi_internal}
     (nil))
(insn 168 167 169 9 (set (reg:DI 5 di)
        (reg/f:DI 126 [ D.48748 ])) intcode.cpp:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 126 [ D.48748 ])
        (nil)))
(call_insn 169 168 170 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7fdf7c9401b0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:151 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 170 169 171 9 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:152 89 {*movdi_internal}
     (nil))
(insn 171 170 172 9 (parallel [
            (set (reg/f:DI 127 [ D.48751 ])
                (plus:DI (reg/f:DI 158)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:152 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 172 171 173 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fdf7b5cae10 *.LC16>)) intcode.cpp:152 89 {*movdi_internal}
     (nil))
(insn 173 172 174 9 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:152 89 {*movdi_internal}
     (nil))
(call_insn 174 173 175 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:152 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 175 174 176 9 (set (reg/f:DI 128 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:152 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 176 175 177 9 (set (reg:DI 4 si)
        (reg/f:DI 127 [ D.48751 ])) intcode.cpp:152 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ D.48751 ])
        (nil)))
(insn 177 176 178 9 (set (reg:DI 5 di)
        (reg/f:DI 128 [ D.48748 ])) intcode.cpp:152 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ D.48748 ])
        (nil)))
(call_insn 178 177 179 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZlsIxERSoS0_RKSt6vectorIT_SaIS2_EE") [flags 0x3]  <function_decl 0x7fdf7bea4d80 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:152 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 179 178 180 9 (set (reg/f:DI 129 [ D.48756 ])
        (reg:DI 0 ax)) intcode.cpp:152 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 180 179 181 9 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fdf7c96b1b0 endl>)) intcode.cpp:152 89 {*movdi_internal}
     (nil))
(insn 181 180 182 9 (set (reg:DI 5 di)
        (reg/f:DI 129 [ D.48756 ])) intcode.cpp:152 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129 [ D.48756 ])
        (nil)))
(call_insn 182 181 183 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7fdf7c9401b0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:152 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 130 131 132 159
(code_label 183 182 184 10 113 "" [1 uses])
(note 184 183 185 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 10 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:154 89 {*movdi_internal}
     (nil))
(insn 186 185 187 10 (parallel [
            (set (reg/f:DI 130 [ D.48751 ])
                (plus:DI (reg/f:DI 159)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:154 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 159)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 187 186 188 10 (set (reg:DI 5 di)
        (reg/f:DI 130 [ D.48751 ])) intcode.cpp:154 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130 [ D.48751 ])
        (nil)))
(call_insn 188 187 189 10 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE5emptyEv") [flags 0x3]  <function_decl 0x7fdf7c195948 empty>) [0 empty S1 A8])
            (const_int 0 [0]))) intcode.cpp:154 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 189 188 190 10 (set (reg:QI 131 [ D.48753 ])
        (reg:QI 0 ax)) intcode.cpp:154 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 190 189 191 10 (parallel [
            (set (reg:QI 132 [ D.48753 ])
                (xor:QI (reg:QI 131 [ D.48753 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:154 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 131 [ D.48753 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 191 190 192 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 132 [ D.48753 ])
            (const_int 0 [0]))) intcode.cpp:154 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 132 [ D.48753 ])
        (nil)))
(jump_insn 192 191 193 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) intcode.cpp:154 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 226)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 133 134 135 136 137 138 139 160
(note 193 192 194 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fdf7b5d4090 *.LC20>)) intcode.cpp:155 89 {*movdi_internal}
     (nil))
(insn 195 194 196 11 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:155 89 {*movdi_internal}
     (nil))
(call_insn 196 195 197 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:155 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 197 196 198 11 (set (reg/f:DI 133 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 198 197 199 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fdf7b5cabd0 *.LC12>)) intcode.cpp:155 89 {*movdi_internal}
     (nil))
(insn 199 198 200 11 (set (reg:DI 5 di)
        (reg/f:DI 133 [ D.48748 ])) intcode.cpp:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133 [ D.48748 ])
        (nil)))
(call_insn 200 199 201 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:155 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 201 200 202 11 (set (reg/f:DI 134 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 202 201 203 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fdf7b5d4120 *.LC21>)) intcode.cpp:155 89 {*movdi_internal}
     (nil))
(insn 203 202 204 11 (set (reg:DI 5 di)
        (reg/f:DI 134 [ D.48748 ])) intcode.cpp:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134 [ D.48748 ])
        (nil)))
(call_insn 204 203 205 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:155 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 205 204 206 11 (set (reg/f:DI 135 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 206 205 207 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fdf7b5cacf0 *.LC14>)) intcode.cpp:155 89 {*movdi_internal}
     (nil))
(insn 207 206 208 11 (set (reg:DI 5 di)
        (reg/f:DI 135 [ D.48748 ])) intcode.cpp:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135 [ D.48748 ])
        (nil)))
(call_insn 208 207 209 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:155 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 209 208 210 11 (set (reg/f:DI 136 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 210 209 211 11 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fdf7c96b1b0 endl>)) intcode.cpp:155 89 {*movdi_internal}
     (nil))
(insn 211 210 212 11 (set (reg:DI 5 di)
        (reg/f:DI 136 [ D.48748 ])) intcode.cpp:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136 [ D.48748 ])
        (nil)))
(call_insn 212 211 213 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7fdf7c9401b0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:155 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 213 212 214 11 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:156 89 {*movdi_internal}
     (nil))
(insn 214 213 215 11 (parallel [
            (set (reg/f:DI 137 [ D.48751 ])
                (plus:DI (reg/f:DI 160)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:156 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 160)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 215 214 216 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fdf7b5cae10 *.LC16>)) intcode.cpp:156 89 {*movdi_internal}
     (nil))
(insn 216 215 217 11 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:156 89 {*movdi_internal}
     (nil))
(call_insn 217 216 218 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:156 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 218 217 219 11 (set (reg/f:DI 138 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:156 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 219 218 220 11 (set (reg:DI 4 si)
        (reg/f:DI 137 [ D.48751 ])) intcode.cpp:156 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137 [ D.48751 ])
        (nil)))
(insn 220 219 221 11 (set (reg:DI 5 di)
        (reg/f:DI 138 [ D.48748 ])) intcode.cpp:156 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ D.48748 ])
        (nil)))
(call_insn 221 220 222 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZlsIxERSoS0_RKSt6vectorIT_SaIS2_EE") [flags 0x3]  <function_decl 0x7fdf7bea4d80 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:156 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 222 221 223 11 (set (reg/f:DI 139 [ D.48756 ])
        (reg:DI 0 ax)) intcode.cpp:156 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 223 222 224 11 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fdf7c96b1b0 endl>)) intcode.cpp:156 89 {*movdi_internal}
     (nil))
(insn 224 223 225 11 (set (reg:DI 5 di)
        (reg/f:DI 139 [ D.48756 ])) intcode.cpp:156 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ D.48756 ])
        (nil)))
(call_insn 225 224 226 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7fdf7c9401b0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:156 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 140 161
(code_label 226 225 227 12 114 "" [1 uses])
(note 227 226 228 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 12 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) intcode.cpp:158 89 {*movdi_internal}
     (nil))
(insn 229 228 230 12 (set (reg:QI 140 [ D.48753 ])
        (mem/j:QI (plus:DI (reg/f:DI 161)
                (const_int 80 [0x50])) [0 this_35(D)->done+0 S1 A64])) intcode.cpp:158 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (nil)))
(insn 230 229 231 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 140 [ D.48753 ])
            (const_int 0 [0]))) intcode.cpp:158 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 140 [ D.48753 ])
        (nil)))
(jump_insn 231 230 232 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 236)
            (pc))) intcode.cpp:158 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 236)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 232 231 233 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 282 13 (set (reg/f:DI 87 [ D.48746 ])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fdf7b5d41b0 *.LC22>)) intcode.cpp:158 89 {*movdi_internal}
     (nil))
(jump_insn 282 233 283 13 (set (pc)
        (label_ref 239)) 654 {jump}
     (nil)
 -> 239)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 283 282 236)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 236 283 237 14 115 "" [1 uses])
(note 237 236 238 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 14 (set (reg/f:DI 87 [ D.48746 ])
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fdf7b5d4240 *.LC23>)) intcode.cpp:158 89 {*movdi_internal}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 141 142 143 144 145 146
(code_label 239 238 240 15 116 "" [1 uses])
(note 240 239 241 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fdf7b5d42d0 *.LC24>)) intcode.cpp:158 89 {*movdi_internal}
     (nil))
(insn 242 241 243 15 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:158 89 {*movdi_internal}
     (nil))
(call_insn 243 242 244 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:158 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 244 243 245 15 (set (reg/f:DI 141 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 245 244 246 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fdf7b5cabd0 *.LC12>)) intcode.cpp:158 89 {*movdi_internal}
     (nil))
(insn 246 245 247 15 (set (reg:DI 5 di)
        (reg/f:DI 141 [ D.48748 ])) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 141 [ D.48748 ])
        (nil)))
(call_insn 247 246 248 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:158 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 248 247 249 15 (set (reg/f:DI 142 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 249 248 250 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fdf7b5cac60 *.LC13>)) intcode.cpp:158 89 {*movdi_internal}
     (nil))
(insn 250 249 251 15 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.48748 ])) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 142 [ D.48748 ])
        (nil)))
(call_insn 251 250 252 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:158 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 252 251 253 15 (set (reg/f:DI 143 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 253 252 254 15 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.48746 ])) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48746 ])
        (nil)))
(insn 254 253 255 15 (set (reg:DI 5 di)
        (reg/f:DI 143 [ D.48748 ])) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143 [ D.48748 ])
        (nil)))
(call_insn 255 254 256 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:158 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 256 255 257 15 (set (reg/f:DI 144 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 257 256 258 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fdf7b5d4360 *.LC25>)) intcode.cpp:158 89 {*movdi_internal}
     (nil))
(insn 258 257 259 15 (set (reg:DI 5 di)
        (reg/f:DI 144 [ D.48748 ])) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ D.48748 ])
        (nil)))
(call_insn 259 258 260 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:158 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 260 259 261 15 (set (reg/f:DI 145 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 261 260 262 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fdf7b5cacf0 *.LC14>)) intcode.cpp:158 89 {*movdi_internal}
     (nil))
(insn 262 261 263 15 (set (reg:DI 5 di)
        (reg/f:DI 145 [ D.48748 ])) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 145 [ D.48748 ])
        (nil)))
(call_insn 263 262 264 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:158 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 264 263 265 15 (set (reg/f:DI 146 [ D.48748 ])
        (reg:DI 0 ax)) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 265 264 266 15 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fdf7c96b1b0 endl>)) intcode.cpp:158 89 {*movdi_internal}
     (nil))
(insn 266 265 267 15 (set (reg:DI 5 di)
        (reg/f:DI 146 [ D.48748 ])) intcode.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 146 [ D.48748 ])
        (nil)))
(call_insn 267 266 277 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7fdf7c9401b0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:158 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 277 267 269 15 (const_int 0 [0]) intcode.cpp:160 684 {nop}
     (nil))
(insn 269 277 270 15 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48758+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) intcode.cpp:160 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 270 269 275 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) intcode.cpp:160 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 273)
;;  succ:       17
;;              16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 275 270 271 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(call_insn 271 275 272 16 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) intcode.cpp:160 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 272 271 273)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 273 272 276 17 117 "" [1 uses])
(note 276 273 0 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void IntCode::push(long long int) (_ZN7IntCode4pushEx, funcdef_no=1900, decl_uid=43103, cgraph_uid=519, symbol_order=521)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r87): [5..10]
 a1(r89): [7..8]
 a2(r88): [11..12]
Compressing live ranges: from 19 to 4 - 21%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r89): [0..1]
 a2(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    0:r87  l0     1    2:r88  l0     0    1:r89  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void IntCode::push(long long int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={3d} r18={1d} r19={1d} r20={1d,6u,1e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 118{98d,19u,1e} in 9{8 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:162 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 val+0 S8 A64])
        (reg:DI 4 si [ val ])) intcode.cpp:162 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ val ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:163 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 87 [ D.48774 ])
                (plus:DI (reg/f:DI 88)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:163 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 89)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:163 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 89)) intcode.cpp:163 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48774 ])) intcode.cpp:163 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48774 ])
        (nil)))
(call_insn 12 11 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE9push_backERKx") [flags 0x3]  <function_decl 0x7fdf7c19b5e8 push_back>) [0 push_back S1 A8])
        (const_int 0 [0])) intcode.cpp:163 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 12 0 2 (const_int 0 [0]) intcode.cpp:164 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function long long int IntCode::pop() (_ZN7IntCode3popEv, funcdef_no=1901, decl_uid=43105, cgraph_uid=520, symbol_order=522)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 6 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 60.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r105: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r105,l0) best SIREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r102,l0) best SIREG, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a3(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a6(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a8(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a9(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a12(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a13(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a15(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a16(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a17(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 63(l0): point = 0
   Insn 60(l0): point = 3
   Insn 59(l0): point = 6
   Insn 58(l0): point = 8
   Insn 57(l0): point = 10
   Insn 53(l0): point = 12
   Insn 50(l0): point = 14
   Insn 48(l0): point = 16
   Insn 47(l0): point = 18
   Insn 46(l0): point = 20
   Insn 45(l0): point = 22
   Insn 44(l0): point = 24
   Insn 43(l0): point = 26
   Insn 42(l0): point = 28
   Insn 41(l0): point = 30
   Insn 40(l0): point = 32
   Insn 39(l0): point = 34
   Insn 38(l0): point = 36
   Insn 37(l0): point = 38
   Insn 36(l0): point = 40
   Insn 35(l0): point = 42
   Insn 34(l0): point = 44
   Insn 33(l0): point = 46
   Insn 32(l0): point = 48
   Insn 31(l0): point = 50
   Insn 27(l0): point = 53
   Insn 26(l0): point = 55
   Insn 25(l0): point = 57
   Insn 24(l0): point = 59
   Insn 23(l0): point = 61
   Insn 21(l0): point = 64
   Insn 20(l0): point = 66
   Insn 19(l0): point = 68
   Insn 18(l0): point = 70
   Insn 17(l0): point = 72
   Insn 16(l0): point = 74
   Insn 15(l0): point = 76
   Insn 14(l0): point = 78
   Insn 13(l0): point = 80
   Insn 12(l0): point = 82
   Insn 11(l0): point = 84
   Insn 10(l0): point = 86
   Insn 9(l0): point = 88
   Insn 8(l0): point = 90
   Insn 7(l0): point = 92
   Insn 4(l0): point = 94
   Insn 2(l0): point = 96
 a0(r95): [11..12]
 a1(r93): [13..14]
 a2(r92): [19..24]
 a3(r105): [21..22]
 a4(r104): [25..26]
 a5(r103): [31..34]
 a6(r102): [33..36]
 a7(r101): [39..40]
 a8(r100): [41..42]
 a9(r91): [47..48]
 a10(r99): [49..50]
 a11(r90): [67..68]
 a12(r89): [73..74]
 a13(r98): [75..76]
 a14(r97): [79..80]
 a15(r88): [81..82]
 a16(r87): [87..90]
 a17(r96): [91..92]
Compressing live ranges: from 99 to 32 - 32%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r93): [2..3]
 a2(r92): [4..5]
 a3(r105): [4..5]
 a4(r104): [6..7]
 a5(r103): [8..9]
 a6(r102): [8..9]
 a7(r101): [10..11]
 a8(r100): [12..13]
 a9(r91): [14..15]
 a10(r99): [16..17]
 a11(r90): [18..19]
 a12(r89): [20..21]
 a13(r98): [22..23]
 a14(r97): [24..25]
 a15(r88): [26..27]
 a16(r87): [28..29]
 a17(r96): [30..31]
  regions=1, blocks=7, points=32
    allocnos=18 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
   16:r87  l0     0   15:r88  l0     0   12:r89  l0     0   11:r90  l0     0
    9:r91  l0     0    2:r92  l0     1    1:r93  l0     0    0:r95  l0     0
   17:r96  l0     0   14:r97  l0     0   13:r98  l0     0   10:r99  l0     0
    8:r100 l0     0    7:r101 l0     0    6:r102 l0     1    5:r103 l0     0
    4:r104 l0     0    3:r105 l0     0
+++Costs: overall -11, reg -11, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


long long int IntCode::pop()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d,5u} r1={9d,1u} r2={9d,1u} r4={12d,4u} r5={14d,7u} r6={1d,6u} r7={1d,13u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,5u} r17={16d,2u} r18={7d} r19={7d} r20={1d,19u,4e} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={8d} r38={8d} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} 
;;    total ref usage 648{563d,81u,4e} in 47{40 regular + 7 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 96 97 98
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:166 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48779+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:166 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])) intcode.cpp:167 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 87 [ D.48775 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:167 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (const_int 0 [0])) intcode.cpp:167 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48775 ])) intcode.cpp:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48775 ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:167 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 88 [ D.48776 ])
        (reg:DI 0 ax)) intcode.cpp:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 97)
        (mem:DI (reg/f:DI 88 [ D.48776 ]) [0 *_5+0 S8 A64])) intcode.cpp:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48776 ])
        (nil)))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 temp+0 S8 A64])
        (reg:DI 97)) intcode.cpp:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])) intcode.cpp:168 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 89 [ D.48775 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:168 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.48775 ])) intcode.cpp:168 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48775 ])
        (nil)))
(call_insn 18 17 19 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE5emptyEv") [flags 0x3]  <function_decl 0x7fdf7c195948 empty>) [0 empty S1 A8])
            (const_int 0 [0]))) intcode.cpp:168 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:QI 90 [ D.48777 ])
        (reg:QI 0 ax)) intcode.cpp:168 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 20 19 21 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.48777 ])
            (const_int 0 [0]))) intcode.cpp:168 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 90 [ D.48777 ])
        (nil)))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) intcode.cpp:168 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 29)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (set (reg:DI 2 cx)
        (symbol_ref:DI ("_ZZN7IntCode3popEvE19__PRETTY_FUNCTION__") [flags 0x2]  <var_decl 0x7fdf7bec5480 __PRETTY_FUNCTION__>)) intcode.cpp:168 89 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:SI 1 dx)
        (const_int 168 [0xa8])) intcode.cpp:168 90 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fdf7b5e07e0 *.LC26>)) intcode.cpp:168 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fdf7b5e0870 *.LC27>)) intcode.cpp:168 89 {*movdi_internal}
     (nil))
(call_insn 27 26 28 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fdf7c1bc510 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) intcode.cpp:168 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 28 27 29)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 95 99 100 101 102 103 104 105
(code_label 29 28 30 4 120 "" [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])) intcode.cpp:169 89 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg/f:DI 91 [ D.48775 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:169 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48775 ])) intcode.cpp:169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48775 ])
        (nil)))
(call_insn 34 33 35 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE5beginEv") [flags 0x3]  <function_decl 0x7fdf7c18d948 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) intcode.cpp:169 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 34 36 4 (set (reg:DI 100)
        (reg:DI 0 ax)) intcode.cpp:169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 36 35 37 4 (set (reg:DI 101)
        (reg:DI 100)) intcode.cpp:169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(insn 37 36 38 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 D.43773+0 S8 A64])
        (reg:DI 101)) intcode.cpp:169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(insn 38 37 39 4 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:169 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:169 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 40 39 41 4 (set (reg:DI 4 si)
        (reg:DI 102)) intcode.cpp:169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(insn 41 40 42 4 (set (reg:DI 5 di)
        (reg:DI 103)) intcode.cpp:169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(call_insn 42 41 43 4 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC1IPxEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameIS9_S8_E7__valueES5_E6__typeEEE") [flags 0x3]  <function_decl 0x7fdf7be62948 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.cpp:169 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 43 42 44 4 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])) intcode.cpp:169 89 {*movdi_internal}
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg/f:DI 92 [ D.48775 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:169 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 45 44 46 4 (set (reg:DI 105)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 D.43774+0 S8 A64])) intcode.cpp:169 89 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (set (reg:DI 4 si)
        (reg:DI 105)) intcode.cpp:169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 47 46 48 4 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.48775 ])) intcode.cpp:169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.48775 ])
        (nil)))
(call_insn 48 47 50 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE5eraseEN9__gnu_cxx17__normal_iteratorIPKxS1_EE") [flags 0x3]  <function_decl 0x7fdf7c19be58 erase>) [0 erase S1 A8])
            (const_int 0 [0]))) intcode.cpp:169 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 50 48 53 4 (set (reg:DI 93 [ D.48778 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 temp+0 S8 A64])) intcode.cpp:170 89 {*movdi_internal}
     (nil))
(insn 53 50 57 4 (set (reg:DI 95 [ <retval> ])
        (reg:DI 93 [ D.48778 ])) intcode.cpp:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ D.48778 ])
        (nil)))
(insn 57 53 58 4 (set (reg/i:DI 0 ax)
        (reg:DI 95 [ <retval> ])) intcode.cpp:171 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95 [ <retval> ])
        (nil)))
(insn 58 57 59 4 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48779+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) intcode.cpp:171 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 59 58 65 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) intcode.cpp:171 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 62)
;;  succ:       6
;;              5 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 65 59 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 60 65 61 5 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) intcode.cpp:171 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 61 60 62)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 62 61 66 6 122 "" [1 uses])
(note 66 62 63 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 63 66 0 6 (use (reg/i:DI 0 ax)) intcode.cpp:171 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void IntCode::log(std::__cxx11::string) (_ZN7IntCode3logENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1902, decl_uid=43125, cgraph_uid=521, symbol_order=523)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 31.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 40(l0): point = 1
   Insn 31(l0): point = 4
   Insn 30(l0): point = 6
   Insn 29(l0): point = 8
   Insn 28(l0): point = 10
   Insn 27(l0): point = 12
   Insn 26(l0): point = 14
   Insn 25(l0): point = 16
   Insn 24(l0): point = 18
   Insn 23(l0): point = 20
   Insn 22(l0): point = 22
   Insn 21(l0): point = 24
   Insn 20(l0): point = 26
   Insn 19(l0): point = 28
   Insn 18(l0): point = 30
   Insn 17(l0): point = 32
   Insn 16(l0): point = 34
   Insn 15(l0): point = 36
   Insn 14(l0): point = 38
   Insn 13(l0): point = 40
   Insn 12(l0): point = 42
   Insn 10(l0): point = 45
   Insn 9(l0): point = 47
   Insn 8(l0): point = 49
   Insn 7(l0): point = 51
   Insn 3(l0): point = 53
   Insn 2(l0): point = 55
 a0(r91): [7..10]
 a1(r90): [15..18]
 a2(r89): [23..28]
 a3(r93): [25..26]
 a4(r88): [33..36]
 a5(r87): [48..49]
 a6(r92): [50..51]
Compressing live ranges: from 58 to 12 - 20%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r89): [4..5]
 a3(r93): [4..5]
 a4(r88): [6..7]
 a5(r87): [8..9]
 a6(r92): [10..11]
  regions=1, blocks=6, points=12
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    5:r87  l0     0    4:r88  l0     0    2:r89  l0     1    1:r90  l0     0
    0:r91  l0     0    6:r92  l0     0    3:r93  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void IntCode::log(std::__cxx11::string)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,4u} r1={6d} r2={6d} r4={11d,6u} r5={11d,6u} r6={1d,5u} r7={1d,10u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,4u} r17={6d,1u} r18={5d} r19={5d} r20={1d,9u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 449{397d,52u,0e} in 27{22 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:173 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 inp+0 S8 A64])
        (reg:DI 4 si [ inp ])) intcode.cpp:173 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ inp ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) intcode.cpp:174 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:QI 87 [ D.48782 ])
        (mem/j:QI (plus:DI (reg/f:DI 92)
                (const_int 81 [0x51])) [0 this_3(D)->debug+0 S1 A8])) intcode.cpp:174 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.48782 ])
            (const_int 0 [0]))) intcode.cpp:174 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 87 [ D.48782 ])
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 39)
            (pc))) intcode.cpp:174 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 93
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fdf7b5d4090 *.LC20>)) intcode.cpp:175 89 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.cpp:175 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:175 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 16 3 (set (reg/f:DI 88 [ D.48783 ])
        (reg:DI 0 ax)) intcode.cpp:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fdf7b5e0ea0 *.LC28>)) intcode.cpp:175 89 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48783 ])) intcode.cpp:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48783 ])
        (nil)))
(call_insn 18 17 19 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:175 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 3 (set (reg/f:DI 89 [ D.48783 ])
        (reg:DI 0 ax)) intcode.cpp:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 20 19 21 3 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 inp+0 S8 A64])) intcode.cpp:175 89 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 4 si)
        (reg:DI 93)) intcode.cpp:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.48783 ])) intcode.cpp:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48783 ])
        (nil)))
(call_insn 23 22 24 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE") [flags 0x41]  <function_decl 0x7fdf7cc52438 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:175 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 23 25 3 (set (reg/f:DI 90 [ D.48783 ])
        (reg:DI 0 ax)) intcode.cpp:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 25 24 26 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fdf7b5cacf0 *.LC14>)) intcode.cpp:175 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.48783 ])) intcode.cpp:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48783 ])
        (nil)))
(call_insn 27 26 28 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:175 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 28 27 29 3 (set (reg/f:DI 91 [ D.48783 ])
        (reg:DI 0 ax)) intcode.cpp:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 29 28 30 3 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fdf7c96b1b0 endl>)) intcode.cpp:175 89 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48783 ])) intcode.cpp:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48783 ])
        (nil)))
(call_insn 31 30 39 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7fdf7c9401b0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.cpp:175 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 4, flags: (NEW, RTL, MODIFIED)
;;  pred:       2
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 39 31 38 5 125 "" [1 uses])
(note 38 39 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 38 34 5 (const_int 0 [0]) intcode.cpp:177 684 {nop}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 34 40 35 4 123 "" [0 uses])
(note 35 34 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int IntCode::getType(int) (_ZN7IntCode7getTypeEi, funcdef_no=1903, decl_uid=43115, cgraph_uid=522, symbol_order=524)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r110,l0) best DREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r105,l0) best DREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r98,l0) best DREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:50 NO_REX_SSE_REGS:50 SSE_REGS:50 MMX_REGS:65 INT_SSE_REGS:53 ALL_REGS:1040 MEM:15
  a3(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a4(r109,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:38 NO_REX_SSE_REGS:38 SSE_REGS:38 MMX_REGS:53 INT_SSE_REGS:41 ALL_REGS:730 MEM:15
  a5(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r113,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a7(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r110,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a12(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a13(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:10
  a14(r105,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a17(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a18(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a19(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a20(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:10
  a21(r98,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a25(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a27(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a28(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 63(l0): point = 0
   Insn 62(l0): point = 2
   Insn 58(l0): point = 4
   Insn 55(l0): point = 6
   Insn 54(l0): point = 8
   Insn 53(l0): point = 10
   Insn 52(l0): point = 12
   Insn 51(l0): point = 14
   Insn 50(l0): point = 16
   Insn 49(l0): point = 18
   Insn 48(l0): point = 20
   Insn 47(l0): point = 22
   Insn 46(l0): point = 24
   Insn 45(l0): point = 26
   Insn 44(l0): point = 28
   Insn 43(l0): point = 30
   Insn 28(l0): point = 33
   Insn 27(l0): point = 35
   Insn 26(l0): point = 37
   Insn 65(l0): point = 40
   Insn 37(l0): point = 42
   Insn 36(l0): point = 44
   Insn 35(l0): point = 46
   Insn 34(l0): point = 48
   Insn 33(l0): point = 50
   Insn 32(l0): point = 52
   Insn 31(l0): point = 54
   Insn 30(l0): point = 56
   Insn 24(l0): point = 59
   Insn 23(l0): point = 61
   Insn 22(l0): point = 63
   Insn 21(l0): point = 65
   Insn 20(l0): point = 67
   Insn 19(l0): point = 69
   Insn 18(l0): point = 71
   Insn 17(l0): point = 73
   Insn 16(l0): point = 75
   Insn 15(l0): point = 77
   Insn 14(l0): point = 79
   Insn 13(l0): point = 81
   Insn 12(l0): point = 83
   Insn 11(l0): point = 85
   Insn 10(l0): point = 87
   Insn 9(l0): point = 89
   Insn 8(l0): point = 91
   Insn 7(l0): point = 93
   Insn 3(l0): point = 95
   Insn 2(l0): point = 97
 a0(r93): [3..4]
 a1(r92): [5..6]
 a2(r91): [15..20] [7..8]
 a3(r114): [13..18] [9..10]
 a4(r109): [9..30]
 a5(r115): [11..12]
 a6(r113): [21..22]
 a7(r112): [21..24]
 a8(r110): [25..26]
 a9(r111): [27..28]
 a10(r103): [45..46]
 a11(r108): [47..48]
 a12(r107): [47..50]
 a13(r104): [49..56]
 a14(r105): [51..52]
 a15(r106): [53..54]
 a16(r102): [36..37]
 a17(r96): [62..63]
 a18(r101): [64..65]
 a19(r100): [64..67]
 a20(r97): [66..73]
 a21(r98): [68..69]
 a22(r99): [70..71]
 a23(r95): [76..77]
 a24(r90): [78..79]
 a25(r89): [84..87]
 a26(r88): [86..89]
 a27(r87): [90..91]
 a28(r94): [92..93]
Compressing live ranges: from 100 to 50 - 50%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r92): [2..3]
 a2(r91): [10..11] [4..5]
 a3(r114): [10..11] [6..7]
 a4(r109): [6..17]
 a5(r115): [8..9]
 a6(r113): [12..13]
 a7(r112): [12..13]
 a8(r110): [14..15]
 a9(r111): [16..17]
 a10(r103): [20..21]
 a11(r108): [22..23]
 a12(r107): [22..25]
 a13(r104): [24..29]
 a14(r105): [26..27]
 a15(r106): [28..29]
 a16(r102): [18..19]
 a17(r96): [30..31]
 a18(r101): [32..33]
 a19(r100): [32..35]
 a20(r97): [34..39]
 a21(r98): [36..37]
 a22(r99): [38..39]
 a23(r95): [40..41]
 a24(r90): [42..43]
 a25(r89): [44..45]
 a26(r88): [44..45]
 a27(r87): [46..47]
 a28(r94): [48..49]
  pref0:a8(r110)<-hr1@1
  pref1:a14(r105)<-hr1@1
  pref2:a21(r98)<-hr1@1
  regions=1, blocks=6, points=50
    allocnos=29 (big 0), copies=0, conflicts=0, ranges=31
Disposition:
   27:r87  l0     0   26:r88  l0     1   25:r89  l0     0   24:r90  l0     0
    2:r91  l0     1    1:r92  l0     0    0:r93  l0     0   28:r94  l0     0
   23:r95  l0     0   17:r96  l0     0   20:r97  l0     2   21:r98  l0     1
   22:r99  l0     1   19:r100 l0     1   18:r101 l0     0   16:r102 l0     0
   10:r103 l0     0   13:r104 l0     2   14:r105 l0     1   15:r106 l0     1
   12:r107 l0     1   11:r108 l0     0    4:r109 l0     2    8:r110 l0     1
    9:r111 l0     1    7:r112 l0     1    6:r113 l0     0    3:r114 l0     0
    5:r115 l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int IntCode::getType(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={19d,1u} r18={1d} r19={1d} r20={1d,20u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={2d,3u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,2u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,2u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,3u,1e} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={4d,4u} r115={1d,1u} 
;;    total ref usage 228{145d,81u,2e} in 48{47 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 94 95 96 97 98 99 100 101
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:179 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32])
        (reg:SI 4 si [ pos ])) intcode.cpp:179 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ pos ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:180 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 87 [ D.48785 ])
        (mem/j:SI (plus:DI (reg/f:DI 94)
                (const_int 24 [0x18])) [0 this_4(D)->ind+0 S4 A64])) intcode.cpp:180 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 88 [ D.48786 ])
        (sign_extend:DI (reg:SI 87 [ D.48785 ]))) intcode.cpp:180 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ D.48785 ])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 89 [ D.48787 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:180 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 88 [ D.48786 ])) intcode.cpp:180 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.48786 ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.48787 ])) intcode.cpp:180 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48787 ])
        (nil)))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:180 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg/f:DI 90 [ D.48788 ])
        (reg:DI 0 ax)) intcode.cpp:180 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 95)
        (mem:DI (reg/f:DI 90 [ D.48788 ]) [0 *_9+0 S8 A64])) intcode.cpp:180 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48788 ])
        (nil)))
(insn 16 15 17 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 opc+0 S8 A64])
        (reg:DI 95)) intcode.cpp:180 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 97)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 opc+0 S8 A64])) intcode.cpp:181 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 99)
        (const_int 7378697629483820647 [0x6666666666666667])) intcode.cpp:181 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 98)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 97))
                            (sign_extend:TI (reg:DI 99)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:181 332 {*smuldi3_highpart_1}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 100)
                (ashiftrt:DI (reg:DI 98)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:181 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 101)
                (ashiftrt:DI (reg:DI 97)
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:181 537 {ashrdi3_cvt}
     (expr_list:REG_DEAD (reg:DI 97)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 96)
                (minus:DI (reg:DI 100)
                    (reg:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:181 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 101)
        (expr_list:REG_DEAD (reg:DI 100)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 23 22 24 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 opc+0 S8 A64])
        (reg:DI 96)) intcode.cpp:181 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 24 23 38 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) intcode.cpp:182 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102
(code_label 38 24 25 3 128 "" [1 uses])
(note 25 38 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 3 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) intcode.cpp:182 90 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 102)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32]))) intcode.cpp:182 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(jump_insn 28 27 29 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) intcode.cpp:182 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 41)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 103 104 105 106 107 108
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:DI 104)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 opc+0 S8 A64])) intcode.cpp:183 89 {*movdi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 106)
        (const_int 7378697629483820647 [0x6666666666666667])) intcode.cpp:183 89 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 105)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 104))
                            (sign_extend:TI (reg:DI 106)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:183 332 {*smuldi3_highpart_1}
     (expr_list:REG_DEAD (reg:DI 106)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 33 32 34 4 (parallel [
            (set (reg:DI 107)
                (ashiftrt:DI (reg:DI 105)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:183 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 4 (parallel [
            (set (reg:DI 108)
                (ashiftrt:DI (reg:DI 104)
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:183 537 {ashrdi3_cvt}
     (expr_list:REG_DEAD (reg:DI 104)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 103)
                (minus:DI (reg:DI 107)
                    (reg:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:183 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 108)
        (expr_list:REG_DEAD (reg:DI 107)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 36 35 37 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 opc+0 S8 A64])
        (reg:DI 103)) intcode.cpp:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(insn 37 36 65 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:182 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 65 37 66 4 (set (pc)
        (label_ref 38)) intcode.cpp:182 654 {jump}
     (nil)
 -> 38)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 66 65 41)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 91 92 93 109 110 111 112 113 114 115
(code_label 41 66 42 5 127 "" [1 uses])
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 5 (set (reg:DI 109)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 opc+0 S8 A64])) intcode.cpp:185 89 {*movdi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:DI 111)
        (const_int 7378697629483820647 [0x6666666666666667])) intcode.cpp:185 89 {*movdi_internal}
     (nil))
(insn 45 44 46 5 (parallel [
            (set (reg:DI 110)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 109))
                            (sign_extend:TI (reg:DI 111)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:185 332 {*smuldi3_highpart_1}
     (expr_list:REG_DEAD (reg:DI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 112)
                (ashiftrt:DI (reg:DI 110)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:185 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 110)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 47 46 48 5 (parallel [
            (set (reg:DI 113)
                (ashiftrt:DI (reg:DI 109)
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:185 537 {ashrdi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 48 47 49 5 (parallel [
            (set (reg:DI 91 [ D.48789 ])
                (minus:DI (reg:DI 112)
                    (reg:DI 113)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:185 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 113)
        (expr_list:REG_DEAD (reg:DI 112)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (div:DI (reg:DI 109)
                        (const_int 10 [0xa]))
                    (nil))))))
(insn 49 48 50 5 (set (reg:DI 114)
        (reg:DI 91 [ D.48789 ])) intcode.cpp:185 89 {*movdi_internal}
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg:DI 114)
                (ashift:DI (reg:DI 114)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:185 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 51 50 52 5 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg:DI 114)
                    (reg:DI 91 [ D.48789 ])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:185 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.48789 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 91 [ D.48789 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 52 51 53 5 (parallel [
            (set (reg:DI 115)
                (ashift:DI (reg:DI 114)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:185 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 5 (set (reg:DI 114)
        (reg:DI 115)) intcode.cpp:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(insn 54 53 55 5 (parallel [
            (set (reg:DI 91 [ D.48789 ])
                (minus:DI (reg:DI 109)
                    (reg:DI 114)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:185 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 114)
        (expr_list:REG_DEAD (reg:DI 109)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 55 54 58 5 (set (reg:SI 92 [ D.48785 ])
        (subreg:SI (reg:DI 91 [ D.48789 ]) 0)) intcode.cpp:185 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ D.48789 ])
        (nil)))
(insn 58 55 62 5 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ D.48785 ])) intcode.cpp:185 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ D.48785 ])
        (nil)))
(insn 62 58 63 5 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) intcode.cpp:186 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ <retval> ])
        (nil)))
(insn 63 62 0 5 (use (reg/i:SI 0 ax)) intcode.cpp:186 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function long long int IntCode::getParam(int) (_ZN7IntCode8getParamEi, funcdef_no=1904, decl_uid=43118, cgraph_uid=523, symbol_order=525)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 81.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r117,l0) best AREG, allocno GENERAL_REGS
    r116: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r116,l0) best DIREG, allocno GENERAL_REGS
    r115: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r115,l0) best SIREG, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r114,l0) best AREG, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r112,l0) best DIREG, allocno GENERAL_REGS
    r111: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r111,l0) best SIREG, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r108,l0) best AREG, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r106,l0) best SIREG, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:44 NO_REX_SSE_REGS:44 SSE_REGS:44 MMX_REGS:49 INT_SSE_REGS:45 ALL_REGS:520 MEM:15
  a2(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a3(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a9(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a12(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a15(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a17(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a18(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a19(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a25(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a27(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a28(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a29(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a31(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a33(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a35(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:36 NO_REX_SSE_REGS:36 SSE_REGS:36 MMX_REGS:51 INT_SSE_REGS:39 ALL_REGS:728 MEM:14
  a36(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a37(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a38(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 99(l0): point = 0
   Insn 98(l0): point = 2
   Insn 94(l0): point = 5
   Insn 111(l0): point = 8
   Insn 89(l0): point = 10
   Insn 88(l0): point = 12
   Insn 109(l0): point = 15
   Insn 83(l0): point = 17
   Insn 82(l0): point = 19
   Insn 81(l0): point = 21
   Insn 80(l0): point = 23
   Insn 79(l0): point = 25
   Insn 78(l0): point = 27
   Insn 77(l0): point = 29
   Insn 76(l0): point = 31
   Insn 75(l0): point = 33
   Insn 74(l0): point = 35
   Insn 73(l0): point = 37
   Insn 72(l0): point = 39
   Insn 71(l0): point = 41
   Insn 70(l0): point = 43
   Insn 69(l0): point = 45
   Insn 68(l0): point = 47
   Insn 67(l0): point = 49
   Insn 66(l0): point = 51
   Insn 65(l0): point = 53
   Insn 64(l0): point = 55
   Insn 63(l0): point = 57
   Insn 62(l0): point = 59
   Insn 107(l0): point = 62
   Insn 57(l0): point = 64
   Insn 56(l0): point = 66
   Insn 55(l0): point = 68
   Insn 54(l0): point = 70
   Insn 53(l0): point = 72
   Insn 52(l0): point = 74
   Insn 51(l0): point = 76
   Insn 50(l0): point = 78
   Insn 49(l0): point = 80
   Insn 48(l0): point = 82
   Insn 47(l0): point = 84
   Insn 105(l0): point = 87
   Insn 42(l0): point = 89
   Insn 41(l0): point = 91
   Insn 40(l0): point = 93
   Insn 39(l0): point = 95
   Insn 38(l0): point = 97
   Insn 37(l0): point = 99
   Insn 36(l0): point = 101
   Insn 35(l0): point = 103
   Insn 34(l0): point = 105
   Insn 33(l0): point = 107
   Insn 32(l0): point = 109
   Insn 31(l0): point = 111
   Insn 30(l0): point = 113
   Insn 29(l0): point = 115
   Insn 28(l0): point = 117
   Insn 27(l0): point = 119
   Insn 26(l0): point = 121
   Insn 25(l0): point = 123
   Insn 20(l0): point = 126
   Insn 19(l0): point = 128
   Insn 18(l0): point = 131
   Insn 17(l0): point = 133
   Insn 16(l0): point = 136
   Insn 15(l0): point = 138
   Insn 14(l0): point = 140
   Insn 13(l0): point = 142
   Insn 12(l0): point = 144
   Insn 11(l0): point = 146
   Insn 10(l0): point = 148
   Insn 9(l0): point = 150
   Insn 8(l0): point = 152
   Insn 7(l0): point = 154
   Insn 3(l0): point = 156
   Insn 2(l0): point = 158
 a0(r114): [8..10] [3..5]
 a1(r87): [87..89] [62..64] [15..17] [6..7]
 a2(r113): [18..19]
 a3(r112): [24..27]
 a4(r111): [26..29]
 a5(r110): [30..31]
 a6(r109): [32..33]
 a7(r103): [32..55]
 a8(r108): [34..35]
 a9(r107): [40..43]
 a10(r106): [42..45]
 a11(r105): [46..47]
 a12(r125): [48..49]
 a13(r104): [48..51]
 a14(r124): [52..53]
 a15(r102): [56..57]
 a16(r123): [58..59]
 a17(r101): [65..66]
 a18(r100): [71..74]
 a19(r99): [73..76]
 a20(r98): [77..78]
 a21(r122): [79..80]
 a22(r97): [79..82]
 a23(r121): [83..84]
 a24(r96): [90..91]
 a25(r95): [96..99]
 a26(r94): [98..101]
 a27(r93): [102..103]
 a28(r92): [104..105]
 a29(r91): [110..113]
 a30(r90): [112..115]
 a31(r89): [116..117]
 a32(r120): [118..119]
 a33(r88): [118..121]
 a34(r119): [122..123]
 a35(r118): [129..140]
 a36(r117): [143..144]
 a37(r116): [149..152]
 a38(r115): [151..154]
Compressing live ranges: from 161 to 66 - 40%
Ranges after the compression:
 a0(r114): [4..5] [0..1]
 a1(r87): [42..43] [30..31] [6..7] [2..3]
 a2(r113): [8..9]
 a3(r112): [10..11]
 a4(r111): [10..11]
 a5(r110): [12..13]
 a6(r109): [14..15]
 a7(r103): [14..25]
 a8(r108): [16..17]
 a9(r107): [18..19]
 a10(r106): [18..19]
 a11(r105): [20..21]
 a12(r125): [22..23]
 a13(r104): [22..23]
 a14(r124): [24..25]
 a15(r102): [26..27]
 a16(r123): [28..29]
 a17(r101): [32..33]
 a18(r100): [34..35]
 a19(r99): [34..35]
 a20(r98): [36..37]
 a21(r122): [38..39]
 a22(r97): [38..39]
 a23(r121): [40..41]
 a24(r96): [44..45]
 a25(r95): [46..47]
 a26(r94): [46..47]
 a27(r93): [48..49]
 a28(r92): [50..51]
 a29(r91): [52..53]
 a30(r90): [52..53]
 a31(r89): [54..55]
 a32(r120): [56..57]
 a33(r88): [56..57]
 a34(r119): [58..59]
 a35(r118): [60..61]
 a36(r117): [62..63]
 a37(r116): [64..65]
 a38(r115): [64..65]
  regions=1, blocks=11, points=66
    allocnos=39 (big 0), copies=0, conflicts=0, ranges=43
Disposition:
    1:r87  l0     0   33:r88  l0     1   31:r89  l0     0   30:r90  l0     1
   29:r91  l0     0   28:r92  l0     0   27:r93  l0     0   26:r94  l0     1
   25:r95  l0     0   24:r96  l0     0   22:r97  l0     1   20:r98  l0     0
   19:r99  l0     1   18:r100 l0     0   17:r101 l0     0   15:r102 l0     0
    7:r103 l0     3   13:r104 l0     1   11:r105 l0     0   10:r106 l0     1
    9:r107 l0     0    8:r108 l0     0    6:r109 l0     0    5:r110 l0     0
    4:r111 l0     1    3:r112 l0     0    2:r113 l0     0    0:r114 l0     0
   38:r115 l0     1   37:r116 l0     0   36:r117 l0     0   35:r118 l0     0
   34:r119 l0     0   32:r120 l0     0   23:r121 l0     0   21:r122 l0     0
   16:r123 l0     0   14:r124 l0     0   12:r125 l0     0
+++Costs: overall -19, reg -19, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


long long int IntCode::getParam(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d,8u} r1={7d} r2={7d} r4={13d,7u} r5={13d,7u} r6={1d,10u} r7={1d,16u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,9u} r17={13d,3u} r18={6d} r19={6d} r20={1d,28u,3e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={3d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u,1e} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u,1e} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={2d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,3u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} 
;;    total ref usage 649{514d,129u,6e} in 76{70 regular + 6 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 116 117 118
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:188 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32])
        (reg:SI 4 si [ pos ])) intcode.cpp:188 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ pos ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32])) intcode.cpp:189 90 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:189 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 4 si)
        (reg:SI 115)) intcode.cpp:189 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 116)) intcode.cpp:189 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode7getTypeEi") [flags 0x3]  <function_decl 0x7fdf7bddb798 getType>) [0 getType S1 A8])
            (const_int 0 [0]))) intcode.cpp:189 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:SI 117)
        (reg:SI 0 ax)) intcode.cpp:189 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 type+0 S4 A32])
        (reg:SI 117)) intcode.cpp:189 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 118 [ type ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 type+0 S4 A32])) intcode.cpp:191 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ type ])
            (const_int 1 [0x1]))) intcode.cpp:191 7 {*cmpsi_1}
     (nil))
(jump_insn 16 15 101 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) intcode.cpp:191 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
;;  succ:       6
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 17 [flags]
(note 101 16 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 101 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ type ])
            (const_int 2 [0x2]))) intcode.cpp:191 7 {*cmpsi_1}
     (nil))
(jump_insn 18 17 102 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) intcode.cpp:191 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 60)
;;  succ:       7
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 17 [flags]
(note 102 18 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 102 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ type ])
            (const_int 0 [0]))) intcode.cpp:191 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 118 [ type ])
        (nil)))
(jump_insn 20 19 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 104)
            (pc))) intcode.cpp:191 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 104)
;;  succ:       5 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 119 120
(note 24 20 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:192 89 {*movdi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:SI 88 [ D.48791 ])
        (mem/j:SI (plus:DI (reg/f:DI 119)
                (const_int 24 [0x18])) [0 this_4(D)->ind+0 S4 A64])) intcode.cpp:192 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119)
        (nil)))
(insn 27 26 28 5 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32])) intcode.cpp:192 90 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:SI 89 [ D.48791 ])
                (plus:SI (reg:SI 88 [ D.48791 ])
                    (reg:SI 120)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:192 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_DEAD (reg:SI 88 [ D.48791 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 88 [ D.48791 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32]))
                    (nil))))))
(insn 29 28 30 5 (set (reg:DI 90 [ D.48792 ])
        (sign_extend:DI (reg:SI 89 [ D.48791 ]))) intcode.cpp:192 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 89 [ D.48791 ])
        (nil)))
(insn 30 29 31 5 (set (reg/f:DI 91 [ D.48793 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:192 89 {*movdi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:DI 4 si)
        (reg:DI 90 [ D.48792 ])) intcode.cpp:192 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ D.48792 ])
        (nil)))
(insn 32 31 33 5 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48793 ])) intcode.cpp:192 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48793 ])
        (nil)))
(call_insn 33 32 34 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:192 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 34 33 35 5 (set (reg/f:DI 92 [ D.48794 ])
        (reg:DI 0 ax)) intcode.cpp:192 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 35 34 36 5 (set (reg:DI 93 [ D.48790 ])
        (mem:DI (reg/f:DI 92 [ D.48794 ]) [0 *_13+0 S8 A64])) intcode.cpp:192 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.48794 ])
        (nil)))
(insn 36 35 37 5 (set (reg:DI 94 [ D.48792 ])
        (reg:DI 93 [ D.48790 ])) intcode.cpp:192 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ D.48790 ])
        (nil)))
(insn 37 36 38 5 (set (reg/f:DI 95 [ D.48793 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:192 89 {*movdi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:DI 4 si)
        (reg:DI 94 [ D.48792 ])) intcode.cpp:192 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ D.48792 ])
        (nil)))
(insn 39 38 40 5 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.48793 ])) intcode.cpp:192 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.48793 ])
        (nil)))
(call_insn 40 39 41 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:192 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 41 40 42 5 (set (reg/f:DI 96 [ D.48794 ])
        (reg:DI 0 ax)) intcode.cpp:192 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 42 41 105 5 (set (reg:DI 87 [ D.48790 ])
        (mem:DI (reg/f:DI 96 [ D.48794 ]) [0 *_18+0 S8 A64])) intcode.cpp:192 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.48794 ])
        (nil)))
(jump_insn 105 42 106 5 (set (pc)
        (label_ref 92)) intcode.cpp:192 654 {jump}
     (nil)
 -> 92)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 106 105 45)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 97 98 99 100 101 121 122
(code_label 45 106 46 6 132 "" [1 uses])
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:193 89 {*movdi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:SI 97 [ D.48791 ])
        (mem/j:SI (plus:DI (reg/f:DI 121)
                (const_int 24 [0x18])) [0 this_4(D)->ind+0 S4 A64])) intcode.cpp:193 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121)
        (nil)))
(insn 49 48 50 6 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32])) intcode.cpp:193 90 {*movsi_internal}
     (nil))
(insn 50 49 51 6 (parallel [
            (set (reg:SI 98 [ D.48791 ])
                (plus:SI (reg:SI 97 [ D.48791 ])
                    (reg:SI 122)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:193 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 122)
        (expr_list:REG_DEAD (reg:SI 97 [ D.48791 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 97 [ D.48791 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32]))
                    (nil))))))
(insn 51 50 52 6 (set (reg:DI 99 [ D.48792 ])
        (sign_extend:DI (reg:SI 98 [ D.48791 ]))) intcode.cpp:193 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 98 [ D.48791 ])
        (nil)))
(insn 52 51 53 6 (set (reg/f:DI 100 [ D.48793 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:193 89 {*movdi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:DI 4 si)
        (reg:DI 99 [ D.48792 ])) intcode.cpp:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ D.48792 ])
        (nil)))
(insn 54 53 55 6 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.48793 ])) intcode.cpp:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.48793 ])
        (nil)))
(call_insn 55 54 56 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:193 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 56 55 57 6 (set (reg/f:DI 101 [ D.48794 ])
        (reg:DI 0 ax)) intcode.cpp:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 57 56 107 6 (set (reg:DI 87 [ D.48790 ])
        (mem:DI (reg/f:DI 101 [ D.48794 ]) [0 *_25+0 S8 A64])) intcode.cpp:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.48794 ])
        (nil)))
(jump_insn 107 57 108 6 (set (pc)
        (label_ref 92)) intcode.cpp:193 654 {jump}
     (nil)
 -> 92)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 108 107 60)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 102 103 104 105 106 107 108 109 110 111 112 113 123 124 125
(code_label 60 108 61 7 133 "" [1 uses])
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:194 89 {*movdi_internal}
     (nil))
(insn 63 62 64 7 (set (reg:SI 102 [ D.48791 ])
        (mem/j:SI (plus:DI (reg/f:DI 123)
                (const_int 28 [0x1c])) [0 this_4(D)->rel+0 S4 A32])) intcode.cpp:194 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(insn 64 63 65 7 (set (reg:DI 103 [ D.48790 ])
        (sign_extend:DI (reg:SI 102 [ D.48791 ]))) intcode.cpp:194 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 102 [ D.48791 ])
        (nil)))
(insn 65 64 66 7 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:194 89 {*movdi_internal}
     (nil))
(insn 66 65 67 7 (set (reg:SI 104 [ D.48791 ])
        (mem/j:SI (plus:DI (reg/f:DI 124)
                (const_int 24 [0x18])) [0 this_4(D)->ind+0 S4 A64])) intcode.cpp:194 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (nil)))
(insn 67 66 68 7 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32])) intcode.cpp:194 90 {*movsi_internal}
     (nil))
(insn 68 67 69 7 (parallel [
            (set (reg:SI 105 [ D.48791 ])
                (plus:SI (reg:SI 104 [ D.48791 ])
                    (reg:SI 125)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:194 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 125)
        (expr_list:REG_DEAD (reg:SI 104 [ D.48791 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 104 [ D.48791 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32]))
                    (nil))))))
(insn 69 68 70 7 (set (reg:DI 106 [ D.48792 ])
        (sign_extend:DI (reg:SI 105 [ D.48791 ]))) intcode.cpp:194 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 105 [ D.48791 ])
        (nil)))
(insn 70 69 71 7 (set (reg/f:DI 107 [ D.48793 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:194 89 {*movdi_internal}
     (nil))
(insn 71 70 72 7 (set (reg:DI 4 si)
        (reg:DI 106 [ D.48792 ])) intcode.cpp:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106 [ D.48792 ])
        (nil)))
(insn 72 71 73 7 (set (reg:DI 5 di)
        (reg/f:DI 107 [ D.48793 ])) intcode.cpp:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.48793 ])
        (nil)))
(call_insn 73 72 74 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:194 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 74 73 75 7 (set (reg/f:DI 108 [ D.48794 ])
        (reg:DI 0 ax)) intcode.cpp:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 75 74 76 7 (set (reg:DI 109 [ D.48790 ])
        (mem:DI (reg/f:DI 108 [ D.48794 ]) [0 *_34+0 S8 A64])) intcode.cpp:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ D.48794 ])
        (nil)))
(insn 76 75 77 7 (parallel [
            (set (reg:DI 110 [ D.48790 ])
                (plus:DI (reg:DI 103 [ D.48790 ])
                    (reg:DI 109 [ D.48790 ])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:194 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ D.48790 ])
        (expr_list:REG_DEAD (reg:DI 103 [ D.48790 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 77 76 78 7 (set (reg:DI 111 [ D.48792 ])
        (reg:DI 110 [ D.48790 ])) intcode.cpp:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ D.48790 ])
        (nil)))
(insn 78 77 79 7 (set (reg/f:DI 112 [ D.48793 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:194 89 {*movdi_internal}
     (nil))
(insn 79 78 80 7 (set (reg:DI 4 si)
        (reg:DI 111 [ D.48792 ])) intcode.cpp:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111 [ D.48792 ])
        (nil)))
(insn 80 79 81 7 (set (reg:DI 5 di)
        (reg/f:DI 112 [ D.48793 ])) intcode.cpp:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.48793 ])
        (nil)))
(call_insn 81 80 82 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:194 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 82 81 83 7 (set (reg/f:DI 113 [ D.48794 ])
        (reg:DI 0 ax)) intcode.cpp:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 83 82 109 7 (set (reg:DI 87 [ D.48790 ])
        (mem:DI (reg/f:DI 113 [ D.48794 ]) [0 *_40+0 S8 A64])) intcode.cpp:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113 [ D.48794 ])
        (nil)))
(jump_insn 109 83 110 7 (set (pc)
        (label_ref 92)) intcode.cpp:194 654 {jump}
     (nil)
 -> 92)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 110 109 104)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 114
(code_label 104 110 87 8 136 "" [1 uses])
(note 87 104 88 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 8 (clobber (reg/i:DI 0 ax)) intcode.cpp:196 -1
     (expr_list:REG_UNUSED (reg/i:DI 0 ax)
        (nil)))
(insn 89 88 111 8 (clobber (reg:DI 114 [ <retval> ])) intcode.cpp:196 -1
     (nil))
(jump_insn 111 89 112 8 (set (pc)
        (label_ref 97)) intcode.cpp:196 654 {jump}
     (nil)
 -> 97)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114

(barrier 112 111 92)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%] 
;;              5 [100.0%] 
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 114
(code_label 92 112 93 9 135 "" [3 uses])
(note 93 92 94 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 97 9 (set (reg:DI 114 [ <retval> ])
        (reg:DI 87 [ D.48790 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.48790 ])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114
;; lr  def 	 0 [ax]
(code_label 97 94 100 10 130 "" [1 uses])
(note 100 97 98 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 98 100 99 10 (set (reg/i:DI 0 ax)
        (reg:DI 114 [ <retval> ])) intcode.cpp:196 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114 [ <retval> ])
        (nil)))
(insn 99 98 0 10 (use (reg/i:DI 0 ax)) intcode.cpp:196 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void IntCode::setParam(int, long long int) (_ZN7IntCode8setParamEix, funcdef_no=1905, decl_uid=43122, cgraph_uid=524, symbol_order=526)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 15 count 13 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 84.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r115,l0) best AREG, allocno GENERAL_REGS
    r114: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r114,l0) best DIREG, allocno GENERAL_REGS
    r113: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r113,l0) best SIREG, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r110,l0) best SIREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r105,l0) best SIREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r98,l0) best SIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a1(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a5(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a8(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a14(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a16(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a17(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a18(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a19(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a25(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a26(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a28(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a29(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a30(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a31(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a32(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a33(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a35(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a36(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:36 NO_REX_SSE_REGS:36 SSE_REGS:36 MMX_REGS:51 INT_SSE_REGS:39 ALL_REGS:728 MEM:14
  a37(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a38(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a39(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 104(l0): point = 1
   Insn 102(l0): point = 5
   Insn 87(l0): point = 8
   Insn 86(l0): point = 10
   Insn 85(l0): point = 12
   Insn 84(l0): point = 14
   Insn 83(l0): point = 16
   Insn 82(l0): point = 18
   Insn 81(l0): point = 20
   Insn 80(l0): point = 22
   Insn 79(l0): point = 24
   Insn 78(l0): point = 26
   Insn 77(l0): point = 28
   Insn 76(l0): point = 30
   Insn 75(l0): point = 32
   Insn 74(l0): point = 34
   Insn 73(l0): point = 36
   Insn 72(l0): point = 38
   Insn 71(l0): point = 40
   Insn 70(l0): point = 42
   Insn 69(l0): point = 44
   Insn 68(l0): point = 46
   Insn 67(l0): point = 48
   Insn 66(l0): point = 50
   Insn 65(l0): point = 52
   Insn 99(l0): point = 55
   Insn 60(l0): point = 57
   Insn 59(l0): point = 59
   Insn 58(l0): point = 61
   Insn 57(l0): point = 63
   Insn 56(l0): point = 65
   Insn 55(l0): point = 67
   Insn 54(l0): point = 69
   Insn 53(l0): point = 71
   Insn 52(l0): point = 73
   Insn 51(l0): point = 75
   Insn 50(l0): point = 77
   Insn 49(l0): point = 79
   Insn 97(l0): point = 82
   Insn 44(l0): point = 84
   Insn 43(l0): point = 86
   Insn 42(l0): point = 88
   Insn 41(l0): point = 90
   Insn 40(l0): point = 92
   Insn 39(l0): point = 94
   Insn 38(l0): point = 96
   Insn 37(l0): point = 98
   Insn 36(l0): point = 100
   Insn 35(l0): point = 102
   Insn 34(l0): point = 104
   Insn 33(l0): point = 106
   Insn 32(l0): point = 108
   Insn 31(l0): point = 110
   Insn 30(l0): point = 112
   Insn 29(l0): point = 114
   Insn 28(l0): point = 116
   Insn 27(l0): point = 118
   Insn 26(l0): point = 120
   Insn 95(l0): point = 123
   Insn 21(l0): point = 126
   Insn 20(l0): point = 128
   Insn 19(l0): point = 131
   Insn 18(l0): point = 133
   Insn 17(l0): point = 136
   Insn 16(l0): point = 138
   Insn 15(l0): point = 140
   Insn 14(l0): point = 142
   Insn 13(l0): point = 144
   Insn 12(l0): point = 146
   Insn 11(l0): point = 148
   Insn 10(l0): point = 150
   Insn 9(l0): point = 152
   Insn 8(l0): point = 154
   Insn 4(l0): point = 156
   Insn 3(l0): point = 158
   Insn 2(l0): point = 160
 a0(r112): [9..12]
 a1(r126): [9..10]
 a2(r111): [17..20]
 a3(r110): [19..22]
 a4(r109): [23..24]
 a5(r108): [25..26]
 a6(r102): [25..48]
 a7(r107): [27..28]
 a8(r106): [33..36]
 a9(r105): [35..38]
 a10(r104): [39..40]
 a11(r125): [41..42]
 a12(r103): [41..44]
 a13(r124): [45..46]
 a14(r101): [49..50]
 a15(r123): [51..52]
 a16(r100): [58..61]
 a17(r122): [58..59]
 a18(r99): [66..69]
 a19(r98): [68..71]
 a20(r97): [72..73]
 a21(r121): [74..75]
 a22(r96): [74..77]
 a23(r120): [78..79]
 a24(r95): [85..88]
 a25(r119): [85..86]
 a26(r94): [93..96]
 a27(r93): [95..98]
 a28(r92): [99..100]
 a29(r91): [101..102]
 a30(r90): [107..110]
 a31(r89): [109..112]
 a32(r88): [113..114]
 a33(r118): [115..116]
 a34(r87): [115..118]
 a35(r117): [119..120]
 a36(r116): [129..140]
 a37(r115): [143..144]
 a38(r114): [149..152]
 a39(r113): [151..154]
Compressing live ranges: from 163 to 54 - 33%
Ranges after the compression:
 a0(r112): [0..1]
 a1(r126): [0..1]
 a2(r111): [2..3]
 a3(r110): [2..3]
 a4(r109): [4..5]
 a5(r108): [6..7]
 a6(r102): [6..17]
 a7(r107): [8..9]
 a8(r106): [10..11]
 a9(r105): [10..11]
 a10(r104): [12..13]
 a11(r125): [14..15]
 a12(r103): [14..15]
 a13(r124): [16..17]
 a14(r101): [18..19]
 a15(r123): [20..21]
 a16(r100): [22..23]
 a17(r122): [22..23]
 a18(r99): [24..25]
 a19(r98): [24..25]
 a20(r97): [26..27]
 a21(r121): [28..29]
 a22(r96): [28..29]
 a23(r120): [30..31]
 a24(r95): [32..33]
 a25(r119): [32..33]
 a26(r94): [34..35]
 a27(r93): [34..35]
 a28(r92): [36..37]
 a29(r91): [38..39]
 a30(r90): [40..41]
 a31(r89): [40..41]
 a32(r88): [42..43]
 a33(r118): [44..45]
 a34(r87): [44..45]
 a35(r117): [46..47]
 a36(r116): [48..49]
 a37(r115): [50..51]
 a38(r114): [52..53]
 a39(r113): [52..53]
  regions=1, blocks=13, points=54
    allocnos=40 (big 0), copies=0, conflicts=0, ranges=40
Disposition:
   34:r87  l0     1   32:r88  l0     0   31:r89  l0     1   30:r90  l0     0
   29:r91  l0     0   28:r92  l0     0   27:r93  l0     1   26:r94  l0     0
   24:r95  l0     1   22:r96  l0     1   20:r97  l0     0   19:r98  l0     1
   18:r99  l0     0   16:r100 l0     1   14:r101 l0     0    6:r102 l0     3
   12:r103 l0     1   10:r104 l0     0    9:r105 l0     1    8:r106 l0     0
    7:r107 l0     0    5:r108 l0     0    4:r109 l0     0    3:r110 l0     1
    2:r111 l0     0    0:r112 l0     1   39:r113 l0     1   38:r114 l0     0
   37:r115 l0     0   36:r116 l0     0   35:r117 l0     0   33:r118 l0     0
   25:r119 l0     0   23:r120 l0     0   21:r121 l0     0   17:r122 l0     0
   15:r123 l0     0   13:r124 l0     0   11:r125 l0     0    1:r126 l0     0
+++Costs: overall -18, reg -18, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void IntCode::setParam(int, long long int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={7d,6u} r1={7d,1u} r2={7d} r4={13d,7u} r5={13d,7u} r6={1d,12u} r7={1d,18u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,11u} r17={13d,3u} r18={6d} r19={6d} r20={1d,34u,3e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,1u,1e} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u,1e} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u,1e} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,3u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} 
;;    total ref usage 657{510d,141u,6e} in 76{70 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 113 114 115 116
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) intcode.cpp:198 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32])
        (reg:SI 4 si [ pos ])) intcode.cpp:198 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ pos ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 val+0 S8 A64])
        (reg:DI 1 dx [ val ])) intcode.cpp:198 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ val ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32])) intcode.cpp:199 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:199 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (reg:SI 113)) intcode.cpp:199 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 114)) intcode.cpp:199 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7IntCode7getTypeEi") [flags 0x3]  <function_decl 0x7fdf7bddb798 getType>) [0 getType S1 A8])
            (const_int 0 [0]))) intcode.cpp:199 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:SI 115)
        (reg:SI 0 ax)) intcode.cpp:199 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 type+0 S4 A32])
        (reg:SI 115)) intcode.cpp:199 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 15 14 16 2 (set (reg:SI 116 [ type ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 type+0 S4 A32])) intcode.cpp:201 90 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ type ])
            (const_int 1 [0x1]))) intcode.cpp:201 7 {*cmpsi_1}
     (nil))
(jump_insn 17 16 92 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) intcode.cpp:201 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 47)
;;  succ:       7
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  def 	 17 [flags]
(note 92 17 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 92 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ type ])
            (const_int 2 [0x2]))) intcode.cpp:201 7 {*cmpsi_1}
     (nil))
(jump_insn 19 18 93 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) intcode.cpp:201 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 63)
;;  succ:       8
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  def 	 17 [flags]
(note 93 19 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 93 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ type ])
            (const_int 0 [0]))) intcode.cpp:201 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 116 [ type ])
        (nil)))
(jump_insn 21 20 94 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) intcode.cpp:201 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       6
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 94 21 95 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 95 94 96 5 (set (pc)
        (label_ref:DI 105)) intcode.cpp:206 654 {jump}
     (nil)
 -> 105)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 96 95 24)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 117 118 119
(code_label 24 96 25 6 141 "" [1 uses])
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:202 89 {*movdi_internal}
     (nil))
(insn 27 26 28 6 (set (reg:SI 87 [ D.48795 ])
        (mem/j:SI (plus:DI (reg/f:DI 117)
                (const_int 24 [0x18])) [0 this_3(D)->ind+0 S4 A64])) intcode.cpp:202 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (nil)))
(insn 28 27 29 6 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32])) intcode.cpp:202 90 {*movsi_internal}
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg:SI 88 [ D.48795 ])
                (plus:SI (reg:SI 87 [ D.48795 ])
                    (reg:SI 118)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:202 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg:SI 87 [ D.48795 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 87 [ D.48795 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32]))
                    (nil))))))
(insn 30 29 31 6 (set (reg:DI 89 [ D.48796 ])
        (sign_extend:DI (reg:SI 88 [ D.48795 ]))) intcode.cpp:202 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 88 [ D.48795 ])
        (nil)))
(insn 31 30 32 6 (set (reg/f:DI 90 [ D.48797 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:202 89 {*movdi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:DI 4 si)
        (reg:DI 89 [ D.48796 ])) intcode.cpp:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.48796 ])
        (nil)))
(insn 33 32 34 6 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.48797 ])) intcode.cpp:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48797 ])
        (nil)))
(call_insn 34 33 35 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:202 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 35 34 36 6 (set (reg/f:DI 91 [ D.48798 ])
        (reg:DI 0 ax)) intcode.cpp:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 36 35 37 6 (set (reg:DI 92 [ D.48799 ])
        (mem:DI (reg/f:DI 91 [ D.48798 ]) [0 *_12+0 S8 A64])) intcode.cpp:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48798 ])
        (nil)))
(insn 37 36 38 6 (set (reg:DI 93 [ D.48796 ])
        (reg:DI 92 [ D.48799 ])) intcode.cpp:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ D.48799 ])
        (nil)))
(insn 38 37 39 6 (set (reg/f:DI 94 [ D.48797 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:202 89 {*movdi_internal}
     (nil))
(insn 39 38 40 6 (set (reg:DI 4 si)
        (reg:DI 93 [ D.48796 ])) intcode.cpp:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ D.48796 ])
        (nil)))
(insn 40 39 41 6 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.48797 ])) intcode.cpp:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.48797 ])
        (nil)))
(call_insn 41 40 42 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:202 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 42 41 43 6 (set (reg/f:DI 95 [ D.48798 ])
        (reg:DI 0 ax)) intcode.cpp:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 43 42 44 6 (set (reg:DI 119)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 val+0 S8 A64])) intcode.cpp:202 89 {*movdi_internal}
     (nil))
(insn 44 43 97 6 (set (mem:DI (reg/f:DI 95 [ D.48798 ]) [0 *_17+0 S8 A64])
        (reg:DI 119)) intcode.cpp:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119)
        (expr_list:REG_DEAD (reg/f:DI 95 [ D.48798 ])
            (nil))))
(jump_insn 97 44 98 6 (set (pc)
        (label_ref 88)) intcode.cpp:202 654 {jump}
     (nil)
 -> 88)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 98 97 47)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97 98 99 100 120 121 122
(code_label 47 98 48 7 139 "" [1 uses])
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:203 89 {*movdi_internal}
     (nil))
(insn 50 49 51 7 (set (reg:SI 96 [ D.48795 ])
        (mem/j:SI (plus:DI (reg/f:DI 120)
                (const_int 24 [0x18])) [0 this_3(D)->ind+0 S4 A64])) intcode.cpp:203 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120)
        (nil)))
(insn 51 50 52 7 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32])) intcode.cpp:203 90 {*movsi_internal}
     (nil))
(insn 52 51 53 7 (parallel [
            (set (reg:SI 97 [ D.48795 ])
                (plus:SI (reg:SI 96 [ D.48795 ])
                    (reg:SI 121)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:203 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 121)
        (expr_list:REG_DEAD (reg:SI 96 [ D.48795 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 96 [ D.48795 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32]))
                    (nil))))))
(insn 53 52 54 7 (set (reg:DI 98 [ D.48796 ])
        (sign_extend:DI (reg:SI 97 [ D.48795 ]))) intcode.cpp:203 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97 [ D.48795 ])
        (nil)))
(insn 54 53 55 7 (set (reg/f:DI 99 [ D.48797 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:203 89 {*movdi_internal}
     (nil))
(insn 55 54 56 7 (set (reg:DI 4 si)
        (reg:DI 98 [ D.48796 ])) intcode.cpp:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98 [ D.48796 ])
        (nil)))
(insn 56 55 57 7 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.48797 ])) intcode.cpp:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.48797 ])
        (nil)))
(call_insn 57 56 58 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:203 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 58 57 59 7 (set (reg/f:DI 100 [ D.48798 ])
        (reg:DI 0 ax)) intcode.cpp:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 59 58 60 7 (set (reg:DI 122)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 val+0 S8 A64])) intcode.cpp:203 89 {*movdi_internal}
     (nil))
(insn 60 59 99 7 (set (mem:DI (reg/f:DI 100 [ D.48798 ]) [0 *_25+0 S8 A64])
        (reg:DI 122)) intcode.cpp:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 122)
        (expr_list:REG_DEAD (reg/f:DI 100 [ D.48798 ])
            (nil))))
(jump_insn 99 60 100 7 (set (pc)
        (label_ref 88)) intcode.cpp:203 654 {jump}
     (nil)
 -> 88)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 100 99 63)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 101 102 103 104 105 106 107 108 109 110 111 112 123 124 125 126
(code_label 63 100 64 8 140 "" [1 uses])
(note 64 63 65 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 8 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:204 89 {*movdi_internal}
     (nil))
(insn 66 65 67 8 (set (reg:SI 101 [ D.48795 ])
        (mem/j:SI (plus:DI (reg/f:DI 123)
                (const_int 28 [0x1c])) [0 this_3(D)->rel+0 S4 A32])) intcode.cpp:204 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(insn 67 66 68 8 (set (reg:DI 102 [ D.48799 ])
        (sign_extend:DI (reg:SI 101 [ D.48795 ]))) intcode.cpp:204 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 101 [ D.48795 ])
        (nil)))
(insn 68 67 69 8 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:204 89 {*movdi_internal}
     (nil))
(insn 69 68 70 8 (set (reg:SI 103 [ D.48795 ])
        (mem/j:SI (plus:DI (reg/f:DI 124)
                (const_int 24 [0x18])) [0 this_3(D)->ind+0 S4 A64])) intcode.cpp:204 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (nil)))
(insn 70 69 71 8 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32])) intcode.cpp:204 90 {*movsi_internal}
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg:SI 104 [ D.48795 ])
                (plus:SI (reg:SI 103 [ D.48795 ])
                    (reg:SI 125)))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:204 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 125)
        (expr_list:REG_DEAD (reg:SI 103 [ D.48795 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 103 [ D.48795 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -28 [0xffffffffffffffe4])) [0 pos+0 S4 A32]))
                    (nil))))))
(insn 72 71 73 8 (set (reg:DI 105 [ D.48796 ])
        (sign_extend:DI (reg:SI 104 [ D.48795 ]))) intcode.cpp:204 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 104 [ D.48795 ])
        (nil)))
(insn 73 72 74 8 (set (reg/f:DI 106 [ D.48797 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:204 89 {*movdi_internal}
     (nil))
(insn 74 73 75 8 (set (reg:DI 4 si)
        (reg:DI 105 [ D.48796 ])) intcode.cpp:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105 [ D.48796 ])
        (nil)))
(insn 75 74 76 8 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.48797 ])) intcode.cpp:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ D.48797 ])
        (nil)))
(call_insn 76 75 77 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:204 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 77 76 78 8 (set (reg/f:DI 107 [ D.48798 ])
        (reg:DI 0 ax)) intcode.cpp:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 78 77 79 8 (set (reg:DI 108 [ D.48799 ])
        (mem:DI (reg/f:DI 107 [ D.48798 ]) [0 *_34+0 S8 A64])) intcode.cpp:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.48798 ])
        (nil)))
(insn 79 78 80 8 (parallel [
            (set (reg:DI 109 [ D.48799 ])
                (plus:DI (reg:DI 102 [ D.48799 ])
                    (reg:DI 108 [ D.48799 ])))
            (clobber (reg:CC 17 flags))
        ]) intcode.cpp:204 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 108 [ D.48799 ])
        (expr_list:REG_DEAD (reg:DI 102 [ D.48799 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 80 79 81 8 (set (reg:DI 110 [ D.48796 ])
        (reg:DI 109 [ D.48799 ])) intcode.cpp:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109 [ D.48799 ])
        (nil)))
(insn 81 80 82 8 (set (reg/f:DI 111 [ D.48797 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) intcode.cpp:204 89 {*movdi_internal}
     (nil))
(insn 82 81 83 8 (set (reg:DI 4 si)
        (reg:DI 110 [ D.48796 ])) intcode.cpp:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ D.48796 ])
        (nil)))
(insn 83 82 84 8 (set (reg:DI 5 di)
        (reg/f:DI 111 [ D.48797 ])) intcode.cpp:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.48797 ])
        (nil)))
(call_insn 84 83 85 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEixEm") [flags 0x3]  <function_decl 0x7fdf7c195bd0 operator[]>) [0 operator[] S1 A8])
            (const_int 0 [0]))) intcode.cpp:204 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 85 84 86 8 (set (reg/f:DI 112 [ D.48798 ])
        (reg:DI 0 ax)) intcode.cpp:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 86 85 87 8 (set (reg:DI 126)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 val+0 S8 A64])) intcode.cpp:204 89 {*movdi_internal}
     (nil))
(insn 87 86 101 8 (set (mem:DI (reg/f:DI 112 [ D.48798 ]) [0 *_40+0 S8 A64])
        (reg:DI 126)) intcode.cpp:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (expr_list:REG_DEAD (reg/f:DI 112 [ D.48798 ])
            (nil))))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 9, flags: (NEW, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 101 87 102 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 88 11 (const_int 0 [0]) intcode.cpp:204 684 {nop}
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 88 102 89 9 138 "" [2 uses])
(note 89 88 105 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 10, flags: (NEW, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;;              5 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 105 89 103 12 142 "" [1 uses])
(note 103 105 104 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 90 12 (const_int 0 [0]) intcode.cpp:206 684 {nop}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 90 104 91 10 137 "" [0 uses])
(note 91 90 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _String __gnu_cxx::__to_xstring(int (*)(_CharT*, std::size_t, const _CharT*, __va_list_tag*), std::size_t, const _CharT*, ...) [with _String = std::__cxx11::basic_string<char>; _CharT = char; std::size_t = long unsigned int] (_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z, funcdef_no=1915, decl_uid=17277, cgraph_uid=534, symbol_order=536)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 10 count 10 (    1)
Building IRA IR
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 88.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r117,l0) best AREG, allocno GENERAL_REGS
    r116: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r116,l0) best DIREG, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r114,l0) best DIREG, allocno GENERAL_REGS
    r113: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r113,l0) best SIREG, allocno GENERAL_REGS
    r112: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r112,l0) best CREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r106,l0) best SIREG, allocno GENERAL_REGS
    r105: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r105,l0) best DREG, allocno GENERAL_REGS
    r104: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r104,l0) best CREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r97,l0) best DREG, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r96,l0) best AREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best DREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a13(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a14(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a17(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a18(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a20(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a22(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a23(r96,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a25(r94,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a26(r97,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:13 INT_SSE_REGS:13 ALL_REGS:208 MEM:4
  a27(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a28(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a29(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a30(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 91(l0): point = 0
   Insn 88(l0): point = 3
   Insn 82(l0): point = 6
   Insn 81(l0): point = 8
   Insn 80(l0): point = 10
   Insn 79(l0): point = 12
   Insn 78(l0): point = 14
   Insn 77(l0): point = 16
   Insn 98(l0): point = 18
   Insn 105(l0): point = 21
   Insn 87(l0): point = 24
   Insn 86(l0): point = 26
   Insn 85(l0): point = 28
   Insn 70(l0): point = 30
   Insn 69(l0): point = 32
   Insn 68(l0): point = 34
   Insn 66(l0): point = 37
   Insn 65(l0): point = 39
   Insn 64(l0): point = 41
   Insn 63(l0): point = 43
   Insn 62(l0): point = 45
   Insn 61(l0): point = 47
   Insn 60(l0): point = 49
   Insn 59(l0): point = 51
   Insn 58(l0): point = 53
   Insn 57(l0): point = 55
   Insn 56(l0): point = 57
   Insn 55(l0): point = 59
   Insn 54(l0): point = 61
   Insn 53(l0): point = 63
   Insn 52(l0): point = 65
   Insn 51(l0): point = 67
   Insn 50(l0): point = 69
   Insn 49(l0): point = 71
   Insn 48(l0): point = 73
   Insn 47(l0): point = 75
   Insn 46(l0): point = 77
   Insn 45(l0): point = 79
   Insn 44(l0): point = 81
   Insn 43(l0): point = 83
   Insn 42(l0): point = 85
   Insn 41(l0): point = 87
   Insn 40(l0): point = 89
   Insn 39(l0): point = 91
   Insn 38(l0): point = 93
   Insn 37(l0): point = 95
   Insn 36(l0): point = 97
   Insn 34(l0): point = 99
   Insn 33(l0): point = 101
   Insn 32(l0): point = 103
   Insn 31(l0): point = 105
   Insn 30(l0): point = 107
   Insn 29(l0): point = 109
   Insn 28(l0): point = 111
   Insn 27(l0): point = 113
   Insn 101(l0): point = 116
   Insn 26(l0): point = 118
   Insn 25(l0): point = 120
   Insn 100(l0): point = 122
   Insn 24(l0): point = 124
   Insn 23(l0): point = 126
   Insn 20(l0): point = 128
   Insn 17(l0): point = 131
   Insn 16(l0): point = 133
   Insn 15(l0): point = 135
   Insn 14(l0): point = 137
   Insn 13(l0): point = 139
   Insn 12(l0): point = 141
   Insn 11(l0): point = 143
   Insn 10(l0): point = 145
   Insn 9(l0): point = 148
   Insn 8(l0): point = 150
   Insn 7(l0): point = 152
   Insn 6(l0): point = 154
   Insn 5(l0): point = 156
   Insn 4(l0): point = 158
   Insn 3(l0): point = 160
   Insn 2(l0): point = 162
 a0(r87): [9..10]
 a1(r117): [11..18]
 a2(r116): [15..16]
 a3(r115): [33..34]
 a4(r114): [40..47]
 a5(r113): [42..49]
 a6(r91): [44..53]
 a7(r112): [46..51]
 a8(r111): [54..55]
 a9(r90): [54..57]
 a10(r110): [58..59]
 a11(r109): [64..65]
 a12(r89): [68..69]
 a13(r108): [72..81]
 a14(r107): [74..83]
 a15(r106): [76..85]
 a16(r105): [78..87]
 a17(r104): [80..89]
 a18(r102): [100..101]
 a19(r101): [102..103]
 a20(r100): [104..105]
 a21(r99): [106..107]
 a22(r98): [110..111]
 a23(r96): [112..113]
 a24(r119): [114..116]
 a25(r94): [115..118]
 a26(r97): [113..114]
 a27(r93): [119..120]
 a28(r92): [119..124]
 a29(r118): [121..122]
 a30(r88): [125..126]
Compressing live ranges: from 165 to 39 - 23%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r117): [2..3]
 a2(r116): [2..3]
 a3(r115): [4..5]
 a4(r114): [6..7]
 a5(r113): [6..7]
 a6(r91): [6..7]
 a7(r112): [6..7]
 a8(r111): [8..9]
 a9(r90): [8..9]
 a10(r110): [10..11]
 a11(r109): [12..13]
 a12(r89): [14..15]
 a13(r108): [16..17]
 a14(r107): [16..17]
 a15(r106): [16..17]
 a16(r105): [16..17]
 a17(r104): [16..17]
 a18(r102): [18..19]
 a19(r101): [20..21]
 a20(r100): [22..23]
 a21(r99): [24..25]
 a22(r98): [26..27]
 a23(r96): [28..29]
 a24(r119): [30..32]
 a25(r94): [31..32]
 a26(r97): [29..30]
 a27(r93): [33..34]
 a28(r92): [33..36]
 a29(r118): [35..36]
 a30(r88): [37..38]
  pref0:a26(r97)<-hr1@1
  pref1:a23(r96)<-hr0@1
  pref2:a25(r94)<-hr0@1
  regions=1, blocks=10, points=39
    allocnos=31 (big 0), copies=0, conflicts=0, ranges=31
Disposition:
    0:r87  l0     0   30:r88  l0     0   12:r89  l0     0    9:r90  l0     1
    6:r91  l0     5   28:r92  l0     1   27:r93  l0     0   25:r94  l0     0
   23:r96  l0     0   26:r97  l0     2   22:r98  l0     0   21:r99  l0     0
   20:r100 l0     0   19:r101 l0     0   18:r102 l0     0   17:r104 l0     2
   16:r105 l0     1   15:r106 l0     4   14:r107 l0     5   13:r108 l0     0
   11:r109 l0     0   10:r110 l0     0    8:r111 l0     0    7:r112 l0     1
    5:r113 l0     4    4:r114 l0     0    3:r115 l0     0    2:r116 l0     0
    1:r117 l0     3   29:r118 l0     0   24:r119 l0     1
+++Costs: overall -14, reg -14, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_String __gnu_cxx::__to_xstring(int (*)(_CharT*, std::size_t, const _CharT*, __va_list_tag*), std::size_t, const _CharT*, ...) [with _String = std::__cxx11::basic_string<char>; _CharT = char; std::size_t = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9]
;;  ref usage 	r0={10d,5u} r1={11d,3u} r2={10d,3u} r4={10d,3u} r5={14d,7u} r6={1d,9u} r7={2d,19u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,9u} r17={25d,2u} r18={7d} r19={7d} r20={1d,47u,1e} r21={8d,1u} r22={8d,1u} r23={8d,1u} r24={8d,1u} r25={8d,1u} r26={8d,1u} r27={8d,1u} r28={8d,1u} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={8d,1u} r38={8d,1u} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,2u} r96={1d,1u} r97={1d} r98={1d,1u} r99={1d,1u} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,2u} 
;;    total ref usage 740{588d,149u,3e} in 78{71 regular + 7 call} insns.
(note 1 0 21 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags]
(note 21 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 21 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) /usr/include/c++/5/ext/string_conversions.h:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 __convf+0 S8 A64])
        (reg:DI 4 si [ __convf ])) /usr/include/c++/5/ext/string_conversions.h:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __convf ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 __n+0 S8 A64])
        (reg:DI 1 dx [ __n ])) /usr/include/c++/5/ext/string_conversions.h:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __n ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 __fmt+0 S8 A64])
        (reg:DI 2 cx [ __fmt ])) /usr/include/c++/5/ext/string_conversions.h:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ __fmt ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int 32 [0x20])) [0  S8 A8])
        (reg:DI 37 r8)) /usr/include/c++/5/ext/string_conversions.h:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (nil)))
(insn 7 6 8 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int 40 [0x28])) [0  S8 A8])
        (reg:DI 38 r9)) /usr/include/c++/5/ext/string_conversions.h:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax)
            (const_int 0 [0]))) /usr/include/c++/5/ext/string_conversions.h:83 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(jump_insn 9 8 93 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) /usr/include/c++/5/ext/string_conversions.h:83 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]
;; lr  def 	
(note 93 9 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 93 11 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 48 [0x30])) [0  S16 A128])
        (reg:V4SF 21 xmm0)) /usr/include/c++/5/ext/string_conversions.h:83 1205 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 21 xmm0)
        (nil)))
(insn 11 10 12 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 64 [0x40])) [0  S16 A128])
        (reg:V4SF 22 xmm1)) /usr/include/c++/5/ext/string_conversions.h:83 1205 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 22 xmm1)
        (nil)))
(insn 12 11 13 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 80 [0x50])) [0  S16 A128])
        (reg:V4SF 23 xmm2)) /usr/include/c++/5/ext/string_conversions.h:83 1205 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 23 xmm2)
        (nil)))
(insn 13 12 14 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 96 [0x60])) [0  S16 A128])
        (reg:V4SF 24 xmm3)) /usr/include/c++/5/ext/string_conversions.h:83 1205 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 24 xmm3)
        (nil)))
(insn 14 13 15 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 112 [0x70])) [0  S16 A128])
        (reg:V4SF 25 xmm4)) /usr/include/c++/5/ext/string_conversions.h:83 1205 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 25 xmm4)
        (nil)))
(insn 15 14 16 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 128 [0x80])) [0  S16 A128])
        (reg:V4SF 26 xmm5)) /usr/include/c++/5/ext/string_conversions.h:83 1205 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 26 xmm5)
        (nil)))
(insn 16 15 17 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 144 [0x90])) [0  S16 A128])
        (reg:V4SF 27 xmm6)) /usr/include/c++/5/ext/string_conversions.h:83 1205 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 27 xmm6)
        (nil)))
(insn 17 16 18 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 160 [0xa0])) [0  S16 A128])
        (reg:V4SF 28 xmm7)) /usr/include/c++/5/ext/string_conversions.h:83 1205 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 28 xmm7)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 93 94 96 97 98 99 100 101 102 104 105 106 107 108 109 110 111 112 113 114 118 119
(code_label 18 17 94 4 144 "" [1 uses])
(note 94 18 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 19 94 20 4 NOTE_INSN_FUNCTION_BEG)
(insn 20 19 23 4 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48805+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:83 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 20 24 4 (set (reg:DI 88 [ D.48801 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 __n+0 S8 A64])) /usr/include/c++/5/ext/string_conversions.h:89 89 {*movdi_internal}
     (nil))
(insn 24 23 100 4 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg:DI 88 [ D.48801 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:90 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.48801 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 24 25 4 (set (reg:DI 118)
        (const_int 16 [0x10])) /usr/include/c++/5/ext/string_conversions.h:90 89 {*movdi_internal}
     (nil))
(insn 25 100 26 4 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg:DI 118)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:90 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 118)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 101 4 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg:DI 92)
                    (reg:DI 93)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:90 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_DEAD (reg:DI 92)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 101 26 27 4 (set (reg:DI 119)
        (const_int 16 [0x10])) /usr/include/c++/5/ext/string_conversions.h:90 89 {*movdi_internal}
     (nil))
(insn 27 101 28 4 (parallel [
            (set (reg:DI 96)
                (udiv:DI (reg:DI 94)
                    (reg:DI 119)))
            (set (reg:DI 97)
                (umod:DI (reg:DI 94)
                    (reg:DI 119)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:90 351 {*udivmoddi4}
     (expr_list:REG_DEAD (reg:DI 119)
        (expr_list:REG_DEAD (reg:DI 94)
            (expr_list:REG_UNUSED (reg:DI 97)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 98)
                (mult:DI (reg:DI 96)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:90 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 4 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 98)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:90 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 4 (set (reg:DI 99)
        (reg/f:DI 7 sp)) /usr/include/c++/5/ext/string_conversions.h:90 89 {*movdi_internal}
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg:DI 99)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:90 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 101)
                (lshiftrt:DI (reg:DI 100)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:90 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:DI (reg:DI 100)
                    (const_int 16 [0x10]))
                (nil)))))
(insn 33 32 34 4 (parallel [
            (set (reg/f:DI 102)
                (ashift:DI (reg:DI 101)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:90 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 101)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 36 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __s+0 S8 A64])
        (reg/f:DI 102)) /usr/include/c++/5/ext/string_conversions.h:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(insn 36 34 37 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(struct [1] *)&__args].gp_offset+0 S4 A64])
        (const_int 32 [0x20])) /usr/include/c++/5/ext/string_conversions.h:93 90 {*movsi_internal}
     (nil))
(insn 37 36 38 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 MEM[(struct [1] *)&__args].fp_offset+0 S4 A32])
        (const_int 48 [0x30])) /usr/include/c++/5/ext/string_conversions.h:93 90 {*movsi_internal}
     (nil))
(insn 38 37 39 4 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 MEM[(struct [1] *)&__args].overflow_arg_area+0 S8 A64])
        (reg/f:DI 16 argp)) /usr/include/c++/5/ext/string_conversions.h:93 89 {*movdi_internal}
     (nil))
(insn 39 38 40 4 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 MEM[(struct [1] *)&__args].reg_save_area+0 S8 A64])
        (reg/f:DI 20 frame)) /usr/include/c++/5/ext/string_conversions.h:93 89 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:95 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 41 40 42 4 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 __fmt+0 S8 A64])) /usr/include/c++/5/ext/string_conversions.h:95 89 {*movdi_internal}
     (nil))
(insn 42 41 43 4 (set (reg:DI 106)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 __n+0 S8 A64])) /usr/include/c++/5/ext/string_conversions.h:95 89 {*movdi_internal}
     (nil))
(insn 43 42 44 4 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __s+0 S8 A64])) /usr/include/c++/5/ext/string_conversions.h:95 89 {*movdi_internal}
     (nil))
(insn 44 43 45 4 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 __convf+0 S8 A64])) /usr/include/c++/5/ext/string_conversions.h:95 89 {*movdi_internal}
     (nil))
(insn 45 44 46 4 (set (reg:DI 2 cx)
        (reg:DI 104)) /usr/include/c++/5/ext/string_conversions.h:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(insn 46 45 47 4 (set (reg:DI 1 dx)
        (reg:DI 105)) /usr/include/c++/5/ext/string_conversions.h:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 47 46 48 4 (set (reg:DI 4 si)
        (reg:DI 106)) /usr/include/c++/5/ext/string_conversions.h:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(insn 48 47 49 4 (set (reg:DI 5 di)
        (reg:DI 107)) /usr/include/c++/5/ext/string_conversions.h:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(call_insn 49 48 50 4 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 108) [0 *__convf_8(D) S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/ext/string_conversions.h:95 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 50 49 51 4 (set (reg:SI 89 [ D.48802 ])
        (reg:SI 0 ax)) /usr/include/c++/5/ext/string_conversions.h:95 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 51 50 52 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 __len+0 S4 A32])
        (reg:SI 89 [ D.48802 ])) /usr/include/c++/5/ext/string_conversions.h:95 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ D.48802 ])
        (nil)))
(insn 52 51 53 4 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -45 [0xffffffffffffffd3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:99 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 53 52 54 4 (set (reg:DI 5 di)
        (reg:DI 109)) /usr/include/c++/5/ext/string_conversions.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(call_insn 54 53 55 4 (call (mem:QI (symbol_ref:DI ("_ZNSaIcEC1Ev") [flags 0x41]  <function_decl 0x7fdf7d57a870 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/string_conversions.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 4 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 __len+0 S4 A32])) /usr/include/c++/5/ext/string_conversions.h:99 90 {*movsi_internal}
     (nil))
(insn 56 55 57 4 (set (reg:DI 90 [ D.48803 ])
        (sign_extend:DI (reg:SI 110))) /usr/include/c++/5/ext/string_conversions.h:99 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(insn 57 56 58 4 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __s+0 S8 A64])) /usr/include/c++/5/ext/string_conversions.h:99 89 {*movdi_internal}
     (nil))
(insn 58 57 59 4 (parallel [
            (set (reg/f:DI 91 [ D.48804 ])
                (plus:DI (reg:DI 90 [ D.48803 ])
                    (reg/f:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:99 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (expr_list:REG_DEAD (reg:DI 90 [ D.48803 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 __s+0 S8 A64])
                        (reg:DI 90 [ D.48803 ]))
                    (nil))))))
(insn 59 58 60 4 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -45 [0xffffffffffffffd3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:99 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 60 59 61 4 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __s+0 S8 A64])) /usr/include/c++/5/ext/string_conversions.h:99 89 {*movdi_internal}
     (nil))
(insn 61 60 62 4 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/ext/string_conversions.h:99 89 {*movdi_internal}
     (nil))
(insn 62 61 63 4 (set (reg:DI 2 cx)
        (reg:DI 112)) /usr/include/c++/5/ext/string_conversions.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(insn 63 62 64 4 (set (reg:DI 1 dx)
        (reg/f:DI 91 [ D.48804 ])) /usr/include/c++/5/ext/string_conversions.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48804 ])
        (nil)))
(insn 64 63 65 4 (set (reg:DI 4 si)
        (reg:DI 113)) /usr/include/c++/5/ext/string_conversions.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(insn 65 64 66 4 (set (reg:DI 5 di)
        (reg:DI 114)) /usr/include/c++/5/ext/string_conversions.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(call_insn 66 65 67 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_") [flags 0x3]  <function_decl 0x7fdf7bf26798 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/string_conversions.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       7 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115
(note 67 66 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 5 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -45 [0xffffffffffffffd3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:99 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 69 68 70 5 (set (reg:DI 5 di)
        (reg:DI 115)) /usr/include/c++/5/ext/string_conversions.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(call_insn 70 69 85 5 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x7fdf7d57aa20 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/string_conversions.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 85 70 86 5 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/ext/string_conversions.h:100 89 {*movdi_internal}
     (nil))
(insn 86 85 87 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48805+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/ext/string_conversions.h:100 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 87 86 103 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) /usr/include/c++/5/ext/string_conversions.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 90)
;;  succ:       9
;;              6 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 103 87 105 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 105 103 106 6 (set (pc)
        (label_ref 104)) 654 {jump}
     (nil)
 -> 104)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 106 105 97)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 7 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 116 117
(code_label/s 97 106 99 7 148 "" [1 uses])
(note 99 97 98 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 98 99 77 7 (set (reg:DI 117)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 77 98 78 7 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -45 [0xffffffffffffffd3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/string_conversions.h:99 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 78 77 79 7 (set (reg:DI 5 di)
        (reg:DI 116)) /usr/include/c++/5/ext/string_conversions.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(call_insn 79 78 80 7 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x7fdf7d57aa20 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/string_conversions.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 80 79 81 7 (set (reg/f:DI 87 [ D.48800 ])
        (reg:DI 117)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(insn 81 80 82 7 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48800 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48800 ])
        (nil)))
(call_insn 82 81 83 7 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 83 82 104)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 104 83 95 8 149 "" [1 uses])
(note 95 104 88 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 88 95 89 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/string_conversions.h:100 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 89 88 90)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 90 89 96 9 147 "" [1 uses])
(note 96 90 91 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 91 96 0 9 (use (reg/i:DI 0 ax)) /usr/include/c++/5/ext/string_conversions.h:100 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider() (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev, funcdef_no=1918, decl_uid=17288, cgraph_uid=536, symbol_order=538)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 11(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r87): [5..6]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 106{93d,13u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/basic_string.h:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:106 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 87)) /usr/include/c++/5/bits/basic_string.h:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 8 7 11 2 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED2Ev") [flags 0x41]  <function_decl 0x7fdf7d57aaf8 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:106 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 8 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/basic_string.h:106 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = std::__cxx11::basic_string<char>&; typename std::remove_reference< <template-parameter-1-1> >::type = std::__cxx11::basic_string<char>] (_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_, funcdef_no=1959, decl_uid=44473, cgraph_uid=577, symbol_order=579)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = std::__cxx11::basic_string<char>&; typename std::remove_reference< <template-parameter-1-1> >::type = std::__cxx11::basic_string<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])
        (reg:DI 5 di [ __t ])) /usr/include/c++/5/bits/move.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __t ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ D.48810 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48810 ])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48810 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/move.h:102 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_, funcdef_no=1958, decl_uid=24195, cgraph_uid=578, symbol_order=580)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 10 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 72.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r102,l0) best SIREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r100,l0) best DREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a2(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a6(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a9(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a10(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a12(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a15(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a16(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a17(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 79(l0): point = 0
   Insn 78(l0): point = 2
   Insn 72(l0): point = 4
   Insn 71(l0): point = 6
   Insn 70(l0): point = 8
   Insn 69(l0): point = 10
   Insn 66(l0): point = 13
   Insn 65(l0): point = 15
   Insn 64(l0): point = 17
   Insn 63(l0): point = 19
   Insn 62(l0): point = 21
   Insn 61(l0): point = 23
   Insn 60(l0): point = 25
   Insn 59(l0): point = 27
   Insn 58(l0): point = 29
   Insn 83(l0): point = 32
   Insn 53(l0): point = 34
   Insn 52(l0): point = 36
   Insn 51(l0): point = 38
   Insn 50(l0): point = 40
   Insn 49(l0): point = 42
   Insn 48(l0): point = 44
   Insn 47(l0): point = 46
   Insn 46(l0): point = 48
   Insn 45(l0): point = 50
   Insn 44(l0): point = 52
   Insn 42(l0): point = 55
   Insn 41(l0): point = 57
   Insn 40(l0): point = 59
   Insn 37(l0): point = 62
   Insn 81(l0): point = 65
   Insn 32(l0): point = 67
   Insn 30(l0): point = 70
   Insn 29(l0): point = 72
   Insn 28(l0): point = 74
   Insn 27(l0): point = 76
   Insn 26(l0): point = 78
   Insn 25(l0): point = 80
   Insn 23(l0): point = 83
   Insn 22(l0): point = 85
   Insn 21(l0): point = 87
   Insn 20(l0): point = 89
   Insn 19(l0): point = 91
   Insn 18(l0): point = 93
   Insn 17(l0): point = 95
   Insn 16(l0): point = 97
   Insn 15(l0): point = 99
   Insn 14(l0): point = 101
   Insn 13(l0): point = 103
   Insn 12(l0): point = 105
   Insn 11(l0): point = 107
   Insn 10(l0): point = 109
   Insn 9(l0): point = 111
   Insn 8(l0): point = 113
   Insn 4(l0): point = 115
   Insn 3(l0): point = 117
   Insn 2(l0): point = 119
 a0(r104): [7..10]
 a1(r88): [32..34] [9..13]
 a2(r94): [18..19]
 a3(r103): [24..27]
 a4(r102): [26..29]
 a5(r93): [39..40]
 a6(r101): [45..50]
 a7(r100): [49..52]
 a8(r87): [65..67] [60..62]
 a9(r92): [73..74]
 a10(r99): [79..80]
 a11(r91): [86..87]
 a12(r98): [92..93]
 a13(r97): [96..97]
 a14(r90): [98..99]
 a15(r89): [98..107]
 a16(r96): [104..105]
 a17(r95): [112..113]
Compressing live ranges: from 122 to 32 - 26%
Ranges after the compression:
 a0(r104): [0..1]
 a1(r88): [6..7] [0..1]
 a2(r94): [2..3]
 a3(r103): [4..5]
 a4(r102): [4..5]
 a5(r93): [8..9]
 a6(r101): [10..11]
 a7(r100): [10..11]
 a8(r87): [12..15]
 a9(r92): [16..17]
 a10(r99): [18..19]
 a11(r91): [20..21]
 a12(r98): [22..23]
 a13(r97): [24..25]
 a14(r90): [26..27]
 a15(r89): [26..29]
 a16(r96): [28..29]
 a17(r95): [30..31]
  pref0:a1(r88)<-hr0@1
  regions=1, blocks=10, points=32
    allocnos=18 (big 0), copies=0, conflicts=0, ranges=19
Disposition:
    8:r87  l0     0    1:r88  l0     1   15:r89  l0     3   14:r90  l0     0
   11:r91  l0     0    9:r92  l0     0    5:r93  l0     0    2:r94  l0     0
   17:r95  l0     0   16:r96  l0     0   13:r97  l0     0   12:r98  l0     0
   10:r99  l0     0    7:r100 l0     1    6:r101 l0     0    4:r102 l0     1
    3:r103 l0     0    0:r104 l0     0
+++Costs: overall -17, reg -17, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={11d,10u} r1={11d,2u} r2={10d} r4={13d,4u} r5={19d,10u} r6={1d,9u} r7={1d,18u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r16={1d,8u} r17={13d,3u} r18={9d} r19={9d} r20={1d,27u} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={10d} r38={10d} r39={9d} r40={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r87={2d,1u} r88={2d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} 
;;    total ref usage 814{705d,109u,0e} in 57{48 regular + 9 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 95 96 97 98
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) /usr/include/c++/5/bits/basic_string.h:4860 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __lhs+0 S8 A64])
        (reg:DI 4 si [ __lhs ])) /usr/include/c++/5/bits/basic_string.h:4860 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __lhs ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __rhs+0 S8 A64])
        (reg:DI 1 dx [ __rhs ])) /usr/include/c++/5/bits/basic_string.h:4860 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __rhs ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __lhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4863 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 95)) /usr/include/c++/5/bits/basic_string.h:4863 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv") [flags 0x41]  <function_decl 0x7fdf7d06fca8 size>) [0 size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4863 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 89 [ D.48813 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4863 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __rhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4863 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 96)) /usr/include/c++/5/bits/basic_string.h:4863 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv") [flags 0x41]  <function_decl 0x7fdf7d06fca8 size>) [0 size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4863 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 90 [ D.48813 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4863 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg:DI 89 [ D.48813 ])
                    (reg:DI 90 [ D.48813 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:4863 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.48813 ])
        (expr_list:REG_DEAD (reg:DI 89 [ D.48813 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 17 16 18 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __size+0 S8 A64])
        (reg:DI 97)) /usr/include/c++/5/bits/basic_string.h:4863 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __lhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4864 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 98)) /usr/include/c++/5/bits/basic_string.h:4864 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv") [flags 0x41]  <function_decl 0x7fdf7d077288 capacity>) [0 capacity S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4864 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 91 [ D.48813 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4864 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 22 21 23 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 91 [ D.48813 ])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __size+0 S8 A64]))) /usr/include/c++/5/bits/basic_string.h:4865 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.48813 ])
        (nil)))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) /usr/include/c++/5/bits/basic_string.h:4865 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 35)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 99
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __rhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4865 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 5 di)
        (reg:DI 99)) /usr/include/c++/5/bits/basic_string.h:4865 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 27 26 28 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv") [flags 0x41]  <function_decl 0x7fdf7d077288 capacity>) [0 capacity S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4865 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 3 (set (reg:DI 92 [ D.48813 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4865 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 29 28 30 3 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 92 [ D.48813 ])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __size+0 S8 A64]))) /usr/include/c++/5/bits/basic_string.h:4865 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.48813 ])
        (nil)))
(jump_insn 30 29 31 3 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) /usr/include/c++/5/bits/basic_string.h:4865 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 35)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 81 4 (set (reg:QI 87 [ D.48811 ])
        (const_int 1 [0x1])) /usr/include/c++/5/bits/basic_string.h:4865 93 {*movqi_internal}
     (nil))
(jump_insn 81 32 82 4 (set (pc)
        (label_ref 38)) /usr/include/c++/5/bits/basic_string.h:4865 654 {jump}
     (nil)
 -> 38)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 82 81 35)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 35 82 36 5 154 "" [2 uses])
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg:QI 87 [ D.48811 ])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:4865 93 {*movqi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags]
(code_label 38 37 39 6 155 "" [1 uses])
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -9 [0xfffffffffffffff7])) [0 __cond+0 S1 A8])
        (reg:QI 87 [ D.48811 ])) /usr/include/c++/5/bits/basic_string.h:4865 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ D.48811 ])
        (nil)))
(insn 41 40 42 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -9 [0xfffffffffffffff7])) [0 __cond+0 S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4867 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 42 41 43 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) /usr/include/c++/5/bits/basic_string.h:4867 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 56)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 93 100 101
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __lhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4866 89 {*movdi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __rhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4866 89 {*movdi_internal}
     (nil))
(insn 46 45 47 7 (set (reg:DI 1 dx)
        (reg:DI 100)) /usr/include/c++/5/bits/basic_string.h:4866 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(insn 47 46 48 7 (set (reg:DI 4 si)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:4866 89 {*movdi_internal}
     (nil))
(insn 48 47 49 7 (set (reg:DI 5 di)
        (reg:DI 101)) /usr/include/c++/5/bits/basic_string.h:4866 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 49 48 50 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmRKS4_") [flags 0x41]  <function_decl 0x7fdf7d0881b0 insert>) [0 insert S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4866 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 50 49 51 7 (set (reg/f:DI 93 [ D.48814 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4866 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 51 50 52 7 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.48814 ])) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.48814 ])
        (nil)))
(call_insn 52 51 53 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_") [flags 0x3]  <function_decl 0x7fdf7bf886c0 move>) [0 move S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4867 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 53 52 83 7 (set (reg/f:DI 88 [ D.48812 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 83 53 84 7 (set (pc)
        (label_ref 67)) 654 {jump}
     (nil)
 -> 67)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

(barrier 84 83 56)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 94 102 103
(code_label 56 84 57 8 156 "" [1 uses])
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __rhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (nil))
(insn 59 58 60 8 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __lhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (nil))
(insn 60 59 61 8 (set (reg:DI 4 si)
        (reg:DI 102)) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(insn 61 60 62 8 (set (reg:DI 5 di)
        (reg:DI 103)) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(call_insn 62 61 63 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_") [flags 0x41]  <function_decl 0x7fdf7d07e0d8 append>) [0 append S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4867 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 63 62 64 8 (set (reg/f:DI 94 [ D.48814 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 64 63 65 8 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.48814 ])) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.48814 ])
        (nil)))
(call_insn 65 64 66 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_") [flags 0x3]  <function_decl 0x7fdf7bf886c0 move>) [0 move S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4867 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 66 65 67 8 (set (reg/f:DI 88 [ D.48812 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 104
(code_label 67 66 68 9 157 "" [1 uses])
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 9 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (nil))
(insn 70 69 71 9 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.48812 ])) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48812 ])
        (nil)))
(insn 71 70 72 9 (set (reg:DI 5 di)
        (reg:DI 104)) /usr/include/c++/5/bits/basic_string.h:4867 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 72 71 78 9 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_") [flags 0x41]  <function_decl 0x7fdf7d0b0360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:4867 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 78 72 79 9 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4868 89 {*movdi_internal}
     (nil))
(insn 79 78 0 9 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4868 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_, funcdef_no=1960, decl_uid=24215, cgraph_uid=579, symbol_order=581)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 28(l0): point = 0
   Insn 27(l0): point = 2
   Insn 21(l0): point = 4
   Insn 20(l0): point = 6
   Insn 19(l0): point = 8
   Insn 18(l0): point = 10
   Insn 17(l0): point = 12
   Insn 16(l0): point = 14
   Insn 15(l0): point = 16
   Insn 14(l0): point = 18
   Insn 13(l0): point = 20
   Insn 12(l0): point = 22
   Insn 11(l0): point = 24
   Insn 10(l0): point = 26
   Insn 9(l0): point = 28
   Insn 8(l0): point = 30
   Insn 4(l0): point = 32
   Insn 3(l0): point = 34
   Insn 2(l0): point = 36
 a0(r91): [7..10]
 a1(r88): [9..12]
 a2(r87): [17..18]
 a3(r90): [23..28]
 a4(r89): [27..30]
Compressing live ranges: from 39 to 6 - 15%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r88): [0..1]
 a2(r87): [2..3]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    2:r87  l0     0    1:r88  l0     1    4:r89  l0     1    3:r90  l0     0
    0:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={5d,4u} r1={5d,2u} r2={4d} r4={6d,3u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,9u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 282{247d,35u,0e} in 19{16 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) /usr/include/c++/5/bits/basic_string.h:4872 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __lhs+0 S8 A64])
        (reg:DI 4 si [ __lhs ])) /usr/include/c++/5/bits/basic_string.h:4872 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __lhs ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __rhs+0 S8 A64])
        (reg:DI 1 dx [ __rhs ])) /usr/include/c++/5/bits/basic_string.h:4872 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __rhs ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __lhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __rhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (reg:DI 89)) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc") [flags 0x41]  <function_decl 0x7fdf7d088438 insert>) [0 insert S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4874 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 14 13 15 2 (set (reg/f:DI 87 [ D.48816 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48816 ])) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48816 ])
        (nil)))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_") [flags 0x3]  <function_decl 0x7fdf7bf886c0 move>) [0 move S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4874 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 88 [ D.48817 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.48817 ])) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48817 ])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 21 20 27 2 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_") [flags 0x41]  <function_decl 0x7fdf7d0b0360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:4874 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 27 21 28 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4874 89 {*movdi_internal}
     (nil))
(insn 28 27 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4874 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::vector() [with _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNSt6vectorIxSaIxEEC2Ev, funcdef_no=1986, decl_uid=43071, cgraph_uid=605, symbol_order=607)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 11(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r87): [5..6]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::vector() [with _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 106{93d,13u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:253 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.48819 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:257 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48819 ])) /usr/include/c++/5/bits/stl_vector.h:257 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48819 ])
        (nil)))
(call_insn 8 7 11 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEEC2Ev") [flags 0x3]  <function_decl 0x7fdf7c17b0d8 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:257 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 8 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:257 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::~vector() [with _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNSt6vectorIxSaIxEED2Ev, funcdef_no=1989, decl_uid=43076, cgraph_uid=608, symbol_order=610)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best AD_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 23(l0): point = 0
   Insn 20(l0): point = 2
   Insn 19(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 6(l0): point = 30
   Insn 2(l0): point = 32
 a0(r91): [5..6]
 a1(r90): [11..16]
 a2(r89): [13..20]
 a3(r88): [15..24]
 a4(r93): [17..18]
 a5(r92): [21..22]
 a6(r87): [29..30]
Compressing live ranges: from 35 to 10 - 28%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r89): [2..5]
 a3(r88): [2..7]
 a4(r93): [4..5]
 a5(r92): [6..7]
 a6(r87): [8..9]
  regions=1, blocks=3, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    6:r87  l0     0    3:r88  l0     1    2:r89  l0     2    1:r90  l0     0
    0:r91  l0     0    5:r92  l0     0    4:r93  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::~vector() [with _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={4d,1u} r1={5d,1u} r2={4d} r4={5d,1u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,7u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 276{247d,29u,0e} in 17{14 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:423 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.48820 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48820 ])) /usr/include/c++/5/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48820 ])
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149af8 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:425 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 88 [ D.48821 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:424 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 89 [ D.48822 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [0 this_1(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:424 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 90 [ D.48822 ])
        (mem/f/j:DI (reg/f:DI 93) [0 this_1(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg/f:DI 88 [ D.48821 ])) /usr/include/c++/5/bits/stl_vector.h:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48821 ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.48822 ])) /usr/include/c++/5/bits/stl_vector.h:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48822 ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.48822 ])) /usr/include/c++/5/bits/stl_vector.h:424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48822 ])
        (nil)))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E") [flags 0x3]  <function_decl 0x7fdf7bbb8e58 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:424 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 18 17 19 2 (set (reg/f:DI 91 [ D.48820 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:425 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48820 ])) /usr/include/c++/5/bits/stl_vector.h:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48820 ])
        (nil)))
(call_insn 20 19 23 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEED2Ev") [flags 0x3]  <function_decl 0x7fdf7c17b288 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:425 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 20 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:425 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = std::vector<long long int>&; typename std::remove_reference< <template-parameter-1-1> >::type = std::vector<long long int>] (_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_, funcdef_no=1992, decl_uid=44651, cgraph_uid=610, symbol_order=612)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = std::vector<long long int>&; typename std::remove_reference< <template-parameter-1-1> >::type = std::vector<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])
        (reg:DI 5 di [ __t ])) /usr/include/c++/5/bits/move.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __t ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ D.48823 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48823 ])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48823 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/move.h:102 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp, _Alloc>&&) [with _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNSt6vectorIxSaIxEEaSEOS1_, funcdef_no=1991, decl_uid=42567, cgraph_uid=611, symbol_order=613)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 30.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 33(l0): point = 0
   Insn 30(l0): point = 3
   Insn 29(l0): point = 6
   Insn 28(l0): point = 8
   Insn 27(l0): point = 10
   Insn 23(l0): point = 12
   Insn 20(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 14(l0): point = 26
   Insn 13(l0): point = 28
   Insn 12(l0): point = 30
   Insn 11(l0): point = 32
   Insn 10(l0): point = 34
   Insn 9(l0): point = 36
   Insn 8(l0): point = 38
   Insn 5(l0): point = 40
   Insn 3(l0): point = 42
   Insn 2(l0): point = 44
 a0(r90): [11..12]
 a1(r88): [13..14]
 a2(r92): [21..28]
 a3(r87): [23..30]
 a4(r89): [25..46]
 a5(r91): [35..36]
Compressing live ranges: from 47 to 8 - 17%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r88): [2..3]
 a2(r92): [4..5]
 a3(r87): [4..5]
 a4(r89): [4..7]
 a5(r91): [6..7]
  regions=1, blocks=5, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r87  l0     1    1:r88  l0     0    4:r89  l0     3    0:r90  l0     0
    5:r91  l0     0    2:r92  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp, _Alloc>&&) [with _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r4={5d,2u} r5={6d,3u} r6={1d,4u} r7={4d,13u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={7d,1u} r18={3d} r19={3d} r20={1d,12u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 298{251d,47u,0e} in 22{19 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 90 91 92
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:448 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __x+0 S8 A64])
        (reg:DI 4 si [ __x ])) /usr/include/c++/5/bits/stl_vector.h:448 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __x ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48826+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:448 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -9 [0xfffffffffffffff7])) [0 __move_storage+0 S1 A8])
        (const_int 1 [0x1])) /usr/include/c++/5/bits/stl_vector.h:452 93 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:453 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_vector.h:453 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_") [flags 0x3]  <function_decl 0x7fdf7bbbbaf8 move>) [0 move S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:453 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 87 [ D.48824 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:453 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:453 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:453 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 15 14 16 2 (set (mem:QI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S1 A8])
        (reg:QI 89 [ D.47447 ])) /usr/include/c++/5/bits/stl_vector.h:453 67 {*pushqi2_rex64}
     (expr_list:REG_DEAD (reg:QI 89 [ D.47447 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.48824 ])) /usr/include/c++/5/bits/stl_vector.h:453 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48824 ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_vector.h:453 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE14_M_move_assignEOS1_St17integral_constantIbLb1EE") [flags 0x3]  <function_decl 0x7fdf7bdb7798 _M_move_assign>) [0 _M_move_assign S1 A8])
        (const_int 16 [0x10])) /usr/include/c++/5/bits/stl_vector.h:453 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:453 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 20 19 23 2 (set (reg/f:DI 88 [ D.48825 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:455 89 {*movdi_internal}
     (nil))
(insn 23 20 27 2 (set (reg:DI 90 [ <retval> ])
        (reg/f:DI 88 [ D.48825 ])) /usr/include/c++/5/bits/stl_vector.h:455 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48825 ])
        (nil)))
(insn 27 23 28 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:456 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48826+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_vector.h:456 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 29 28 35 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:456 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 35 29 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 30 35 31 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:456 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 31 30 32)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 32 31 36 4 167 "" [1 uses])
(note 36 32 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 36 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:456 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::value_type = long long int] (_ZNSt6vectorIxSaIxEE9push_backERKx, funcdef_no=2006, decl_uid=42668, cgraph_uid=625, symbol_order=627)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 35.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r96,l0) best DREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a10(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a13(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 43(l0): point = 1
   Insn 35(l0): point = 4
   Insn 34(l0): point = 6
   Insn 33(l0): point = 8
   Insn 32(l0): point = 10
   Insn 31(l0): point = 12
   Insn 40(l0): point = 15
   Insn 26(l0): point = 17
   Insn 25(l0): point = 19
   Insn 24(l0): point = 21
   Insn 23(l0): point = 23
   Insn 22(l0): point = 25
   Insn 21(l0): point = 27
   Insn 20(l0): point = 29
   Insn 19(l0): point = 31
   Insn 18(l0): point = 33
   Insn 17(l0): point = 35
   Insn 16(l0): point = 37
   Insn 15(l0): point = 39
   Insn 14(l0): point = 41
   Insn 12(l0): point = 44
   Insn 11(l0): point = 46
   Insn 10(l0): point = 48
   Insn 9(l0): point = 50
   Insn 8(l0): point = 52
   Insn 7(l0): point = 54
   Insn 3(l0): point = 56
   Insn 2(l0): point = 58
 a0(r100): [7..10]
 a1(r99): [9..12]
 a2(r98): [18..19]
 a3(r92): [18..21]
 a4(r91): [22..23]
 a5(r97): [24..25]
 a6(r90): [30..37]
 a7(r89): [32..39]
 a8(r96): [34..35]
 a9(r95): [40..41]
 a10(r88): [47..48]
 a11(r87): [47..52]
 a12(r94): [49..50]
 a13(r93): [53..54]
Compressing live ranges: from 61 to 18 - 29%
Ranges after the compression:
 a0(r100): [0..1]
 a1(r99): [0..1]
 a2(r98): [2..3]
 a3(r92): [2..3]
 a4(r91): [4..5]
 a5(r97): [6..7]
 a6(r90): [8..9]
 a7(r89): [8..9]
 a8(r96): [8..9]
 a9(r95): [10..11]
 a10(r88): [12..13]
 a11(r87): [12..15]
 a12(r94): [14..15]
 a13(r93): [16..17]
  regions=1, blocks=7, points=18
    allocnos=14 (big 0), copies=0, conflicts=0, ranges=14
Disposition:
   11:r87  l0     1   10:r88  l0     0    7:r89  l0     2    6:r90  l0     0
    4:r91  l0     0    3:r92  l0     1   13:r93  l0     0   12:r94  l0     0
    9:r95  l0     0    8:r96  l0     1    5:r97  l0     0    2:r98  l0     0
    1:r99  l0     1    0:r100 l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::value_type = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={5d,3u} r5={5d,3u} r6={1d,6u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,5u} r17={4d,1u} r18={2d} r19={2d} r20={1d,17u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 242{184d,58u,0e} in 28{26 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 93 94
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:913 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])
        (reg:DI 4 si [ __x ])) /usr/include/c++/5/bits/stl_vector.h:913 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __x ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:915 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ D.48827 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 93)
                (const_int 8 [0x8])) [0 this_3(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:915 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:915 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 88 [ D.48827 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [0 this_3(D)->D.43079._M_impl._M_end_of_storage+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:915 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.48827 ])
            (reg/f:DI 88 [ D.48827 ]))) /usr/include/c++/5/bits/stl_vector.h:915 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48827 ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.48827 ])
            (nil))))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:915 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 29)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 95 96 97 98
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:917 89 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg/f:DI 89 [ D.48827 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 95)
                (const_int 8 [0x8])) [0 this_3(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:917 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 16 15 17 3 (set (reg/f:DI 90 [ D.48828 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:917 89 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:917 89 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 1 dx)
        (reg:DI 96)) /usr/include/c++/5/bits/stl_vector.h:917 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 19 18 20 3 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.48827 ])) /usr/include/c++/5/bits/stl_vector.h:917 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48827 ])
        (nil)))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.48828 ])) /usr/include/c++/5/bits/stl_vector.h:917 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48828 ])
        (nil)))
(call_insn 21 20 22 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIxEE9constructIxJRKxEEEvRS0_PT_DpOT0_") [flags 0x3]  <function_decl 0x7fdf7bbd4870 construct>) [0 construct S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:917 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 22 21 23 3 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:919 89 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 91 [ D.48827 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 97)
                (const_int 8 [0x8])) [0 this_3(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:919 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 24 23 25 3 (parallel [
            (set (reg/f:DI 92 [ D.48827 ])
                (plus:DI (reg/f:DI 91 [ D.48827 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:919 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48827 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 3 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:919 89 {*movdi_internal}
     (nil))
(insn 26 25 40 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 98)
                (const_int 8 [0x8])) [0 this_3(D)->D.43079._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 92 [ D.48827 ])) /usr/include/c++/5/bits/stl_vector.h:919 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (expr_list:REG_DEAD (reg/f:DI 92 [ D.48827 ])
            (nil))))
(jump_insn 40 26 41 3 (set (pc)
        (label_ref:DI 44)) /usr/include/c++/5/bits/stl_vector.h:927 654 {jump}
     (nil)
 -> 44)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 41 40 29)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 100
(code_label 29 41 30 4 169 "" [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:923 89 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:923 89 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 4 si)
        (reg:DI 99)) /usr/include/c++/5/bits/stl_vector.h:923 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg:DI 100)) /usr/include/c++/5/bits/stl_vector.h:923 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 35 34 44 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJRKxEEEvDpOT_") [flags 0x3]  <function_decl 0x7fdf7bbdf360 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:923 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 44 35 42 6 171 "" [1 uses])
(note 42 44 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 38 6 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:927 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 38 43 39 5 168 "" [0 uses])
(note 39 38 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_, funcdef_no=2016, decl_uid=43326, cgraph_uid=635, symbol_order=637)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 27(l0): point = 0
   Insn 26(l0): point = 2
   Insn 20(l0): point = 4
   Insn 19(l0): point = 6
   Insn 18(l0): point = 8
   Insn 17(l0): point = 10
   Insn 16(l0): point = 12
   Insn 15(l0): point = 14
   Insn 14(l0): point = 16
   Insn 13(l0): point = 18
   Insn 12(l0): point = 20
   Insn 11(l0): point = 22
   Insn 10(l0): point = 24
   Insn 9(l0): point = 26
   Insn 8(l0): point = 28
   Insn 4(l0): point = 30
   Insn 3(l0): point = 32
   Insn 2(l0): point = 34
 a0(r91): [7..10]
 a1(r88): [9..12]
 a2(r87): [17..18]
 a3(r90): [23..26]
 a4(r89): [25..28]
Compressing live ranges: from 37 to 6 - 16%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r88): [0..1]
 a2(r87): [2..3]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    2:r87  l0     0    1:r88  l0     1    4:r89  l0     1    3:r90  l0     0
    0:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={4d} r4={6d,3u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,9u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 280{246d,34u,0e} in 18{15 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) /usr/include/c++/5/bits/basic_string.h:4884 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __lhs+0 S8 A64])
        (reg:DI 4 si [ __lhs ])) /usr/include/c++/5/bits/basic_string.h:4884 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __lhs ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __rhs+0 S8 A64])
        (reg:DI 1 dx [ __rhs ])) /usr/include/c++/5/bits/basic_string.h:4884 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __rhs ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __rhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4886 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __lhs+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4886 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 89)) /usr/include/c++/5/bits/basic_string.h:4886 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/include/c++/5/bits/basic_string.h:4886 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc") [flags 0x41]  <function_decl 0x7fdf7d07e360 append>) [0 append S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4886 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg/f:DI 87 [ D.48829 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4886 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48829 ])) /usr/include/c++/5/bits/basic_string.h:4886 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48829 ])
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_") [flags 0x3]  <function_decl 0x7fdf7bf886c0 move>) [0 move S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:4886 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 88 [ D.48830 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4886 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4886 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.48830 ])) /usr/include/c++/5/bits/basic_string.h:4886 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48830 ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/basic_string.h:4886 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 20 19 26 2 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_") [flags 0x41]  <function_decl 0x7fdf7d0b0360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:4886 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 26 20 27 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:4886 89 {*movdi_internal}
     (nil))
(insn 27 26 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:4886 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNSt6vectorIxSaIxEEC2ERKS1_, funcdef_no=2029, decl_uid=43042, cgraph_uid=648, symbol_order=650)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 9 count 10 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 59.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 76.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r102,l0) best DREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a6(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a8(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a9(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a10(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r92,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a12(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a15(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a19(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a23(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 76(l0): point = 1
   Insn 71(l0): point = 4
   Insn 70(l0): point = 6
   Insn 69(l0): point = 8
   Insn 68(l0): point = 10
   Insn 67(l0): point = 12
   Insn 66(l0): point = 14
   Insn 87(l0): point = 16
   Insn 62(l0): point = 19
   Insn 61(l0): point = 21
   Insn 60(l0): point = 23
   Insn 59(l0): point = 25
   Insn 58(l0): point = 27
   Insn 57(l0): point = 29
   Insn 84(l0): point = 31
   Insn 92(l0): point = 34
   Insn 75(l0): point = 37
   Insn 74(l0): point = 39
   Insn 89(l0): point = 41
   Insn 52(l0): point = 43
   Insn 51(l0): point = 45
   Insn 49(l0): point = 47
   Insn 48(l0): point = 50
   Insn 47(l0): point = 52
   Insn 46(l0): point = 54
   Insn 45(l0): point = 56
   Insn 44(l0): point = 58
   Insn 43(l0): point = 60
   Insn 42(l0): point = 62
   Insn 41(l0): point = 64
   Insn 40(l0): point = 66
   Insn 39(l0): point = 68
   Insn 38(l0): point = 70
   Insn 37(l0): point = 72
   Insn 36(l0): point = 74
   Insn 35(l0): point = 76
   Insn 34(l0): point = 78
   Insn 33(l0): point = 80
   Insn 32(l0): point = 82
   Insn 31(l0): point = 84
   Insn 30(l0): point = 86
   Insn 29(l0): point = 88
   Insn 28(l0): point = 90
   Insn 27(l0): point = 92
   Insn 25(l0): point = 95
   Insn 24(l0): point = 97
   Insn 23(l0): point = 99
   Insn 22(l0): point = 101
   Insn 21(l0): point = 103
   Insn 20(l0): point = 105
   Insn 19(l0): point = 107
   Insn 18(l0): point = 109
   Insn 17(l0): point = 111
   Insn 16(l0): point = 113
   Insn 15(l0): point = 115
   Insn 14(l0): point = 117
   Insn 13(l0): point = 119
   Insn 12(l0): point = 121
   Insn 11(l0): point = 123
   Insn 10(l0): point = 125
   Insn 9(l0): point = 127
   Insn 8(l0): point = 129
   Insn 5(l0): point = 131
   Insn 3(l0): point = 133
   Insn 2(l0): point = 135
 a0(r97): [7..8]
 a1(r110): [9..16]
 a2(r95): [13..14]
 a3(r96): [22..23]
 a4(r109): [24..31]
 a5(r108): [28..29]
 a6(r107): [44..45]
 a7(r94): [44..47]
 a8(r98): [53..60]
 a9(r99): [55..68]
 a10(r93): [57..76]
 a11(r92): [59..80]
 a12(r106): [65..66]
 a13(r105): [73..74]
 a14(r104): [77..78]
 a15(r91): [85..86]
 a16(r103): [91..92]
 a17(r90): [98..105]
 a18(r89): [100..107]
 a19(r102): [102..103]
 a20(r101): [112..113]
 a21(r100): [118..121]
 a22(r88): [120..123]
 a23(r87): [128..129]
Compressing live ranges: from 138 to 30 - 21%
Ranges after the compression:
 a0(r97): [0..1]
 a1(r110): [2..3]
 a2(r95): [2..3]
 a3(r96): [4..5]
 a4(r109): [6..7]
 a5(r108): [6..7]
 a6(r107): [8..9]
 a7(r94): [8..9]
 a8(r98): [10..11]
 a9(r99): [10..13]
 a10(r93): [10..15]
 a11(r92): [10..17]
 a12(r106): [12..13]
 a13(r105): [14..15]
 a14(r104): [16..17]
 a15(r91): [18..19]
 a16(r103): [20..21]
 a17(r90): [22..23]
 a18(r89): [22..23]
 a19(r102): [22..23]
 a20(r101): [24..25]
 a21(r100): [26..27]
 a22(r88): [26..27]
 a23(r87): [28..29]
  regions=1, blocks=10, points=30
    allocnos=24 (big 0), copies=0, conflicts=0, ranges=24
Disposition:
   23:r87  l0     0   22:r88  l0     1   18:r89  l0     2   17:r90  l0     0
   15:r91  l0     0   11:r92  l0    42   10:r93  l0     3    7:r94  l0     1
    2:r95  l0     0    3:r96  l0     0    0:r97  l0     0    8:r98  l0     0
    9:r99  l0    41   21:r100 l0     0   20:r101 l0     0   19:r102 l0     1
   16:r103 l0     0   14:r104 l0     0   13:r105 l0     0   12:r106 l0     0
    6:r107 l0     0    5:r108 l0     0    4:r109 l0     3    1:r110 l0     3
+++Costs: overall -22, reg -22, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={17d,8u} r1={19d,2u} r2={16d,1u} r4={18d,4u} r5={28d,14u} r6={1d,9u} r7={1d,23u} r8={14d} r9={14d} r10={14d} r11={14d} r12={14d} r13={14d} r14={14d} r15={14d} r16={1d,8u} r17={20d,1u} r18={14d} r19={14d} r20={1d,26u} r21={15d} r22={15d} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={15d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={15d} r38={15d} r39={14d} r40={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} 
;;    total ref usage 1200{1080d,120u,0e} in 65{51 regular + 14 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 100 101 102
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:318 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __x+0 S8 A64])
        (reg:DI 4 si [ __x ])) /usr/include/c++/5/bits/stl_vector.h:318 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __x ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48840+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:318 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg/f:DI 87 [ D.48834 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48834 ])) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48834 ])
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149bd0 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:320 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ D.48835 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:320 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.48835 ])) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48835 ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 100)) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_") [flags 0x3]  <function_decl 0x7fdf7c149288 _S_select_on_copy>) [0 _S_select_on_copy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:320 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 2 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 101)) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE4sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195438 size>) [0 size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:320 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 89 [ D.48836 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 90 [ D.48837 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:320 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 2 (set (reg:DI 1 dx)
        (reg:DI 102)) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (reg:DI 89 [ D.48836 ])) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.48836 ])
        (nil)))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.48837 ])) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48837 ])
        (nil)))
(call_insn 25 24 26 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_") [flags 0x3]  <function_decl 0x7fdf7c176af8 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:320 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 98 99 103 104 105 106
(note 26 25 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:320 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg:DI 103)) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(call_insn 29 28 30 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIxED1Ev") [flags 0x3]  <function_decl 0x7fdf7c16f798 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:320 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 30 29 31 3 (set (reg/f:DI 91 [ D.48837 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:324 89 {*movdi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48837 ])) /usr/include/c++/5/bits/stl_vector.h:324 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48837 ])
        (nil)))
(call_insn 32 31 33 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149af8 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:324 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 3 (set (reg/f:DI 92 [ D.48838 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:324 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 34 33 35 3 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg/f:DI 93 [ D.48839 ])
        (mem/f/j:DI (reg/f:DI 104) [0 this_9(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (nil)))
(insn 36 35 37 3 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:DI 5 di)
        (reg:DI 105)) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn 38 37 39 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE3endEv") [flags 0x3]  <function_decl 0x7fdf7c18dbd0 end>) [0 end S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:322 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 3 (set (reg:DI 99 [ D.47912 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 40 39 41 3 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (nil))
(insn 41 40 42 3 (set (reg:DI 5 di)
        (reg:DI 106)) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(call_insn 42 41 43 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE5beginEv") [flags 0x3]  <function_decl 0x7fdf7c18da20 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:322 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 44 3 (set (reg:DI 98 [ D.47913 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 44 43 45 3 (set (reg:DI 2 cx)
        (reg/f:DI 92 [ D.48838 ])) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.48838 ])
        (nil)))
(insn 45 44 46 3 (set (reg:DI 1 dx)
        (reg/f:DI 93 [ D.48839 ])) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.48839 ])
        (nil)))
(insn 46 45 47 3 (set (reg:DI 4 si)
        (reg:DI 99 [ D.47912 ])) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ D.47912 ])
        (nil)))
(insn 47 46 48 3 (set (reg:DI 5 di)
        (reg:DI 98 [ D.47913 ])) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98 [ D.47913 ])
        (nil)))
(call_insn 48 47 80 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E") [flags 0x3]  <function_decl 0x7fdf7bbf5bd0 __uninitialized_copy_a>) [0 __uninitialized_copy_a S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:322 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       7 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94 107
(note 80 48 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 49 80 51 4 (set (reg/f:DI 94 [ D.48839 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 51 49 52 4 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:321 89 {*movdi_internal}
     (nil))
(insn 52 51 89 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 107)
                (const_int 8 [0x8])) [0 this_9(D)->D.43079._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 94 [ D.48839 ])) /usr/include/c++/5/bits/stl_vector.h:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_DEAD (reg/f:DI 94 [ D.48839 ])
            (nil))))
(insn 89 52 74 4 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:325 684 {nop}
     (nil))
(insn 74 89 75 4 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48840+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_vector.h:325 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 75 74 90 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:325 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 78)
;;  succ:       9
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 90 75 92 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 92 90 93 5 (set (pc)
        (label_ref 91)) 654 {jump}
     (nil)
 -> 91)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 93 92 83)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 6 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 108 109
(code_label/s 83 93 85 6 178 "" [1 uses])
(note 85 83 84 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 84 85 57 6 (set (reg:DI 109)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 57 84 58 6 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:320 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 58 57 59 6 (set (reg:DI 5 di)
        (reg:DI 108)) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(call_insn 59 58 60 6 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIxED1Ev") [flags 0x3]  <function_decl 0x7fdf7c16f798 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:320 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 60 59 61 6 (set (reg/f:DI 96 [ D.48832 ])
        (reg:DI 109)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(insn 61 60 62 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.48832 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.48832 ])
        (nil)))
(call_insn 62 61 63 6 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 63 62 86)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 7 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 97 110
(code_label/s 86 63 88 7 179 "" [1 uses])
(note 88 86 87 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 87 88 66 7 (set (reg:DI 110)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 66 87 67 7 (set (reg/f:DI 95 [ D.48837 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (nil))
(insn 67 66 68 7 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.48837 ])) /usr/include/c++/5/bits/stl_vector.h:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.48837 ])
        (nil)))
(call_insn 68 67 69 7 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEED2Ev") [flags 0x3]  <function_decl 0x7fdf7c17b288 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:320 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 69 68 70 7 (set (reg/f:DI 97 [ D.48833 ])
        (reg:DI 110)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 70 69 71 7 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.48833 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.48833 ])
        (nil)))
(call_insn 71 70 72 7 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 72 71 91)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 91 72 81 8 180 "" [1 uses])
(note 81 91 76 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 76 81 77 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:325 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 77 76 78)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 78 77 82 9 177 "" [1 uses])
(note 82 78 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::reference = long long int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt6vectorIxSaIxEEixEm, funcdef_no=2031, decl_uid=42641, cgraph_uid=650, symbol_order=652)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r88): [7..8]
 a3(r87): [7..12]
 a4(r92): [9..10]
 a5(r91): [13..14]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r88): [4..5]
 a3(r87): [4..7]
 a4(r92): [6..7]
 a5(r91): [8..9]
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r87  l0     0    2:r88  l0     1    1:r89  l0     0    0:r90  l0     0
    5:r91  l0     0    4:r92  l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::reference = long long int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={2d} r20={1d,6u,1e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 50{28d,21u,1e} in 10{10 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 87 88 89 90 91 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:779 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/include/c++/5/bits/stl_vector.h:779 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:780 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ D.48842 ])
        (mem/f/j:DI (reg/f:DI 91) [0 this_2(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:780 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 92)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:780 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 88 [ D.48843 ])
                (ashift:DI (reg:DI 92)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:780 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 11 10 14 2 (parallel [
            (set (reg/f:DI 89 [ D.48844 ])
                (plus:DI (reg/f:DI 87 [ D.48842 ])
                    (reg:DI 88 [ D.48843 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:780 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.48843 ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.48842 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 14 11 18 2 (set (reg:DI 90 [ <retval> ])
        (reg/f:DI 89 [ D.48844 ])) /usr/include/c++/5/bits/stl_vector.h:780 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48844 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:780 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:780 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = long long int*] (_ZNSt6vectorIxSaIxEE5beginEv, funcdef_no=2032, decl_uid=42597, cgraph_uid=651, symbol_order=653)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 25(l0): point = 0
   Insn 22(l0): point = 3
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 15(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 4(l0): point = 26
   Insn 2(l0): point = 28
 a0(r89): [11..12]
 a1(r88): [13..14]
 a2(r90): [19..22]
 a3(r87): [21..24]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r90): [4..5]
 a3(r87): [4..5]
  regions=1, blocks=5, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    3:r87  l0     1    1:r88  l0     0    0:r89  l0     0    2:r90  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,1u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,1u} r18={2d} r19={2d} r20={1d,10u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 206{173d,33u,0e} in 14{12 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:547 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48846+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:547 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 87 [ D.48845 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:548 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:548 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.48845 ])) /usr/include/c++/5/bits/stl_vector.h:548 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48845 ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_vector.h:548 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC1ERKS1_") [flags 0x3]  <function_decl 0x7fdf7be51360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:548 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 15 2 (set (reg:DI 88 [ D.48091 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.44851+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:548 89 {*movdi_internal}
     (nil))
(insn 15 12 19 2 (set (reg:DI 89 [ <retval> ])
        (reg:DI 88 [ D.48091 ])) /usr/include/c++/5/bits/stl_vector.h:548 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.48091 ])
        (nil)))
(insn 19 15 20 2 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:548 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 20 19 21 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48846+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_vector.h:548 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 21 20 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:548 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 27 21 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 22 27 23 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:548 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 23 22 24)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 24 23 28 4 185 "" [1 uses])
(note 28 24 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 28 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:548 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const __gnu_cxx::__normal_iterator<_Iter, typename __gnu_cxx::__enable_if<std::__are_same<_Iter, typename _Container::pointer>::__value, _Container>::__type>&) [with _Iter = long long int*; _Iterator = const long long int*; _Container = std::vector<long long int>; typename __gnu_cxx::__enable_if<std::__are_same<_Iter, typename _Container::pointer>::__value, _Container>::__type = std::vector<long long int>] (_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2IPxEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameIS9_S8_E7__valueES5_E6__typeEEE, funcdef_no=2034, decl_uid=43668, cgraph_uid=653, symbol_order=655)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 16(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r90): [3..4]
 a1(r88): [3..6]
 a2(r87): [7..8]
 a3(r89): [13..14]
Compressing live ranges: from 21 to 6 - 28%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r88): [0..1]
 a2(r87): [2..3]
 a3(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     0    1:r88  l0     1    3:r89  l0     0    0:r90  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const __gnu_cxx::__normal_iterator<_Iter, typename __gnu_cxx::__enable_if<std::__are_same<_Iter, typename _Container::pointer>::__value, _Container>::__type>&) [with _Iter = long long int*; _Iterator = const long long int*; _Container = std::vector<long long int>; typename __gnu_cxx::__enable_if<std::__are_same<_Iter, typename _Container::pointer>::__value, _Container>::__type = std::vector<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 116{96d,20u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_iterator.h:745 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __i+0 S8 A64])
        (reg:DI 4 si [ __i ])) /usr/include/c++/5/bits/stl_iterator.h:745 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __i ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __i+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:749 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_iterator.h:749 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv") [flags 0x3]  <function_decl 0x7fdf7be510d8 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:749 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 87 [ D.48847 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:749 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ D.48848 ])
        (mem/f:DI (reg/f:DI 87 [ D.48847 ]) [0 *_4+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:749 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48847 ])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:749 89 {*movdi_internal}
     (nil))
(insn 13 12 16 2 (set (mem/f/j:DI (reg/f:DI 90) [0 this_6(D)->_M_current+0 S8 A64])
        (reg/f:DI 88 [ D.48848 ])) /usr/include/c++/5/bits/stl_iterator.h:749 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_DEAD (reg/f:DI 88 [ D.48848 ])
            (nil))))
(insn 16 13 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_iterator.h:749 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = long long int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const long long int*] (_ZNSt6vectorIxSaIxEE5eraseEN9__gnu_cxx17__normal_iteratorIPKxS1_EE, funcdef_no=2036, decl_uid=42729, cgraph_uid=655, symbol_order=657)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 45.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a6(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a7(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a8(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a12(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a13(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 48(l0): point = 0
   Insn 45(l0): point = 3
   Insn 44(l0): point = 6
   Insn 43(l0): point = 8
   Insn 42(l0): point = 10
   Insn 38(l0): point = 12
   Insn 35(l0): point = 14
   Insn 34(l0): point = 16
   Insn 33(l0): point = 18
   Insn 32(l0): point = 20
   Insn 31(l0): point = 22
   Insn 30(l0): point = 24
   Insn 29(l0): point = 26
   Insn 28(l0): point = 28
   Insn 27(l0): point = 30
   Insn 26(l0): point = 32
   Insn 25(l0): point = 34
   Insn 24(l0): point = 36
   Insn 23(l0): point = 38
   Insn 22(l0): point = 40
   Insn 21(l0): point = 42
   Insn 20(l0): point = 44
   Insn 19(l0): point = 46
   Insn 18(l0): point = 48
   Insn 17(l0): point = 50
   Insn 16(l0): point = 52
   Insn 15(l0): point = 54
   Insn 14(l0): point = 56
   Insn 13(l0): point = 58
   Insn 12(l0): point = 60
   Insn 11(l0): point = 62
   Insn 10(l0): point = 64
   Insn 9(l0): point = 66
   Insn 8(l0): point = 68
   Insn 5(l0): point = 70
   Insn 3(l0): point = 72
   Insn 2(l0): point = 74
 a0(r90): [11..12]
 a1(r89): [13..14]
 a2(r100): [19..22]
 a3(r88): [21..24]
 a4(r99): [29..32]
 a5(r87): [31..46]
 a6(r98): [35..36]
 a7(r97): [37..38]
 a8(r96): [43..44]
 a9(r95): [51..54]
 a10(r94): [53..56]
 a11(r93): [59..60]
 a12(r92): [61..62]
 a13(r91): [67..68]
Compressing live ranges: from 77 to 22 - 28%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r100): [4..5]
 a3(r88): [4..5]
 a4(r99): [6..7]
 a5(r87): [6..13]
 a6(r98): [8..9]
 a7(r97): [10..11]
 a8(r96): [12..13]
 a9(r95): [14..15]
 a10(r94): [14..15]
 a11(r93): [16..17]
 a12(r92): [18..19]
 a13(r91): [20..21]
  regions=1, blocks=5, points=22
    allocnos=14 (big 0), copies=0, conflicts=0, ranges=14
Disposition:
    5:r87  l0     3    3:r88  l0     1    1:r89  l0     0    0:r90  l0     0
   13:r91  l0     0   12:r92  l0     0   11:r93  l0     0   10:r94  l0     1
    9:r95  l0     0    8:r96  l0     0    7:r97  l0     0    6:r98  l0     0
    4:r99  l0     0    2:r100 l0     0
+++Costs: overall -12, reg -12, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::const_iterator) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = long long int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={8d,7u} r1={7d} r2={7d} r4={10d,4u} r5={12d,6u} r6={1d,4u} r7={1d,10u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,3u} r17={11d,1u} r18={6d} r19={6d} r20={1d,16u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 544{479d,65u,0e} in 37{31 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:1146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __position+0 S8 A128])
        (reg:DI 4 si [ __position ])) /usr/include/c++/5/bits/stl_vector.h:1146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __position ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48850+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1146 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE6cbeginEv") [flags 0x3]  <function_decl 0x7fdf7c1950d8 cbegin>) [0 cbegin S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1147 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 92)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 93)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.44866+0 S8 A64])
        (reg:DI 93)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1147 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1147 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 94)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 95)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxxmiIPKxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_") [flags 0x3]  <function_decl 0x7fdf7bc06e58 operator->) [0 operator- S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1147 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (set (reg:DI 87 [ D.48849 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 96)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 22 21 23 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE5beginEv") [flags 0x3]  <function_decl 0x7fdf7c18d948 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1147 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 2 (set (reg:DI 97)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 23 25 2 (set (reg:DI 98)
        (reg:DI 97)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 25 24 26 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 D.44865+0 S8 A64])
        (reg:DI 98)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 26 25 27 2 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1147 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (reg:DI 87 [ D.48849 ])) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.48849 ])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 99)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 29 28 30 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl") [flags 0x3]  <function_decl 0x7fdf7be47d80 operator+>) [0 operator+ S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1147 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 30 29 31 2 (set (reg:DI 88 [ D.48102 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 31 30 32 2 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 4 si)
        (reg:DI 88 [ D.48102 ])) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.48102 ])
        (nil)))
(insn 33 32 34 2 (set (reg:DI 5 di)
        (reg:DI 100)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 34 33 35 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPxS1_EE") [flags 0x3]  <function_decl 0x7fdf7bdb75e8 _M_erase>) [0 _M_erase S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1147 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 35 34 38 2 (set (reg:DI 89 [ D.48100 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 38 35 42 2 (set (reg:DI 90 [ <retval> ])
        (reg:DI 89 [ D.48100 ])) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.48100 ])
        (nil)))
(insn 42 38 43 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:1147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 43 42 44 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48850+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_vector.h:1147 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 44 43 50 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:1147 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 47)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 50 44 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 45 50 46 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:1147 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 46 45 47)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 47 46 51 4 189 "" [1 uses])
(note 51 47 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 48 51 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1147 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr _Tp&& std::forward(typename std::remove_reference<_From>::type&) [with _Tp = long long int; typename std::remove_reference<_From>::type = long long int] (_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE, funcdef_no=2038, decl_uid=44882, cgraph_uid=656, symbol_order=658)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr _Tp&& std::forward(typename std::remove_reference<_From>::type&) [with _Tp = long long int; typename std::remove_reference<_From>::type = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])
        (reg:DI 5 di [ __t ])) /usr/include/c++/5/bits/move.h:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __t ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ D.48851 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])) /usr/include/c++/5/bits/move.h:77 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48851 ])) /usr/include/c++/5/bits/move.h:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48851 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/move.h:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/move.h:77 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {long long int}; _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_, funcdef_no=2037, decl_uid=43692, cgraph_uid=657, symbol_order=659)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 41.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r102: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r102,l0) best DIREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r89,l0) best AD_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r89,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a10(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a11(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a15(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 49(l0): point = 1
   Insn 41(l0): point = 4
   Insn 40(l0): point = 6
   Insn 39(l0): point = 8
   Insn 38(l0): point = 10
   Insn 37(l0): point = 12
   Insn 36(l0): point = 14
   Insn 35(l0): point = 16
   Insn 34(l0): point = 18
   Insn 46(l0): point = 21
   Insn 29(l0): point = 23
   Insn 28(l0): point = 25
   Insn 27(l0): point = 27
   Insn 26(l0): point = 29
   Insn 25(l0): point = 31
   Insn 24(l0): point = 33
   Insn 23(l0): point = 35
   Insn 22(l0): point = 37
   Insn 21(l0): point = 39
   Insn 20(l0): point = 41
   Insn 19(l0): point = 43
   Insn 18(l0): point = 45
   Insn 17(l0): point = 47
   Insn 16(l0): point = 49
   Insn 15(l0): point = 51
   Insn 14(l0): point = 53
   Insn 12(l0): point = 56
   Insn 11(l0): point = 58
   Insn 10(l0): point = 60
   Insn 9(l0): point = 62
   Insn 8(l0): point = 64
   Insn 7(l0): point = 66
   Insn 3(l0): point = 68
   Insn 2(l0): point = 70
 a0(r102): [7..10]
 a1(r94): [9..12]
 a2(r101): [17..18]
 a3(r100): [24..25]
 a4(r93): [24..27]
 a5(r92): [28..29]
 a6(r99): [30..31]
 a7(r91): [36..41]
 a8(r90): [38..43]
 a9(r89): [40..47]
 a10(r98): [44..45]
 a11(r97): [52..53]
 a12(r88): [59..60]
 a13(r87): [59..64]
 a14(r96): [61..62]
 a15(r95): [65..66]
Compressing live ranges: from 73 to 22 - 30%
Ranges after the compression:
 a0(r102): [0..1]
 a1(r94): [0..1]
 a2(r101): [2..3]
 a3(r100): [4..5]
 a4(r93): [4..5]
 a5(r92): [6..7]
 a6(r99): [8..9]
 a7(r91): [10..11]
 a8(r90): [10..11]
 a9(r89): [10..13]
 a10(r98): [12..13]
 a11(r97): [14..15]
 a12(r88): [16..17]
 a13(r87): [16..19]
 a14(r96): [18..19]
 a15(r95): [20..21]
  regions=1, blocks=7, points=22
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
   13:r87  l0     1   12:r88  l0     0    9:r89  l0     1    8:r90  l0     2
    7:r91  l0     0    5:r92  l0     0    4:r93  l0     1    1:r94  l0     1
   15:r95  l0     0   14:r96  l0     0   11:r97  l0     0   10:r98  l0     0
    6:r99  l0     0    3:r100 l0     0    2:r101 l0     0    0:r102 l0     0
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {long long int}; _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,2u} r1={6d,1u} r2={5d} r4={7d,3u} r5={9d,5u} r6={1d,6u} r7={1d,10u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,5u} r17={6d,1u} r18={4d} r19={4d} r20={1d,17u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} 
;;    total ref usage 398{332d,66u,0e} in 34{30 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 95 96
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/vector.tcc:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __args#0+0 S8 A64])
        (reg:DI 4 si [ __args#0 ])) /usr/include/c++/5/bits/vector.tcc:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __args#0 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:94 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ D.48852 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 95)
                (const_int 8 [0x8])) [0 this_3(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:94 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:94 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 88 [ D.48852 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 96)
                (const_int 16 [0x10])) [0 this_3(D)->D.43079._M_impl._M_end_of_storage+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:94 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.48852 ])
            (reg/f:DI 88 [ D.48852 ]))) /usr/include/c++/5/bits/vector.tcc:94 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48852 ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.48852 ])
            (nil))))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) /usr/include/c++/5/bits/vector.tcc:94 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 97 98 99 100
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __args#0+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:97 89 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg:DI 97)) /usr/include/c++/5/bits/vector.tcc:97 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 16 15 17 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE") [flags 0x3]  <function_decl 0x7fdf7bc0e510 forward>) [0 forward S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:97 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 3 (set (reg/f:DI 89 [ D.48853 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:97 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 17 19 3 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:96 89 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg/f:DI 90 [ D.48852 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 98)
                (const_int 8 [0x8])) [0 this_3(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:96 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 20 19 21 3 (set (reg/f:DI 91 [ D.48854 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:96 89 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 1 dx)
        (reg/f:DI 89 [ D.48853 ])) /usr/include/c++/5/bits/vector.tcc:96 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48853 ])
        (nil)))
(insn 22 21 23 3 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.48852 ])) /usr/include/c++/5/bits/vector.tcc:96 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48852 ])
        (nil)))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48854 ])) /usr/include/c++/5/bits/vector.tcc:96 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48854 ])
        (nil)))
(call_insn 24 23 25 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_") [flags 0x3]  <function_decl 0x7fdf7bc0eaf8 construct>) [0 construct S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:96 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 25 24 26 3 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:98 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg/f:DI 92 [ D.48852 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 99)
                (const_int 8 [0x8])) [0 this_3(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(insn 27 26 28 3 (parallel [
            (set (reg/f:DI 93 [ D.48852 ])
                (plus:DI (reg/f:DI 92 [ D.48852 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:98 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.48852 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 3 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:98 89 {*movdi_internal}
     (nil))
(insn 29 28 46 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 100)
                (const_int 8 [0x8])) [0 this_3(D)->D.43079._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 93 [ D.48852 ])) /usr/include/c++/5/bits/vector.tcc:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (expr_list:REG_DEAD (reg/f:DI 93 [ D.48852 ])
            (nil))))
(jump_insn 46 29 47 3 (set (pc)
        (label_ref:DI 50)) /usr/include/c++/5/bits/vector.tcc:102 654 {jump}
     (nil)
 -> 50)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 47 46 32)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 101 102
(code_label 32 47 33 4 193 "" [1 uses])
(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 4 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __args#0+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:101 89 {*movdi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg:DI 101)) /usr/include/c++/5/bits/vector.tcc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 36 35 37 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE") [flags 0x3]  <function_decl 0x7fdf7bc0e510 forward>) [0 forward S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:101 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 4 (set (reg/f:DI 94 [ D.48853 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 38 37 39 4 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:101 89 {*movdi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:DI 4 si)
        (reg/f:DI 94 [ D.48853 ])) /usr/include/c++/5/bits/vector.tcc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.48853 ])
        (nil)))
(insn 40 39 41 4 (set (reg:DI 5 di)
        (reg:DI 102)) /usr/include/c++/5/bits/vector.tcc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(call_insn 41 40 50 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_") [flags 0x3]  <function_decl 0x7fdf7bc0ee58 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:101 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 50 41 48 6 195 "" [1 uses])
(note 48 50 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 44 6 (const_int 0 [0]) /usr/include/c++/5/bits/vector.tcc:102 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 44 49 45 5 192 "" [0 uses])
(note 45 44 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = int] (_ZSt3maxIiERKT_S2_S2_, funcdef_no=2042, decl_uid=43733, cgraph_uid=661, symbol_order=663)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:37 INT_SSE_REGS:33 ALL_REGS:416 MEM:11
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 27(l0): point = 0
   Insn 26(l0): point = 2
   Insn 22(l0): point = 4
   Insn 19(l0): point = 7
   Insn 29(l0): point = 10
   Insn 14(l0): point = 12
   Insn 12(l0): point = 15
   Insn 11(l0): point = 17
   Insn 10(l0): point = 19
   Insn 9(l0): point = 21
   Insn 8(l0): point = 23
   Insn 7(l0): point = 25
   Insn 3(l0): point = 27
   Insn 2(l0): point = 29
 a0(r90): [3..4]
 a1(r87): [10..12] [5..7]
 a2(r89): [18..19]
 a3(r88): [18..23]
 a4(r92): [20..21]
 a5(r91): [24..25]
Compressing live ranges: from 32 to 12 - 37%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r87): [2..5]
 a2(r89): [6..7]
 a3(r88): [6..9]
 a4(r92): [8..9]
 a5(r91): [10..11]
  regions=1, blocks=6, points=12
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    1:r87  l0     0    3:r88  l0     1    2:r89  l0     0    0:r90  l0     0
    5:r91  l0     0    4:r92  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,11u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 64{28d,36u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 91 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/include/c++/5/bits/stl_algobase.h:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __b+0 S8 A64])
        (reg:DI 4 si [ __b ])) /usr/include/c++/5/bits/stl_algobase.h:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:224 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.48856 ])
        (mem:SI (reg/f:DI 91) [0 *__a_3(D)+0 S4 A32])) /usr/include/c++/5/bits/stl_algobase.h:224 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __b+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:224 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 89 [ D.48856 ])
        (mem:SI (reg/f:DI 92) [0 *__b_5(D)+0 S4 A32])) /usr/include/c++/5/bits/stl_algobase.h:224 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 11 10 12 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.48856 ])
            (reg:SI 89 [ D.48856 ]))) /usr/include/c++/5/bits/stl_algobase.h:224 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.48856 ])
        (expr_list:REG_DEAD (reg:SI 88 [ D.48856 ])
            (nil))))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) /usr/include/c++/5/bits/stl_algobase.h:224 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 17)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 29 3 (set (reg/f:DI 87 [ D.48855 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __b+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:225 89 {*movdi_internal}
     (nil))
(jump_insn 29 14 30 3 (set (pc)
        (label_ref 20)) /usr/include/c++/5/bits/stl_algobase.h:225 654 {jump}
     (nil)
 -> 20)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 30 29 17)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 17 30 18 4 197 "" [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 87 [ D.48855 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:226 89 {*movdi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 90
(code_label 20 19 21 5 198 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 26 5 (set (reg:DI 90 [ <retval> ])
        (reg/f:DI 87 [ D.48855 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48855 ])
        (nil)))
(insn 26 22 27 5 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:227 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 27 26 0 5 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:227 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int] (_ZNKSt6vectorIxSaIxEE4sizeEv, funcdef_no=2043, decl_uid=42621, cgraph_uid=662, symbol_order=664)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a7(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a9(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 23(l0): point = 0
   Insn 22(l0): point = 2
   Insn 18(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 8(l0): point = 20
   Insn 7(l0): point = 22
   Insn 6(l0): point = 24
   Insn 2(l0): point = 26
 a0(r94): [3..4]
 a1(r93): [5..6]
 a2(r92): [7..8]
 a3(r97): [9..10]
 a4(r91): [11..12]
 a5(r90): [13..14]
 a6(r88): [13..20]
 a7(r89): [15..16]
 a8(r96): [17..18]
 a9(r87): [21..22]
 a10(r95): [23..24]
Compressing live ranges: from 29 to 20 - 68%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r93): [2..3]
 a2(r92): [4..5]
 a3(r97): [6..7]
 a4(r91): [8..9]
 a5(r90): [10..11]
 a6(r88): [10..15]
 a7(r89): [12..13]
 a8(r96): [14..15]
 a9(r87): [16..17]
 a10(r95): [18..19]
  regions=1, blocks=3, points=20
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    9:r87  l0     0    6:r88  l0     1    7:r89  l0     0    5:r90  l0     0
    4:r91  l0     0    2:r92  l0     0    1:r93  l0     0    0:r94  l0     0
   10:r95  l0     0    8:r96  l0     0    3:r97  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={2d} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 58{33d,24u,1e} in 14{14 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 87 88 89 90 91 92 93 94 95 96 97
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:654 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:655 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ D.48857 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 95)
                (const_int 8 [0x8])) [0 this_2(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:655 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 88 [ D.48858 ])
        (reg/f:DI 87 [ D.48857 ])) /usr/include/c++/5/bits/stl_vector.h:655 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48857 ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:655 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 89 [ D.48857 ])
        (mem/f/j:DI (reg/f:DI 96) [0 this_2(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:655 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 90 [ D.48858 ])
        (reg/f:DI 89 [ D.48857 ])) /usr/include/c++/5/bits/stl_vector.h:655 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48857 ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 91 [ D.48858 ])
                (minus:DI (reg:DI 88 [ D.48858 ])
                    (reg:DI 90 [ D.48858 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:655 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.48858 ])
        (expr_list:REG_DEAD (reg:DI 88 [ D.48858 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 97)
                (ashiftrt:DI (reg:DI 91 [ D.48858 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:655 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.48858 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:DI (reg:DI 91 [ D.48858 ])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 14 13 15 2 (set (reg:DI 92 [ D.48858 ])
        (reg:DI 97)) /usr/include/c++/5/bits/stl_vector.h:655 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 15 14 18 2 (set (reg:DI 93 [ D.48859 ])
        (reg:DI 92 [ D.48858 ])) /usr/include/c++/5/bits/stl_vector.h:655 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ D.48858 ])
        (nil)))
(insn 18 15 22 2 (set (reg:DI 94 [ <retval> ])
        (reg:DI 93 [ D.48859 ])) /usr/include/c++/5/bits/stl_vector.h:655 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ D.48859 ])
        (nil)))
(insn 22 18 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 94 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:655 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ <retval> ])
        (nil)))
(insn 23 22 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:655 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = int] (_ZSt3minIiERKT_S2_S2_, funcdef_no=2044, decl_uid=43738, cgraph_uid=663, symbol_order=665)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:37 INT_SSE_REGS:33 ALL_REGS:416 MEM:11
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 27(l0): point = 0
   Insn 26(l0): point = 2
   Insn 22(l0): point = 4
   Insn 19(l0): point = 7
   Insn 29(l0): point = 10
   Insn 14(l0): point = 12
   Insn 12(l0): point = 15
   Insn 11(l0): point = 17
   Insn 10(l0): point = 19
   Insn 9(l0): point = 21
   Insn 8(l0): point = 23
   Insn 7(l0): point = 25
   Insn 3(l0): point = 27
   Insn 2(l0): point = 29
 a0(r90): [3..4]
 a1(r87): [10..12] [5..7]
 a2(r89): [18..19]
 a3(r88): [18..23]
 a4(r92): [20..21]
 a5(r91): [24..25]
Compressing live ranges: from 32 to 12 - 37%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r87): [2..5]
 a2(r89): [6..7]
 a3(r88): [6..9]
 a4(r92): [8..9]
 a5(r91): [10..11]
  regions=1, blocks=6, points=12
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    1:r87  l0     0    3:r88  l0     1    2:r89  l0     0    0:r90  l0     0
    5:r91  l0     0    4:r92  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,11u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 64{28d,36u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 91 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/include/c++/5/bits/stl_algobase.h:195 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __b+0 S8 A64])
        (reg:DI 4 si [ __b ])) /usr/include/c++/5/bits/stl_algobase.h:195 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __b+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:200 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.48861 ])
        (mem:SI (reg/f:DI 91) [0 *__b_3(D)+0 S4 A32])) /usr/include/c++/5/bits/stl_algobase.h:200 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:200 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 89 [ D.48861 ])
        (mem:SI (reg/f:DI 92) [0 *__a_5(D)+0 S4 A32])) /usr/include/c++/5/bits/stl_algobase.h:200 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 11 10 12 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.48861 ])
            (reg:SI 89 [ D.48861 ]))) /usr/include/c++/5/bits/stl_algobase.h:200 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.48861 ])
        (expr_list:REG_DEAD (reg:SI 88 [ D.48861 ])
            (nil))))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) /usr/include/c++/5/bits/stl_algobase.h:200 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 17)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 29 3 (set (reg/f:DI 87 [ D.48860 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __b+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:201 89 {*movdi_internal}
     (nil))
(jump_insn 29 14 30 3 (set (pc)
        (label_ref 20)) /usr/include/c++/5/bits/stl_algobase.h:201 654 {jump}
     (nil)
 -> 20)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 30 29 17)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 17 30 18 4 202 "" [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 87 [ D.48860 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:202 89 {*movdi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 90
(code_label 20 19 21 5 203 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 26 5 (set (reg:DI 90 [ <retval> ])
        (reg/f:DI 87 [ D.48860 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48860 ])
        (nil)))
(insn 26 22 27 5 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 27 26 0 5 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:203 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool std::vector<_Tp, _Alloc>::empty() const [with _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNKSt6vectorIxSaIxEE5emptyEv, funcdef_no=2046, decl_uid=42636, cgraph_uid=665, symbol_order=667)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 34.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best SIREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a2(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a6(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a8(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a9(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 37(l0): point = 0
   Insn 34(l0): point = 3
   Insn 33(l0): point = 6
   Insn 32(l0): point = 8
   Insn 31(l0): point = 10
   Insn 27(l0): point = 12
   Insn 24(l0): point = 14
   Insn 23(l0): point = 16
   Insn 22(l0): point = 18
   Insn 21(l0): point = 20
   Insn 20(l0): point = 22
   Insn 19(l0): point = 24
   Insn 18(l0): point = 26
   Insn 17(l0): point = 28
   Insn 16(l0): point = 30
   Insn 15(l0): point = 32
   Insn 14(l0): point = 34
   Insn 13(l0): point = 36
   Insn 12(l0): point = 38
   Insn 11(l0): point = 40
   Insn 10(l0): point = 42
   Insn 9(l0): point = 44
   Insn 8(l0): point = 46
   Insn 7(l0): point = 48
   Insn 4(l0): point = 50
   Insn 2(l0): point = 52
 a0(r88): [11..12]
 a1(r87): [13..14]
 a2(r96): [19..22]
 a3(r95): [21..24]
 a4(r94): [27..28]
 a5(r93): [29..30]
 a6(r92): [35..36]
 a7(r91): [39..40]
 a8(r90): [41..42]
 a9(r89): [47..48]
Compressing live ranges: from 55 to 18 - 32%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r96): [4..5]
 a3(r95): [4..5]
 a4(r94): [6..7]
 a5(r93): [8..9]
 a6(r92): [10..11]
 a7(r91): [12..13]
 a8(r90): [14..15]
 a9(r89): [16..17]
  regions=1, blocks=5, points=18
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    1:r87  l0     0    0:r88  l0     0    9:r89  l0     0    8:r90  l0     0
    7:r91  l0     0    6:r92  l0     0    5:r93  l0     0    4:r94  l0     0
    3:r95  l0     1    2:r96  l0     0
+++Costs: overall -8, reg -8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool std::vector<_Tp, _Alloc>::empty() const [with _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,5u} r1={5d} r2={5d} r4={6d,1u} r5={8d,4u} r6={1d,4u} r7={1d,8u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,3u} r17={8d,1u} r18={4d} r19={4d} r20={1d,13u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 375{326d,49u,0e} in 26{22 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:743 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48863+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:743 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE3endEv") [flags 0x3]  <function_decl 0x7fdf7c18dbd0 end>) [0 end S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:744 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg:DI 90)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 91)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.44901+0 S8 A64])
        (reg:DI 91)) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE5beginEv") [flags 0x3]  <function_decl 0x7fdf7c18da20 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:744 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg:DI 93)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 94)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 D.44900+0 S8 A64])
        (reg:DI 94)) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:744 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:744 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg:DI 95)) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 96)) /usr/include/c++/5/bits/stl_vector.h:744 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 23 22 24 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxxeqIPKxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESB_") [flags 0x3]  <function_decl 0x7fdf7bc1b798 operator==>) [0 operator== S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:744 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 23 27 2 (set (reg:QI 87 [ D.48862 ])
        (reg:QI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:744 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 27 24 31 2 (set (reg:QI 88 [ <retval> ])
        (reg:QI 87 [ D.48862 ])) /usr/include/c++/5/bits/stl_vector.h:744 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ D.48862 ])
        (nil)))
(insn 31 27 32 2 (set (reg/i:QI 0 ax)
        (reg:QI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:744 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ <retval> ])
        (nil)))
(insn 32 31 33 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48863+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_vector.h:744 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 33 32 39 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:744 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 36)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 39 33 34 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 34 39 35 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:744 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 35 34 36)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 36 35 40 4 206 "" [1 uses])
(note 40 36 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 37 40 0 4 (use (reg/i:QI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:744 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::ostream& operator<<(std::ostream&, const std::vector<T>&) [with T = long long int; std::ostream = std::basic_ostream<char>] (_ZlsIxERSoS0_RKSt6vectorIT_SaIS2_EE, funcdef_no=2047, decl_uid=43753, cgraph_uid=666, symbol_order=668)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 19 count 16 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 104.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 113.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r118,l0) best AREG, allocno GENERAL_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r116,l0) best AREG, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r115,l0) best DIREG, allocno GENERAL_REGS
    r113: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r113,l0) best DIREG, allocno GENERAL_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r112,l0) best DIREG, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r110,l0) best SIREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r108,l0) best AREG, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r105,l0) best SIREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r103,l0) best AREG, allocno GENERAL_REGS
    r102: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r102,l0) best DIREG, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r95,l0) best DREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a12(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a15(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a16(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a18(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a21(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a22(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a24(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a25(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a27(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a29(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a30(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 116(l0): point = 0
   Insn 113(l0): point = 3
   Insn 107(l0): point = 6
   Insn 106(l0): point = 8
   Insn 105(l0): point = 10
   Insn 104(l0): point = 12
   Insn 103(l0): point = 14
   Insn 102(l0): point = 16
   Insn 125(l0): point = 18
   Insn 98(l0): point = 21
   Insn 97(l0): point = 23
   Insn 96(l0): point = 25
   Insn 95(l0): point = 27
   Insn 94(l0): point = 29
   Insn 93(l0): point = 31
   Insn 122(l0): point = 33
   Insn 131(l0): point = 36
   Insn 112(l0): point = 39
   Insn 111(l0): point = 41
   Insn 110(l0): point = 43
   Insn 88(l0): point = 45
   Insn 85(l0): point = 47
   Insn 84(l0): point = 49
   Insn 83(l0): point = 51
   Insn 82(l0): point = 53
   Insn 80(l0): point = 56
   Insn 79(l0): point = 58
   Insn 78(l0): point = 60
   Insn 46(l0): point = 63
   Insn 45(l0): point = 65
   Insn 44(l0): point = 67
   Insn 43(l0): point = 69
   Insn 42(l0): point = 71
   Insn 41(l0): point = 73
   Insn 40(l0): point = 75
   Insn 39(l0): point = 77
   Insn 127(l0): point = 80
   Insn 72(l0): point = 82
   Insn 71(l0): point = 84
   Insn 70(l0): point = 86
   Insn 68(l0): point = 89
   Insn 67(l0): point = 91
   Insn 66(l0): point = 93
   Insn 65(l0): point = 95
   Insn 63(l0): point = 98
   Insn 62(l0): point = 100
   Insn 61(l0): point = 102
   Insn 59(l0): point = 104
   Insn 58(l0): point = 107
   Insn 57(l0): point = 109
   Insn 56(l0): point = 111
   Insn 55(l0): point = 113
   Insn 54(l0): point = 115
   Insn 53(l0): point = 117
   Insn 52(l0): point = 119
   Insn 51(l0): point = 121
   Insn 50(l0): point = 123
   Insn 49(l0): point = 125
   Insn 48(l0): point = 127
   Insn 37(l0): point = 130
   Insn 36(l0): point = 132
   Insn 35(l0): point = 134
   Insn 34(l0): point = 136
   Insn 33(l0): point = 138
   Insn 32(l0): point = 140
   Insn 31(l0): point = 142
   Insn 30(l0): point = 144
   Insn 29(l0): point = 146
   Insn 28(l0): point = 148
   Insn 27(l0): point = 150
   Insn 26(l0): point = 152
   Insn 25(l0): point = 154
   Insn 24(l0): point = 156
   Insn 23(l0): point = 158
   Insn 22(l0): point = 160
   Insn 21(l0): point = 162
   Insn 19(l0): point = 165
   Insn 18(l0): point = 167
   Insn 17(l0): point = 169
   Insn 16(l0): point = 171
   Insn 15(l0): point = 173
   Insn 14(l0): point = 175
   Insn 13(l0): point = 177
   Insn 12(l0): point = 179
   Insn 11(l0): point = 181
   Insn 10(l0): point = 183
   Insn 9(l0): point = 185
   Insn 8(l0): point = 187
   Insn 5(l0): point = 189
   Insn 3(l0): point = 191
   Insn 2(l0): point = 193
 a0(r88): [9..10]
 a1(r118): [11..18]
 a2(r117): [15..16]
 a3(r87): [24..25]
 a4(r116): [26..33]
 a5(r115): [30..31]
 a6(r93): [44..45]
 a7(r92): [46..53]
 a8(r113): [50..51]
 a9(r112): [85..86]
 a10(r111): [92..95]
 a11(r91): [101..104]
 a12(r90): [103..115]
 a13(r110): [112..113]
 a14(r109): [116..117]
 a15(r108): [120..121]
 a16(r107): [126..127]
 a17(r89): [66..67]
 a18(r106): [72..75]
 a19(r105): [74..77]
 a20(r104): [131..132]
 a21(r103): [133..134]
 a22(r102): [139..140]
 a23(r101): [143..144]
 a24(r100): [145..146]
 a25(r99): [151..152]
 a26(r98): [155..156]
 a27(r97): [161..162]
 a28(r96): [168..173]
 a29(r95): [172..175]
 a30(r94): [180..181]
Compressing live ranges: from 196 to 50 - 25%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r118): [2..3]
 a2(r117): [2..3]
 a3(r87): [4..5]
 a4(r116): [6..7]
 a5(r115): [6..7]
 a6(r93): [8..9]
 a7(r92): [10..11]
 a8(r113): [10..11]
 a9(r112): [16..17]
 a10(r111): [18..19]
 a11(r91): [20..21]
 a12(r90): [20..23]
 a13(r110): [22..23]
 a14(r109): [24..25]
 a15(r108): [26..27]
 a16(r107): [28..29]
 a17(r89): [12..13]
 a18(r106): [14..15]
 a19(r105): [14..15]
 a20(r104): [30..31]
 a21(r103): [32..33]
 a22(r102): [34..35]
 a23(r101): [36..37]
 a24(r100): [38..39]
 a25(r99): [40..41]
 a26(r98): [42..43]
 a27(r97): [44..45]
 a28(r96): [46..47]
 a29(r95): [46..47]
 a30(r94): [48..49]
  regions=1, blocks=16, points=50
    allocnos=31 (big 0), copies=0, conflicts=0, ranges=31
Disposition:
    3:r87  l0     0    0:r88  l0     0   17:r89  l0     0   12:r90  l0     3
   11:r91  l0     0    7:r92  l0     3    6:r93  l0     0   30:r94  l0     0
   29:r95  l0     1   28:r96  l0     0   27:r97  l0     0   26:r98  l0     0
   25:r99  l0     0   24:r100 l0     0   23:r101 l0     0   22:r102 l0     0
   21:r103 l0     0   20:r104 l0     0   19:r105 l0     1   18:r106 l0     0
   16:r107 l0     0   15:r108 l0     0   14:r109 l0     0   13:r110 l0     0
   10:r111 l0     0    9:r112 l0     0    8:r113 l0     0    5:r115 l0     0
    4:r116 l0     3    2:r117 l0     0    1:r118 l0     3
+++Costs: overall -26, reg -26, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::ostream& operator<<(std::ostream&, const std::vector<T>&) [with T = long long int; std::ostream = std::basic_ostream<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={23d,9u} r1={23d,1u} r2={20d} r4={27d,8u} r5={38d,19u} r6={1d,15u} r7={1d,34u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,14u} r17={35d,2u} r18={19d} r19={19d} r20={1d,41u} r21={20d} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={20d} r38={20d} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r53={19d} r54={19d} r55={19d} r56={19d} r57={19d} r58={19d} r59={19d} r60={19d} r61={19d} r62={19d} r63={19d} r64={19d} r65={19d} r66={19d} r67={19d} r68={19d} r69={19d} r70={19d} r71={19d} r72={19d} r73={19d} r74={19d} r75={19d} r76={19d} r77={19d} r78={19d} r79={19d} r80={19d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} 
;;    total ref usage 1639{1465d,174u,0e} in 91{72 regular + 19 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 95 96
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 os+0 S8 A64])
        (reg:DI 5 di [ os ])) intcode.h:18 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ os ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 v+0 S8 A64])
        (reg:DI 4 si [ v ])) intcode.h:18 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ v ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48871+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:18 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fdf7b66a360 *.LC29>)) intcode.h:19 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.h:19 89 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.h:19 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:20 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 94)) intcode.h:20 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("_ZNSaIcEC1Ev") [flags 0x41]  <function_decl 0x7fdf7d57a870 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.h:20 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:20 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:20 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg:DI 95)) intcode.h:20 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fdf7b5d41b0 *.LC22>)) intcode.h:20 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 96)) intcode.h:20 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 19 18 20 2 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_") [flags 0x41]  <function_decl 0x7fdf7d0b06c0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) intcode.h:20 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       12 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 98 99 100 101 102 103 104
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:20 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 97)) intcode.h:20 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 23 22 24 3 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x7fdf7d57aa20 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.h:20 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 3 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 v+0 S8 A64])) intcode.h:21 89 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 __for_range+0 S8 A64])
        (reg/f:DI 98)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 26 25 27 3 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 __for_range+0 S8 A64])) intcode.h:21 89 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:DI 5 di)
        (reg:DI 99)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 28 27 29 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE5beginEv") [flags 0x3]  <function_decl 0x7fdf7c18da20 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) intcode.h:21 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 3 (set (reg:DI 100)
        (reg:DI 0 ax)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 30 29 31 3 (set (reg:DI 101)
        (reg:DI 100)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(insn 31 30 32 3 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 __for_begin+0 S8 A64])
        (reg:DI 101)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(insn 32 31 33 3 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 __for_range+0 S8 A64])) intcode.h:21 89 {*movdi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:DI 5 di)
        (reg:DI 102)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(call_insn 34 33 35 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE3endEv") [flags 0x3]  <function_decl 0x7fdf7c18dbd0 end>) [0 end S1 A8])
            (const_int 0 [0]))) intcode.h:21 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 34 36 3 (set (reg:DI 103)
        (reg:DI 0 ax)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 36 35 37 3 (set (reg:DI 104)
        (reg:DI 103)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(insn 37 36 73 3 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 __for_end+0 S8 A64])
        (reg:DI 104)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              8 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 105 106
(code_label 73 37 38 4 209 "" [1 uses])
(note 38 73 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 4 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:21 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 40 39 41 4 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:21 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 41 40 42 4 (set (reg:DI 4 si)
        (reg:DI 105)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 42 41 43 4 (set (reg:DI 5 di)
        (reg:DI 106)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(call_insn 43 42 44 4 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxxneIPKxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESB_") [flags 0x3]  <function_decl 0x7fdf7bc21ca8 operator!=>) [0 operator!= S1 A8])
            (const_int 0 [0]))) intcode.h:21 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 44 43 45 4 (set (reg:QI 89 [ D.48866 ])
        (reg:QI 0 ax)) intcode.h:21 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 45 44 46 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.48866 ])
            (const_int 0 [0]))) intcode.h:21 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ D.48866 ])
        (nil)))
(jump_insn 46 45 47 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) intcode.h:21 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 76)
;;  succ:       5 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 107 108 109 110
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 5 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:21 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 48 50 5 (set (reg:DI 5 di)
        (reg:DI 107)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(call_insn 50 49 51 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEdeEv") [flags 0x3]  <function_decl 0x7fdf7be5d0d8 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) intcode.h:21 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 51 50 52 5 (set (reg:DI 108)
        (reg:DI 0 ax)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 52 51 53 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 val+0 S8 A64])
        (reg:DI 108)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 53 52 54 5 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 val+0 S8 A64])) intcode.h:22 89 {*movdi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:DI 90 [ D.48867 ])
        (mem:DI (reg/f:DI 109) [0 *val_18+0 S8 A64])) intcode.h:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(insn 55 54 56 5 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:22 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 56 55 57 5 (set (reg:DI 4 si)
        (reg:DI 110)) intcode.h:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 57 56 58 5 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.h:22 89 {*movdi_internal}
     (nil))
(call_insn 58 57 118 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE") [flags 0x41]  <function_decl 0x7fdf7cc52438 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.h:22 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 4 [0x4])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       13 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91
(note 118 58 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 59 118 61 6 (set (reg/f:DI 91 [ D.48868 ])
        (reg:DI 0 ax)) intcode.h:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 61 59 62 6 (set (reg:DI 4 si)
        (reg:DI 90 [ D.48867 ])) intcode.h:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ D.48867 ])
        (nil)))
(insn 62 61 63 6 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48868 ])) intcode.h:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48868 ])
        (nil)))
(call_insn 63 62 64 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEx") [flags 0x41]  <function_decl 0x7fdf7c9555e8 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.h:22 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       13 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 111
(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 7 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:23 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 66 65 67 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7fdf7b66a3f0 *.LC30>)) intcode.h:23 89 {*movdi_internal}
     (nil))
(insn 67 66 68 7 (set (reg:DI 5 di)
        (reg:DI 111)) intcode.h:23 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(call_insn 68 67 69 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc") [flags 0x41]  <function_decl 0x7fdf7d066e58 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) intcode.h:23 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       13 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 112
(note 69 68 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 8 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:21 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 71 70 72 8 (set (reg:DI 5 di)
        (reg:DI 112)) intcode.h:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(call_insn 72 71 127 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEppEv") [flags 0x3]  <function_decl 0x7fdf7be5d288 operator++>) [0 operator++ S1 A8])
            (const_int 0 [0]))) intcode.h:21 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 127 72 128 8 (set (pc)
        (label_ref 73)) intcode.h:21 654 {jump}
     (nil)
 -> 73)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 128 127 76)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 76 128 77 9 208 "" [1 uses])
(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fdf7b66a480 *.LC31>)) intcode.h:24 89 {*movdi_internal}
     (nil))
(insn 79 78 80 9 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fdf7c6c3240 cout>)) intcode.h:24 89 {*movdi_internal}
     (nil))
(call_insn 80 79 81 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41]  <function_decl 0x7fdf7c971a20 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) intcode.h:24 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 4 [0x4])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       13 (ABNORMAL,ABNORMAL_CALL,EH)
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93 113
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 10 (set (reg/f:DI 92 [ D.48869 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 os+0 S8 A64])) intcode.h:25 89 {*movdi_internal}
     (nil))
(insn 83 82 84 10 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:20 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 84 83 85 10 (set (reg:DI 5 di)
        (reg:DI 113)) intcode.h:20 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(call_insn 85 84 88 10 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.h:20 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 88 85 110 10 (set (reg:DI 93 [ <retval> ])
        (reg/f:DI 92 [ D.48869 ])) intcode.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.48869 ])
        (nil)))
(insn 110 88 111 10 (set (reg/i:DI 0 ax)
        (reg:DI 93 [ <retval> ])) intcode.h:26 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ <retval> ])
        (nil)))
(insn 111 110 112 10 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48871+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) intcode.h:26 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 112 111 129 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) intcode.h:26 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 115)
;;  succ:       15
;;              11 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 129 112 131 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 131 129 132 11 (set (pc)
        (label_ref 130)) 654 {jump}
     (nil)
 -> 130)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 132 131 121)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 12 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 115 116
(code_label/s 121 132 123 12 214 "" [1 uses])
(note 123 121 122 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 122 123 93 12 (set (reg:DI 116)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 93 122 94 12 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 94 93 95 12 (set (reg:DI 5 di)
        (reg:DI 115)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(call_insn 95 94 96 12 (call (mem:QI (symbol_ref:DI ("_ZNSaIcED1Ev") [flags 0x41]  <function_decl 0x7fdf7d57aa20 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 96 95 97 12 (set (reg/f:DI 87 [ D.48864 ])
        (reg:DI 116)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(insn 97 96 98 12 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48864 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48864 ])
        (nil)))
(call_insn 98 97 99 12 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 99 98 124)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 13 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 117 118
(code_label/s 124 99 126 13 215 "" [1 uses])
(note 126 124 125 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 125 126 102 13 (set (reg:DI 118)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 102 125 103 13 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) intcode.h:20 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 103 102 104 13 (set (reg:DI 5 di)
        (reg:DI 117)) intcode.h:20 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(call_insn 104 103 105 13 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fdf7d0b2360 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) intcode.h:20 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 105 104 106 13 (set (reg/f:DI 88 [ D.48865 ])
        (reg:DI 118)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118)
        (nil)))
(insn 106 105 107 13 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48865 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48865 ])
        (nil)))
(call_insn 107 106 108 13 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 108 107 130)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 130 108 119 14 216 "" [1 uses])
(note 119 130 113 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 113 119 114 14 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) intcode.h:26 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 114 113 115)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 115 114 120 15 213 "" [1 uses])
(note 120 115 116 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 116 120 0 15 (use (reg/i:DI 0 ax)) intcode.h:26 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = char*; <template-parameter-2-2> = void; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_, funcdef_no=2051, decl_uid=44067, cgraph_uid=670, symbol_order=672)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r92,l0) best DREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a8(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 36(l0): point = 1
   Insn 35(l0): point = 3
   Insn 34(l0): point = 5
   Insn 33(l0): point = 7
   Insn 32(l0): point = 9
   Insn 31(l0): point = 11
   Insn 41(l0): point = 13
   Insn 45(l0): point = 16
   Insn 25(l0): point = 19
   Insn 24(l0): point = 21
   Insn 23(l0): point = 23
   Insn 22(l0): point = 25
   Insn 21(l0): point = 27
   Insn 20(l0): point = 29
   Insn 19(l0): point = 31
   Insn 18(l0): point = 33
   Insn 17(l0): point = 35
   Insn 16(l0): point = 37
   Insn 15(l0): point = 39
   Insn 14(l0): point = 41
   Insn 13(l0): point = 43
   Insn 12(l0): point = 45
   Insn 11(l0): point = 47
   Insn 10(l0): point = 49
   Insn 9(l0): point = 51
   Insn 5(l0): point = 53
   Insn 4(l0): point = 55
   Insn 3(l0): point = 57
   Insn 2(l0): point = 59
 a0(r90): [4..5]
 a1(r96): [6..13]
 a2(r89): [10..11]
 a3(r95): [22..27]
 a4(r94): [24..29]
 a5(r93): [26..31]
 a6(r88): [36..43]
 a7(r87): [38..45]
 a8(r92): [40..41]
 a9(r91): [50..51]
Compressing live ranges: from 62 to 10 - 16%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r96): [2..3]
 a2(r89): [2..3]
 a3(r95): [4..5]
 a4(r94): [4..5]
 a5(r93): [4..5]
 a6(r88): [6..7]
 a7(r87): [6..7]
 a8(r92): [6..7]
 a9(r91): [8..9]
  regions=1, blocks=6, points=10
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    7:r87  l0     2    6:r88  l0     0    2:r89  l0     0    0:r90  l0     0
    9:r91  l0     0    8:r92  l0     1    5:r93  l0     1    4:r94  l0     2
    3:r95  l0     0    1:r96  l0     3
+++Costs: overall -10, reg -10, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = char*; <template-parameter-2-2> = void; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={7d,2u} r1={9d,3u} r2={6d,1u} r4={8d,3u} r5={11d,6u} r6={1d,5u} r7={1d,10u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,4u} r17={5d} r18={5d} r19={5d} r20={1d,16u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 460{400d,60u,0e} in 29{24 regular + 5 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 91 92 93 94 95
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/basic_string.h:534 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __beg+0 S8 A64])
        (reg:DI 4 si [ __beg ])) /usr/include/c++/5/bits/basic_string.h:534 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __beg ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __end+0 S8 A64])
        (reg:DI 1 dx [ __end ])) /usr/include/c++/5/bits/basic_string.h:534 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __end ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __a+0 S8 A64])
        (reg:DI 2 cx [ __a ])) /usr/include/c++/5/bits/basic_string.h:534 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ __a ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:536 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/basic_string.h:536 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv") [flags 0x41]  <function_decl 0x7fdf7d0530d8 _M_local_data>) [0 _M_local_data S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:536 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 87 [ D.48876 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.h:536 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 88 [ D.48877 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:536 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:536 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 1 dx)
        (reg:DI 92)) /usr/include/c++/5/bits/basic_string.h:536 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.48876 ])) /usr/include/c++/5/bits/basic_string.h:536 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48876 ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48877 ])) /usr/include/c++/5/bits/basic_string.h:536 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48877 ])
        (nil)))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_") [flags 0x41]  <function_decl 0x7fdf7d042af8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:536 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 19 18 20 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __end+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:537 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __beg+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:537 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:537 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 1 dx)
        (reg:DI 93)) /usr/include/c++/5/bits/basic_string.h:537 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (reg:DI 94)) /usr/include/c++/5/bits/basic_string.h:537 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 95)) /usr/include/c++/5/bits/basic_string.h:537 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 25 24 43 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_") [flags 0x3]  <function_decl 0x7fdf7bc2b948 _M_construct>) [0 _M_construct S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:537 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 43 25 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 45 43 46 3 (set (pc)
        (label_ref 44)) /usr/include/c++/5/bits/basic_string.h:537 654 {jump}
     (nil)
 -> 44)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 46 45 40)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 96
(code_label/s 40 46 42 4 219 "" [1 uses])
(note 42 40 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 42 31 4 (set (reg:DI 96)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 31 41 32 4 (set (reg/f:DI 89 [ D.48877 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:536 89 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.48877 ])) /usr/include/c++/5/bits/basic_string.h:536 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48877 ])
        (nil)))
(call_insn 33 32 34 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev") [flags 0x3]  <function_decl 0x7fdf7d0f9438 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:536 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 34 33 35 4 (set (reg/f:DI 90 [ D.48875 ])
        (reg:DI 96)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.48875 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48875 ])
        (nil)))
(call_insn 36 35 37 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 37 36 44)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 44 37 39 5 220 "" [1 uses])
(note 39 44 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<long long int, std::allocator<long long int> >::_Vector_impl::~_Vector_impl() (_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev, funcdef_no=2100, decl_uid=44616, cgraph_uid=718, symbol_order=720)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 11(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r87): [5..6]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<long long int, std::allocator<long long int> >::_Vector_impl::~_Vector_impl()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 106{93d,13u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:79 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 87)) /usr/include/c++/5/bits/stl_vector.h:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 8 7 11 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIxED2Ev") [flags 0x3]  <function_decl 0x7fdf7c16f870 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:79 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 8 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:79 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNSt12_Vector_baseIxSaIxEEC2Ev, funcdef_no=2102, decl_uid=42452, cgraph_uid=721, symbol_order=723)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 11(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r87): [5..6]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 106{93d,13u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:124 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.48878 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:125 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48878 ])) /usr/include/c++/5/bits/stl_vector.h:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48878 ])
        (nil)))
(call_insn 8 7 11 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC1Ev") [flags 0x3]  <function_decl 0x7fdf7c1760d8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:125 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 8 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:125 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNSt12_Vector_baseIxSaIxEED2Ev, funcdef_no=2105, decl_uid=42457, cgraph_uid=724, symbol_order=726)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a6(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a10(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a12(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 28(l0): point = 0
   Insn 25(l0): point = 2
   Insn 24(l0): point = 4
   Insn 23(l0): point = 6
   Insn 22(l0): point = 8
   Insn 21(l0): point = 10
   Insn 20(l0): point = 12
   Insn 19(l0): point = 14
   Insn 18(l0): point = 16
   Insn 17(l0): point = 18
   Insn 16(l0): point = 20
   Insn 15(l0): point = 22
   Insn 14(l0): point = 24
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 7(l0): point = 38
   Insn 6(l0): point = 40
   Insn 2(l0): point = 42
 a0(r95): [5..6]
 a1(r100): [11..16]
 a2(r94): [13..18]
 a3(r93): [15..22]
 a4(r99): [19..20]
 a5(r92): [23..24]
 a6(r98): [25..26]
 a7(r91): [27..28]
 a8(r90): [29..30]
 a9(r88): [29..36]
 a10(r89): [31..32]
 a11(r97): [33..34]
 a12(r87): [37..38]
 a13(r96): [39..40]
Compressing live ranges: from 45 to 22 - 48%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r100): [2..3]
 a2(r94): [2..3]
 a3(r93): [2..5]
 a4(r99): [4..5]
 a5(r92): [6..7]
 a6(r98): [8..9]
 a7(r91): [10..11]
 a8(r90): [12..13]
 a9(r88): [12..17]
 a10(r89): [14..15]
 a11(r97): [16..17]
 a12(r87): [18..19]
 a13(r96): [20..21]
  regions=1, blocks=3, points=22
    allocnos=14 (big 0), copies=0, conflicts=0, ranges=14
Disposition:
   12:r87  l0     0    9:r88  l0     1   10:r89  l0     0    8:r90  l0     0
    7:r91  l0     0    5:r92  l0     0    3:r93  l0     1    2:r94  l0     2
    0:r95  l0     0   13:r96  l0     0   11:r97  l0     0    6:r98  l0     0
    4:r99  l0     0    1:r100 l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={4d} r18={2d} r19={2d} r20={1d,8u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 218{183d,34u,1e} in 22{20 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ D.48879 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 96)
                (const_int 16 [0x10])) [0 this_2(D)->_M_impl._M_end_of_storage+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 88 [ D.48880 ])
        (reg/f:DI 87 [ D.48879 ])) /usr/include/c++/5/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48879 ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 89 [ D.48879 ])
        (mem/f/j:DI (reg/f:DI 97) [0 this_2(D)->_M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 90 [ D.48880 ])
        (reg/f:DI 89 [ D.48879 ])) /usr/include/c++/5/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48879 ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 91 [ D.48880 ])
                (minus:DI (reg:DI 88 [ D.48880 ])
                    (reg:DI 90 [ D.48880 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:160 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.48880 ])
        (expr_list:REG_DEAD (reg:DI 88 [ D.48880 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 98)
                (ashiftrt:DI (reg:DI 91 [ D.48880 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:160 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.48880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:DI (reg:DI 91 [ D.48880 ])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 14 13 15 2 (set (reg:DI 92 [ D.48880 ])
        (reg:DI 98)) /usr/include/c++/5/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 93 [ D.48881 ])
        (reg:DI 92 [ D.48880 ])) /usr/include/c++/5/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ D.48880 ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:160 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 94 [ D.48879 ])
        (mem/f/j:DI (reg/f:DI 99) [0 this_2(D)->_M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:160 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 1 dx)
        (reg:DI 93 [ D.48881 ])) /usr/include/c++/5/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ D.48881 ])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg/f:DI 94 [ D.48879 ])) /usr/include/c++/5/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.48879 ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 100)) /usr/include/c++/5/bits/stl_vector.h:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm") [flags 0x3]  <function_decl 0x7fdf7c176360 _M_deallocate>) [0 _M_deallocate S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:160 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 23 22 24 2 (set (reg/f:DI 95 [ D.48882 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:161 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.48882 ])) /usr/include/c++/5/bits/stl_vector.h:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.48882 ])
        (nil)))
(call_insn 25 24 28 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD1Ev") [flags 0x3]  <function_decl 0x7fdf7bbb8510 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:161 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 25 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:161 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<long long int>] (_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv, funcdef_no=2107, decl_uid=42165, cgraph_uid=726, symbol_order=728)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ D.48883 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:114 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48883 ])) /usr/include/c++/5/bits/stl_vector.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48883 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:114 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = long long int*; _Tp = long long int] (_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E, funcdef_no=2108, decl_uid=44632, cgraph_uid=727, symbol_order=729)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 4(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r88): [5..8]
 a1(r87): [7..10]
Compressing live ranges: from 19 to 2 - 10%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     1    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = long long int*; _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 115{95d,20u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_construct.h:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_construct.h:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 D.44635+0 S8 A64])
        (reg:DI 1 dx [ D.44635 ])) /usr/include/c++/5/bits/stl_construct.h:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.44635 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])) /usr/include/c++/5/bits/stl_construct.h:151 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_construct.h:151 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 87)) /usr/include/c++/5/bits/stl_construct.h:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/include/c++/5/bits/stl_construct.h:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 12 11 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPxEvT_S1_") [flags 0x3]  <function_decl 0x7fdf7bc6b870 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_construct.h:151 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 12 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_construct.h:152 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::vector<_Tp, _Alloc>::_M_move_assign(std::vector<_Tp, _Alloc>&&, std::true_type) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::true_type = std::integral_constant<bool, true>] (_ZNSt6vectorIxSaIxEE14_M_move_assignEOS1_St17integral_constantIbLb1EE, funcdef_no=2109, decl_uid=42968, cgraph_uid=728, symbol_order=730)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 48.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 48(l0): point = 1
   Insn 47(l0): point = 4
   Insn 46(l0): point = 6
   Insn 54(l0): point = 8
   Insn 44(l0): point = 10
   Insn 43(l0): point = 12
   Insn 42(l0): point = 14
   Insn 41(l0): point = 16
   Insn 40(l0): point = 18
   Insn 39(l0): point = 20
   Insn 38(l0): point = 22
   Insn 37(l0): point = 24
   Insn 36(l0): point = 26
   Insn 35(l0): point = 28
   Insn 34(l0): point = 30
   Insn 33(l0): point = 32
   Insn 32(l0): point = 34
   Insn 31(l0): point = 36
   Insn 30(l0): point = 38
   Insn 29(l0): point = 40
   Insn 28(l0): point = 42
   Insn 27(l0): point = 44
   Insn 26(l0): point = 46
   Insn 25(l0): point = 48
   Insn 24(l0): point = 50
   Insn 23(l0): point = 52
   Insn 22(l0): point = 54
   Insn 21(l0): point = 56
   Insn 20(l0): point = 58
   Insn 19(l0): point = 60
   Insn 18(l0): point = 62
   Insn 17(l0): point = 64
   Insn 16(l0): point = 66
   Insn 15(l0): point = 68
   Insn 14(l0): point = 70
   Insn 13(l0): point = 72
   Insn 12(l0): point = 74
   Insn 11(l0): point = 76
   Insn 10(l0): point = 78
   Insn 9(l0): point = 80
   Insn 8(l0): point = 82
   Insn 5(l0): point = 84
   Insn 3(l0): point = 86
   Insn 2(l0): point = 88
 a0(r100): [13..14]
 a1(r94): [19..22]
 a2(r92): [21..30]
 a3(r93): [27..28]
 a4(r91): [35..36]
 a5(r90): [41..44]
 a6(r89): [43..46]
 a7(r88): [51..56]
 a8(r99): [53..54]
 a9(r98): [61..62]
 a10(r97): [67..70]
 a11(r96): [69..72]
 a12(r95): [77..80]
 a13(r87): [79..82]
Compressing live ranges: from 91 to 18 - 19%
Ranges after the compression:
 a0(r100): [0..1]
 a1(r94): [2..3]
 a2(r92): [2..5]
 a3(r93): [4..5]
 a4(r91): [6..7]
 a5(r90): [8..9]
 a6(r89): [8..9]
 a7(r88): [10..11]
 a8(r99): [10..11]
 a9(r98): [12..13]
 a10(r97): [14..15]
 a11(r96): [14..15]
 a12(r95): [16..17]
 a13(r87): [16..17]
  regions=1, blocks=5, points=18
    allocnos=14 (big 0), copies=0, conflicts=0, ranges=14
Disposition:
   13:r87  l0     1    7:r88  l0     0    6:r89  l0     1    5:r90  l0     0
    4:r91  l0     0    2:r92  l0     3    3:r93  l0     0    1:r94  l0     0
   12:r95  l0     0   11:r96  l0     1   10:r97  l0     0    9:r98  l0     0
    8:r99  l0     1    0:r100 l0     0
+++Costs: overall -14, reg -14, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::vector<_Tp, _Alloc>::_M_move_assign(std::vector<_Tp, _Alloc>&&, std::true_type) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::true_type = std::integral_constant<bool, true>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={11d,2u} r1={11d} r2={11d} r4={16d,6u} r5={20d,10u} r6={1d,4u} r7={1d,14u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,3u} r17={18d,1u} r18={10d} r19={10d} r20={1d,20u} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 849{775d,74u,0e} in 44{34 regular + 10 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:1454 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 __x+0 S8 A64])
        (reg:DI 4 si [ __x ])) /usr/include/c++/5/bits/stl_vector.h:1454 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __x ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48887+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1454 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg/f:DI 87 [ D.48884 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1456 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1456 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.48884 ])) /usr/include/c++/5/bits/stl_vector.h:1456 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48884 ])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 95)) /usr/include/c++/5/bits/stl_vector.h:1456 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZNKSt12_Vector_baseIxSaIxEE13get_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149ca8 get_allocator>) [0 get_allocator S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:1456 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1456 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1456 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 96)) /usr/include/c++/5/bits/stl_vector.h:1456 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 97)) /usr/include/c++/5/bits/stl_vector.h:1456 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEEC1ERKS0_") [flags 0x3]  <function_decl 0x7fdf7bdc0948 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:1456 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1456 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 98)) /usr/include/c++/5/bits/stl_vector.h:1456 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIxED1Ev") [flags 0x3]  <function_decl 0x7fdf7c16f798 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:1456 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 88 [ D.48885 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1457 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1457 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (reg:DI 99)) /usr/include/c++/5/bits/stl_vector.h:1457 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48885 ])) /usr/include/c++/5/bits/stl_vector.h:1457 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48885 ])
        (nil)))
(call_insn 25 24 26 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_") [flags 0x3]  <function_decl 0x7fdf7c16fbd0 _M_swap_data>) [0 _M_swap_data S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:1457 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 2 (set (reg/f:DI 89 [ D.48885 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1458 89 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 90 [ D.48885 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1458 89 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.48885 ])) /usr/include/c++/5/bits/stl_vector.h:1458 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48885 ])
        (nil)))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.48885 ])) /usr/include/c++/5/bits/stl_vector.h:1458 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48885 ])
        (nil)))
(call_insn 30 29 31 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_") [flags 0x3]  <function_decl 0x7fdf7c16fbd0 _M_swap_data>) [0 _M_swap_data S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:1458 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 31 30 32 2 (set (reg/f:DI 91 [ D.48884 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1459 89 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48884 ])) /usr/include/c++/5/bits/stl_vector.h:1459 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48884 ])
        (nil)))
(call_insn 33 32 34 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149af8 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1459 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 34 33 35 2 (set (reg/f:DI 92 [ D.48886 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1459 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 35 34 36 2 (set (reg/f:DI 93 [ D.48884 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1459 89 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.48884 ])) /usr/include/c++/5/bits/stl_vector.h:1459 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.48884 ])
        (nil)))
(call_insn 37 36 38 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149af8 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1459 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 2 (set (reg/f:DI 94 [ D.48886 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1459 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 39 38 40 2 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.48886 ])) /usr/include/c++/5/bits/stl_vector.h:1459 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.48886 ])
        (nil)))
(insn 40 39 41 2 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.48886 ])) /usr/include/c++/5/bits/stl_vector.h:1459 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.48886 ])
        (nil)))
(call_insn 41 40 42 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt15__alloc_on_moveISaIxEEvRT_S2_") [flags 0x3]  <function_decl 0x7fdf7bc6bd80 __alloc_on_move>) [0 __alloc_on_move S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:1459 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 42 41 43 2 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1456 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg:DI 100)) /usr/include/c++/5/bits/stl_vector.h:1456 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 44 43 54 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEED1Ev") [flags 0x3]  <function_decl 0x7fdf7bdc0ca8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:1456 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 44 46 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:1460 684 {nop}
     (nil))
(insn 46 54 47 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48887+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_vector.h:1460 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 47 46 52 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:1460 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 50)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 52 47 48 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 48 52 49 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:1460 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 49 48 50)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 50 49 53 4 228 "" [1 uses])
(note 53 50 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr _Tp&& std::forward(typename std::remove_reference<_From>::type&) [with _Tp = const long long int&; typename std::remove_reference<_From>::type = const long long int] (_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=2133, decl_uid=45137, cgraph_uid=751, symbol_order=753)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr _Tp&& std::forward(typename std::remove_reference<_From>::type&) [with _Tp = const long long int&; typename std::remove_reference<_From>::type = const long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])
        (reg:DI 5 di [ __t ])) /usr/include/c++/5/bits/move.h:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __t ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ D.48889 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])) /usr/include/c++/5/bits/move.h:77 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48889 ])) /usr/include/c++/5/bits/move.h:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48889 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/move.h:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/move.h:77 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = long long int; _Args = {const long long int&}; _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>] (_ZNSt16allocator_traitsISaIxEE9constructIxJRKxEEEvRS0_PT_DpOT0_, funcdef_no=2132, decl_uid=44737, cgraph_uid=752, symbol_order=754)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AD_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 20(l0): point = 0
   Insn 17(l0): point = 2
   Insn 16(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 8(l0): point = 20
   Insn 4(l0): point = 22
   Insn 3(l0): point = 24
   Insn 2(l0): point = 26
 a0(r90): [5..10]
 a1(r89): [7..12]
 a2(r87): [9..14]
 a3(r88): [19..20]
Compressing live ranges: from 29 to 4 - 13%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [0..1]
 a2(r87): [0..1]
 a3(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     1    3:r88  l0     0    1:r89  l0     2    0:r90  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = long long int; _Args = {const long long int&}; _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,1u} r1={4d,2u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,8u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 198{171d,27u,0e} in 14{12 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/include/c++/5/bits/alloc_traits.h:529 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/include/c++/5/bits/alloc_traits.h:529 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __args#0+0 S8 A64])
        (reg:DI 1 dx [ __args#0 ])) /usr/include/c++/5/bits/alloc_traits.h:529 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __args#0 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __args#0+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE") [flags 0x3]  <function_decl 0x7fdf7bc8d360 forward>) [0 forward S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/alloc_traits.h:530 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 87 [ D.48890 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ D.48890 ])) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48890 ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 89)) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 17 16 20 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIxE9constructIxJRKxEEEvPT_DpOT0_") [flags 0x3]  <function_decl 0x7fdf7bc8d948 construct>) [0 construct S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/alloc_traits.h:530 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 17 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/alloc_traits.h:530 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const long long int&}; _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJRKxEEEvDpOT_, funcdef_no=2134, decl_uid=44767, cgraph_uid=753, symbol_order=755)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 12 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 105.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 127.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 145.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 152.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r153: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r153,l0) best AREG, allocno GENERAL_REGS
    r152: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r152,l0) best SIREG, allocno GENERAL_REGS
    r151: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r151,l0) best DREG, allocno GENERAL_REGS
    r150: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r150,l0) best DIREG, allocno GENERAL_REGS
    r149: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r149,l0) best SIREG, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r147,l0) best DIREG, allocno GENERAL_REGS
    r146: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r146,l0) best AREG, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r132,l0) best DREG, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r128,l0) best DIREG, allocno GENERAL_REGS
    r127: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r127,l0) best DIREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r125,l0) best SIREG, allocno GENERAL_REGS
    r124: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a66 (r124,l0) best DIREG, allocno GENERAL_REGS
    r123: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r123,l0) best DIREG, allocno GENERAL_REGS
    r122: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r122,l0) best DIREG, allocno GENERAL_REGS
    r121: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r121,l0) best AD_REGS, allocno GENERAL_REGS
    r120: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r120,l0) best DIREG, allocno GENERAL_REGS
    r119: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r119,l0) best DIREG, allocno GENERAL_REGS
    r118: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r118,l0) best SIREG, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r116,l0) best AREG, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r112,l0) best DIREG, allocno GENERAL_REGS
    r111: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r111,l0) best SIREG, allocno GENERAL_REGS
    r110: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r110,l0) best DREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r102,l0) best SIREG, allocno GENERAL_REGS
    r101: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r101,l0) best AD_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r90,l0) best AD_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r121,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a8(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a13(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a14(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a16(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a17(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a18(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a23(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a25(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a26(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a28(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a29(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a30(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a31(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a33(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a34(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a35(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a36(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a37(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a38(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a39(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a40(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r101,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a42(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a43(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a44(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a46(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a47(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a49(r96,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a50(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a51(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a52(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a53(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a55(r90,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a56(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a57(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a58(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a59(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a60(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a61(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a62(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a63(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a64(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a65(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a66(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 152(l0): point = 1
   Insn 151(l0): point = 3
   Insn 150(l0): point = 5
   Insn 149(l0): point = 7
   Insn 161(l0): point = 9
   Insn 145(l0): point = 12
   Insn 143(l0): point = 15
   Insn 142(l0): point = 17
   Insn 141(l0): point = 19
   Insn 140(l0): point = 21
   Insn 139(l0): point = 23
   Insn 138(l0): point = 25
   Insn 137(l0): point = 27
   Insn 134(l0): point = 30
   Insn 133(l0): point = 32
   Insn 132(l0): point = 34
   Insn 131(l0): point = 36
   Insn 130(l0): point = 38
   Insn 129(l0): point = 40
   Insn 128(l0): point = 42
   Insn 127(l0): point = 44
   Insn 126(l0): point = 46
   Insn 125(l0): point = 48
   Insn 167(l0): point = 51
   Insn 119(l0): point = 54
   Insn 118(l0): point = 56
   Insn 117(l0): point = 58
   Insn 116(l0): point = 60
   Insn 115(l0): point = 62
   Insn 114(l0): point = 64
   Insn 113(l0): point = 66
   Insn 112(l0): point = 68
   Insn 111(l0): point = 70
   Insn 110(l0): point = 72
   Insn 109(l0): point = 74
   Insn 107(l0): point = 77
   Insn 106(l0): point = 79
   Insn 105(l0): point = 81
   Insn 104(l0): point = 83
   Insn 103(l0): point = 85
   Insn 158(l0): point = 87
   Insn 164(l0): point = 90
   Insn 98(l0): point = 92
   Insn 97(l0): point = 94
   Insn 96(l0): point = 96
   Insn 95(l0): point = 98
   Insn 94(l0): point = 100
   Insn 93(l0): point = 102
   Insn 92(l0): point = 104
   Insn 91(l0): point = 106
   Insn 90(l0): point = 108
   Insn 89(l0): point = 110
   Insn 88(l0): point = 112
   Insn 87(l0): point = 114
   Insn 86(l0): point = 116
   Insn 85(l0): point = 118
   Insn 84(l0): point = 120
   Insn 83(l0): point = 122
   Insn 82(l0): point = 124
   Insn 81(l0): point = 126
   Insn 80(l0): point = 128
   Insn 79(l0): point = 130
   Insn 78(l0): point = 132
   Insn 77(l0): point = 134
   Insn 76(l0): point = 136
   Insn 75(l0): point = 138
   Insn 74(l0): point = 140
   Insn 73(l0): point = 142
   Insn 72(l0): point = 144
   Insn 71(l0): point = 146
   Insn 70(l0): point = 148
   Insn 69(l0): point = 150
   Insn 68(l0): point = 152
   Insn 67(l0): point = 154
   Insn 66(l0): point = 156
   Insn 65(l0): point = 158
   Insn 64(l0): point = 160
   Insn 63(l0): point = 162
   Insn 62(l0): point = 164
   Insn 61(l0): point = 166
   Insn 60(l0): point = 168
   Insn 59(l0): point = 170
   Insn 58(l0): point = 172
   Insn 57(l0): point = 174
   Insn 56(l0): point = 176
   Insn 54(l0): point = 178
   Insn 53(l0): point = 181
   Insn 52(l0): point = 183
   Insn 51(l0): point = 185
   Insn 50(l0): point = 187
   Insn 49(l0): point = 189
   Insn 48(l0): point = 191
   Insn 47(l0): point = 193
   Insn 46(l0): point = 195
   Insn 45(l0): point = 197
   Insn 44(l0): point = 199
   Insn 43(l0): point = 201
   Insn 42(l0): point = 203
   Insn 41(l0): point = 205
   Insn 40(l0): point = 207
   Insn 39(l0): point = 209
   Insn 38(l0): point = 211
   Insn 37(l0): point = 213
   Insn 36(l0): point = 215
   Insn 35(l0): point = 217
   Insn 34(l0): point = 219
   Insn 33(l0): point = 221
   Insn 32(l0): point = 223
   Insn 31(l0): point = 225
   Insn 30(l0): point = 227
   Insn 29(l0): point = 229
   Insn 28(l0): point = 231
   Insn 27(l0): point = 233
   Insn 26(l0): point = 235
   Insn 25(l0): point = 237
   Insn 24(l0): point = 239
   Insn 23(l0): point = 241
   Insn 22(l0): point = 243
   Insn 21(l0): point = 245
   Insn 20(l0): point = 247
   Insn 19(l0): point = 249
   Insn 18(l0): point = 251
   Insn 17(l0): point = 253
   Insn 16(l0): point = 255
   Insn 15(l0): point = 257
   Insn 14(l0): point = 259
   Insn 13(l0): point = 261
   Insn 12(l0): point = 263
   Insn 11(l0): point = 265
   Insn 10(l0): point = 267
   Insn 9(l0): point = 269
   Insn 8(l0): point = 271
   Insn 7(l0): point = 273
   Insn 3(l0): point = 275
   Insn 2(l0): point = 277
 a0(r123): [4..5]
 a1(r153): [6..9]
 a2(r122): [18..27]
 a3(r152): [20..23]
 a4(r151): [22..25]
 a5(r150): [33..38]
 a6(r149): [35..40]
 a7(r121): [37..42]
 a8(r120): [47..48]
 a9(r119): [57..60]
 a10(r118): [59..62]
 a11(r148): [63..64]
 a12(r117): [63..66]
 a13(r116): [67..68]
 a14(r147): [73..74]
 a15(r115): [84..85]
 a16(r146): [86..87]
 a17(r145): [93..94]
 a18(r114): [93..96]
 a19(r144): [97..98]
 a20(r113): [97..100]
 a21(r143): [101..102]
 a22(r141): [105..108]
 a23(r142): [105..106]
 a24(r139): [111..114]
 a25(r140): [111..112]
 a26(r112): [119..124]
 a27(r111): [121..126]
 a28(r110): [123..130]
 a29(r138): [127..128]
 a30(r109): [131..132]
 a31(r137): [133..134]
 a32(r108): [135..136]
 a33(r107): [137..138]
 a34(r105): [137..144]
 a35(r106): [139..140]
 a36(r136): [141..142]
 a37(r104): [145..146]
 a38(r135): [147..148]
 a39(r103): [153..158]
 a40(r102): [155..162]
 a41(r101): [157..166]
 a42(r134): [159..160]
 a43(r133): [163..164]
 a44(r100): [171..172]
 a45(r99): [177..178]
 a46(r98): [184..193]
 a47(r97): [186..197]
 a48(r132): [188..191]
 a49(r96): [190..201]
 a50(r131): [194..195]
 a51(r130): [198..199]
 a52(r95): [206..207]
 a53(r94): [214..219]
 a54(r93): [216..221]
 a55(r90): [218..235]
 a56(r129): [222..223]
 a57(r92): [222..225]
 a58(r91): [226..227]
 a59(r128): [232..233]
 a60(r127): [240..241]
 a61(r126): [244..245]
 a62(r89): [248..249]
 a63(r88): [254..259]
 a64(r125): [256..257]
 a65(r87): [262..263]
 a66(r124): [268..273]
Compressing live ranges: from 280 to 90 - 32%
Ranges after the compression:
 a0(r123): [0..1]
 a1(r153): [2..3]
 a2(r122): [4..5]
 a3(r152): [4..5]
 a4(r151): [4..5]
 a5(r150): [6..7]
 a6(r149): [6..7]
 a7(r121): [6..7]
 a8(r120): [8..9]
 a9(r119): [10..11]
 a10(r118): [10..11]
 a11(r148): [12..13]
 a12(r117): [12..13]
 a13(r116): [14..15]
 a14(r147): [16..17]
 a15(r115): [18..19]
 a16(r146): [20..21]
 a17(r145): [22..23]
 a18(r114): [22..23]
 a19(r144): [24..25]
 a20(r113): [24..25]
 a21(r143): [26..27]
 a22(r141): [28..29]
 a23(r142): [28..29]
 a24(r139): [30..31]
 a25(r140): [30..31]
 a26(r112): [32..33]
 a27(r111): [32..33]
 a28(r110): [32..35]
 a29(r138): [34..35]
 a30(r109): [36..37]
 a31(r137): [38..39]
 a32(r108): [40..41]
 a33(r107): [42..43]
 a34(r105): [42..47]
 a35(r106): [44..45]
 a36(r136): [46..47]
 a37(r104): [48..49]
 a38(r135): [50..51]
 a39(r103): [52..53]
 a40(r102): [52..55]
 a41(r101): [52..57]
 a42(r134): [54..55]
 a43(r133): [56..57]
 a44(r100): [58..59]
 a45(r99): [60..61]
 a46(r98): [62..63]
 a47(r97): [62..65]
 a48(r132): [62..63]
 a49(r96): [62..67]
 a50(r131): [64..65]
 a51(r130): [66..67]
 a52(r95): [68..69]
 a53(r94): [70..71]
 a54(r93): [70..71]
 a55(r90): [70..77]
 a56(r129): [72..73]
 a57(r92): [72..73]
 a58(r91): [74..75]
 a59(r128): [76..77]
 a60(r127): [78..79]
 a61(r126): [80..81]
 a62(r89): [82..83]
 a63(r88): [84..85]
 a64(r125): [84..85]
 a65(r87): [86..87]
 a66(r124): [88..89]
  regions=1, blocks=12, points=90
    allocnos=67 (big 0), copies=0, conflicts=0, ranges=67
Disposition:
   65:r87  l0     0   63:r88  l0     0   62:r89  l0     0   55:r90  l0     3
   58:r91  l0     0   57:r92  l0     1   54:r93  l0     2   53:r94  l0     0
   52:r95  l0     0   49:r96  l0     2   47:r97  l0     4   46:r98  l0     0
   45:r99  l0     0   44:r100 l0     0   41:r101 l0     1   40:r102 l0     2
   39:r103 l0     0   37:r104 l0     0   34:r105 l0     1   35:r106 l0     0
   33:r107 l0     0   32:r108 l0     0   30:r109 l0     0   28:r110 l0     1
   27:r111 l0     2   26:r112 l0     0   20:r113 l0     1   18:r114 l0     1
   15:r115 l0     0   13:r116 l0     0   12:r117 l0     1   10:r118 l0     1
    9:r119 l0     0    8:r120 l0     0    7:r121 l0     1    2:r122 l0     0
    0:r123 l0     0   66:r124 l0     0   64:r125 l0     1   61:r126 l0     0
   60:r127 l0     0   59:r128 l0     0   56:r129 l0     0   51:r130 l0     0
   50:r131 l0     0   48:r132 l0     1   43:r133 l0     0   42:r134 l0     0
   38:r135 l0     0   36:r136 l0     0   31:r137 l0     0   29:r138 l0     0
   24:r139 l0     0   25:r140 l0     1   22:r141 l0     0   23:r142 l0     1
   21:r143 l0     0   19:r144 l0     0   17:r145 l0     0   16:r146 l0     0
   14:r147 l0     0   11:r148 l0     0    6:r149 l0     2    5:r150 l0     0
    4:r151 l0     1    3:r152 l0     2    1:r153 l0     3
+++Costs: overall -39, reg -39, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const long long int&}; _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={22d,11u} r1={29d,7u} r2={21d,1u} r4={29d,10u} r5={37d,18u} r6={1d,11u} r7={1d,30u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,10u} r17={29d,1u} r18={19d} r19={19d} r20={1d,56u,4e} r21={20d} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={20d} r38={20d} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r53={19d} r54={19d} r55={19d} r56={19d} r57={19d} r58={19d} r59={19d} r60={19d} r61={19d} r62={19d} r63={19d} r64={19d} r65={19d} r66={19d} r67={19d} r68={19d} r69={19d} r70={19d} r71={19d} r72={19d} r73={19d} r74={19d} r75={19d} r76={19d} r77={19d} r78={19d} r79={19d} r80={19d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u,1e} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u,1e} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u,1e} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u,1e} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} 
;;    total ref usage 1732{1502d,222u,8e} in 135{116 regular + 19 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 124 125 126 127 128 129 130 131 132
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/vector.tcc:407 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __args#0+0 S8 A64])
        (reg:DI 4 si [ __args#0 ])) /usr/include/c++/5/bits/vector.tcc:407 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __args#0 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fdf7b696120 *.LC32>)) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (const_int 1 [0x1])) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 124)) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc") [flags 0x3]  <function_decl 0x7fdf7bdb7438 _M_check_len>) [0 _M_check_len S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:411 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 12 11 13 2 (set (reg:DI 87 [ D.48892 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])
        (reg:DI 87 [ D.48892 ])) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.48892 ])
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 88 [ D.48893 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 125)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 125)) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48893 ])) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48893 ])
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm") [flags 0x3]  <function_decl 0x7fdf7c176288 _M_allocate>) [0 _M_allocate S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:412 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 89 [ D.48894 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])
        (reg/f:DI 89 [ D.48894 ])) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48894 ])
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:413 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
        (reg/f:DI 126)) /usr/include/c++/5/bits/vector.tcc:413 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 126)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __args#0+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:417 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 127)) /usr/include/c++/5/bits/vector.tcc:417 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(call_insn 25 24 26 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE") [flags 0x3]  <function_decl 0x7fdf7bc8d360 forward>) [0 forward S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:417 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 2 (set (reg/f:DI 90 [ D.48895 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:417 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 128)) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128)
        (nil)))
(call_insn 29 28 30 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE4sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195438 size>) [0 size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:416 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 30 29 31 2 (set (reg:DI 91 [ D.48896 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 31 30 32 2 (parallel [
            (set (reg:DI 92 [ D.48896 ])
                (ashift:DI (reg:DI 91 [ D.48896 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:416 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.48896 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 2 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (parallel [
            (set (reg/f:DI 93 [ D.48897 ])
                (plus:DI (reg:DI 92 [ D.48896 ])
                    (reg/f:DI 129)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:416 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (expr_list:REG_DEAD (reg:DI 92 [ D.48896 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])
                        (reg:DI 92 [ D.48896 ]))
                    (nil))))))
(insn 34 33 35 2 (set (reg/f:DI 94 [ D.48898 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 1 dx)
        (reg/f:DI 90 [ D.48895 ])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48895 ])
        (nil)))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (reg/f:DI 93 [ D.48897 ])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.48897 ])
        (nil)))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.48898 ])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.48898 ])
        (nil)))
(call_insn 38 37 39 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIxEE9constructIxJRKxEEEvRS0_PT_DpOT0_") [flags 0x3]  <function_decl 0x7fdf7bbd4870 construct>) [0 construct S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:416 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 39 38 40 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:418 89 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg/f:DI 95 [ D.48893 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:423 89 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.48893 ])) /usr/include/c++/5/bits/vector.tcc:423 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.48893 ])
        (nil)))
(call_insn 42 41 43 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149af8 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:423 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 44 2 (set (reg/f:DI 96 [ D.48899 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:423 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 44 43 45 2 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:422 89 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg/f:DI 97 [ D.48897 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 130)
                (const_int 8 [0x8])) [0 this_6(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
(insn 46 45 47 2 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:422 89 {*movdi_internal}
     (nil))
(insn 47 46 48 2 (set (reg/f:DI 98 [ D.48897 ])
        (mem/f/j:DI (reg/f:DI 131) [0 this_6(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (nil)))
(insn 48 47 49 2 (set (reg:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (nil))
(insn 49 48 50 2 (set (reg:DI 2 cx)
        (reg/f:DI 96 [ D.48899 ])) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.48899 ])
        (nil)))
(insn 50 49 51 2 (set (reg:DI 1 dx)
        (reg:DI 132)) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(insn 51 50 52 2 (set (reg:DI 4 si)
        (reg/f:DI 97 [ D.48897 ])) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.48897 ])
        (nil)))
(insn 52 51 53 2 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.48897 ])) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.48897 ])
        (nil)))
(call_insn 53 52 156 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_") [flags 0x3]  <function_decl 0x7fdf7bc951b0 __uninitialized_move_if_noexcept_a>) [0 __uninitialized_move_if_noexcept_a S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:420 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 1 [0x1])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 133 134 135 136 137 138 139 140 141 142 143 144 145
(note 156 53 54 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 54 156 56 3 (set (reg/f:DI 99 [ D.48894 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 56 54 57 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
        (reg/f:DI 99 [ D.48894 ])) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.48894 ])
        (nil)))
(insn 57 56 58 3 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:425 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 58 57 59 3 (set (reg/f:DI 100 [ D.48893 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:437 89 {*movdi_internal}
     (nil))
(insn 59 58 60 3 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.48893 ])) /usr/include/c++/5/bits/vector.tcc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.48893 ])
        (nil)))
(call_insn 60 59 61 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149af8 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:437 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 62 3 (set (reg/f:DI 101 [ D.48899 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 62 61 63 3 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (nil))
(insn 63 62 64 3 (set (reg/f:DI 102 [ D.48897 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 133)
                (const_int 8 [0x8])) [0 this_6(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133)
        (nil)))
(insn 64 63 65 3 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (nil))
(insn 65 64 66 3 (set (reg/f:DI 103 [ D.48897 ])
        (mem/f/j:DI (reg/f:DI 134) [0 this_6(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134)
        (nil)))
(insn 66 65 67 3 (set (reg:DI 1 dx)
        (reg/f:DI 101 [ D.48899 ])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.48899 ])
        (nil)))
(insn 67 66 68 3 (set (reg:DI 4 si)
        (reg/f:DI 102 [ D.48897 ])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.48897 ])
        (nil)))
(insn 68 67 69 3 (set (reg:DI 5 di)
        (reg/f:DI 103 [ D.48897 ])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.48897 ])
        (nil)))
(call_insn 69 68 70 3 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E") [flags 0x3]  <function_decl 0x7fdf7bbb8e58 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:436 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 70 69 71 3 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:440 89 {*movdi_internal}
     (nil))
(insn 71 70 72 3 (set (reg/f:DI 104 [ D.48897 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 135)
                (const_int 16 [0x10])) [0 this_6(D)->D.43079._M_impl._M_end_of_storage+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135)
        (nil)))
(insn 72 71 73 3 (set (reg:DI 105 [ D.48900 ])
        (reg/f:DI 104 [ D.48897 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.48897 ])
        (nil)))
(insn 73 72 74 3 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:440 89 {*movdi_internal}
     (nil))
(insn 74 73 75 3 (set (reg/f:DI 106 [ D.48897 ])
        (mem/f/j:DI (reg/f:DI 136) [0 this_6(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136)
        (nil)))
(insn 75 74 76 3 (set (reg:DI 107 [ D.48900 ])
        (reg/f:DI 106 [ D.48897 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ D.48897 ])
        (nil)))
(insn 76 75 77 3 (parallel [
            (set (reg:DI 108 [ D.48900 ])
                (minus:DI (reg:DI 105 [ D.48900 ])
                    (reg:DI 107 [ D.48900 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:438 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 107 [ D.48900 ])
        (expr_list:REG_DEAD (reg:DI 105 [ D.48900 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 77 76 78 3 (parallel [
            (set (reg:DI 137)
                (ashiftrt:DI (reg:DI 108 [ D.48900 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:438 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 108 [ D.48900 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:DI (reg:DI 108 [ D.48900 ])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 78 77 79 3 (set (reg:DI 109 [ D.48900 ])
        (reg:DI 137)) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137)
        (nil)))
(insn 79 78 80 3 (set (reg:DI 110 [ D.48896 ])
        (reg:DI 109 [ D.48900 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109 [ D.48900 ])
        (nil)))
(insn 80 79 81 3 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (nil))
(insn 81 80 82 3 (set (reg/f:DI 111 [ D.48897 ])
        (mem/f/j:DI (reg/f:DI 138) [0 this_6(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138)
        (nil)))
(insn 82 81 83 3 (set (reg/f:DI 112 [ D.48893 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (nil))
(insn 83 82 84 3 (set (reg:DI 1 dx)
        (reg:DI 110 [ D.48896 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ D.48896 ])
        (nil)))
(insn 84 83 85 3 (set (reg:DI 4 si)
        (reg/f:DI 111 [ D.48897 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.48897 ])
        (nil)))
(insn 85 84 86 3 (set (reg:DI 5 di)
        (reg/f:DI 112 [ D.48893 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.48893 ])
        (nil)))
(call_insn 86 85 87 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm") [flags 0x3]  <function_decl 0x7fdf7c176360 _M_deallocate>) [0 _M_deallocate S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:438 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 87 86 88 3 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:441 89 {*movdi_internal}
     (nil))
(insn 88 87 89 3 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:441 89 {*movdi_internal}
     (nil))
(insn 89 88 90 3 (set (mem/f/j:DI (reg/f:DI 139) [0 this_6(D)->D.43079._M_impl._M_start+0 S8 A64])
        (reg/f:DI 140)) /usr/include/c++/5/bits/vector.tcc:441 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140)
        (expr_list:REG_DEAD (reg/f:DI 139)
            (nil))))
(insn 90 89 91 3 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:442 89 {*movdi_internal}
     (nil))
(insn 91 90 92 3 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:442 89 {*movdi_internal}
     (nil))
(insn 92 91 93 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 141)
                (const_int 8 [0x8])) [0 this_6(D)->D.43079._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 142)) /usr/include/c++/5/bits/vector.tcc:442 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 142)
        (expr_list:REG_DEAD (reg/f:DI 141)
            (nil))))
(insn 93 92 94 3 (set (reg:DI 143)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:443 89 {*movdi_internal}
     (nil))
(insn 94 93 95 3 (parallel [
            (set (reg:DI 113 [ D.48896 ])
                (ashift:DI (reg:DI 143)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:443 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 143)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 95 94 96 3 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:443 89 {*movdi_internal}
     (nil))
(insn 96 95 97 3 (parallel [
            (set (reg/f:DI 114 [ D.48897 ])
                (plus:DI (reg:DI 113 [ D.48896 ])
                    (reg/f:DI 144)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:443 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 144)
        (expr_list:REG_DEAD (reg:DI 113 [ D.48896 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])
                        (reg:DI 113 [ D.48896 ]))
                    (nil))))))
(insn 97 96 98 3 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:443 89 {*movdi_internal}
     (nil))
(insn 98 97 164 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 145)
                (const_int 16 [0x10])) [0 this_6(D)->D.43079._M_impl._M_end_of_storage+0 S8 A64])
        (reg/f:DI 114 [ D.48897 ])) /usr/include/c++/5/bits/vector.tcc:443 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 145)
        (expr_list:REG_DEAD (reg/f:DI 114 [ D.48897 ])
            (nil))))
(jump_insn 164 98 165 3 (set (pc)
        (label_ref 163)) /usr/include/c++/5/bits/vector.tcc:444 654 {jump}
     (nil)
 -> 163)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 165 164 157)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 146
(code_label/s 157 165 159 4 237 "" [1 uses])
(note 159 157 158 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 158 159 103 4 (set (reg:DI 146)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 103 158 104 4 (set (reg/f:DI 115 [ D.48901 ])
        (reg:DI 146)) /usr/include/c++/5/bits/vector.tcc:427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(insn 104 103 105 4 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.48901 ])) /usr/include/c++/5/bits/vector.tcc:427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.48901 ])
        (nil)))
(call_insn 105 104 106 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7fdf7cc8a1b0 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:427 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 106 105 107 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:429 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 107 106 108 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) /usr/include/c++/5/bits/vector.tcc:429 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 123)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 116 117 118 119 147 148
(note 108 107 109 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 5 (set (reg:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (nil))
(insn 110 109 111 5 (set (reg:DI 5 di)
        (reg:DI 147)) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147)
        (nil)))
(call_insn 111 110 112 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE4sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195438 size>) [0 size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:430 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 5 (set (reg:DI 116 [ D.48896 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 113 112 114 5 (parallel [
            (set (reg:DI 117 [ D.48896 ])
                (ashift:DI (reg:DI 116 [ D.48896 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:430 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 116 [ D.48896 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 5 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (nil))
(insn 115 114 116 5 (parallel [
            (set (reg/f:DI 118 [ D.48897 ])
                (plus:DI (reg:DI 117 [ D.48896 ])
                    (reg/f:DI 148)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:430 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 148)
        (expr_list:REG_DEAD (reg:DI 117 [ D.48896 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])
                        (reg:DI 117 [ D.48896 ]))
                    (nil))))))
(insn 116 115 117 5 (set (reg/f:DI 119 [ D.48898 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (nil))
(insn 117 116 118 5 (set (reg:DI 4 si)
        (reg/f:DI 118 [ D.48897 ])) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ D.48897 ])
        (nil)))
(insn 118 117 119 5 (set (reg:DI 5 di)
        (reg/f:DI 119 [ D.48898 ])) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.48898 ])
        (nil)))
(call_insn 119 118 166 5 (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_") [flags 0x3]  <function_decl 0x7fdf7bc95798 destroy>) [0 destroy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:430 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 166 119 167 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 167 166 168 6 (set (pc)
        (label_ref 135)) 654 {jump}
     (nil)
 -> 135)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 168 167 123)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 120 121 149 150
(code_label 123 168 124 7 234 "" [1 uses])
(note 124 123 125 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 7 (set (reg/f:DI 120 [ D.48893 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (nil))
(insn 126 125 127 7 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.48893 ])) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.48893 ])
        (nil)))
(call_insn 127 126 128 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149af8 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:432 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 128 127 129 7 (set (reg/f:DI 121 [ D.48899 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 129 128 130 7 (set (reg:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (nil))
(insn 130 129 131 7 (set (reg:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (nil))
(insn 131 130 132 7 (set (reg:DI 1 dx)
        (reg/f:DI 121 [ D.48899 ])) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.48899 ])
        (nil)))
(insn 132 131 133 7 (set (reg:DI 4 si)
        (reg:DI 149)) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 149)
        (nil)))
(insn 133 132 134 7 (set (reg:DI 5 di)
        (reg:DI 150)) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 150)
        (nil)))
(call_insn 134 133 135 7 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E") [flags 0x3]  <function_decl 0x7fdf7bbb8e58 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:432 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 122 151 152
(code_label 135 134 136 8 235 "" [1 uses])
(note 136 135 137 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 8 (set (reg/f:DI 122 [ D.48893 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (nil))
(insn 138 137 139 8 (set (reg:DI 151)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (nil))
(insn 139 138 140 8 (set (reg:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (nil))
(insn 140 139 141 8 (set (reg:DI 1 dx)
        (reg:DI 151)) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 151)
        (nil)))
(insn 141 140 142 8 (set (reg:DI 4 si)
        (reg:DI 152)) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 152)
        (nil)))
(insn 142 141 143 8 (set (reg:DI 5 di)
        (reg/f:DI 122 [ D.48893 ])) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ D.48893 ])
        (nil)))
(call_insn 143 142 144 8 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm") [flags 0x3]  <function_decl 0x7fdf7c176360 _M_deallocate>) [0 _M_deallocate S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:433 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 144 143 145 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 145 144 146 9 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7fdf7bc95d80 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:434 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 146 145 160)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 10 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 123 153
(code_label/s 160 146 162 10 238 "" [1 uses])
(note 162 160 161 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 161 162 149 10 (set (reg:DI 153)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(call_insn 149 161 150 10 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7fdf7cc8a000 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:427 660 {*call}
     (expr_list:REG_EH_REGION (const_int -3 [0xfffffffffffffffd])
        (nil))
    (nil))
(insn 150 149 151 10 (set (reg/f:DI 123 [ D.48891 ])
        (reg:DI 153)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 153)
        (nil)))
(insn 151 150 152 10 (set (reg:DI 5 di)
        (reg/f:DI 123 [ D.48891 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ D.48891 ])
        (nil)))
(call_insn 152 151 153 10 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 153 152 163)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 163 153 155 11 239 "" [1 uses])
(note 155 163 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static _Alloc __gnu_cxx::__alloc_traits<_Alloc>::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<long long int>] (_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_, funcdef_no=2151, decl_uid=42135, cgraph_uid=770, symbol_order=772)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 21(l0): point = 3
   Insn 20(l0): point = 6
   Insn 19(l0): point = 8
   Insn 18(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 8(l0): point = 20
   Insn 5(l0): point = 22
   Insn 3(l0): point = 24
   Insn 2(l0): point = 26
 a0(r87): [15..20]
 a1(r88): [17..18]
Compressing live ranges: from 29 to 2 - 6%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r88): [0..1]
  regions=1, blocks=5, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    0:r87  l0     0    1:r88  l0     1
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static _Alloc __gnu_cxx::__alloc_traits<_Alloc>::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={4d,1u} r18={2d} r19={2d} r20={1d,11u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 203{170d,33u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) /usr/include/c++/5/ext/alloc_traits.h:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __a+0 S8 A64])
        (reg:DI 4 si [ __a ])) /usr/include/c++/5/ext/alloc_traits.h:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __a ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48903+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/alloc_traits.h:139 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/ext/alloc_traits.h:140 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __a+0 S8 A64])) /usr/include/c++/5/ext/alloc_traits.h:140 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 88)) /usr/include/c++/5/ext/alloc_traits.h:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 87)) /usr/include/c++/5/ext/alloc_traits.h:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(call_insn 12 11 18 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_") [flags 0x3]  <function_decl 0x7fdf7c139e58 select_on_container_copy_construction>) [0 select_on_container_copy_construction S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/alloc_traits.h:140 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 12 19 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/ext/alloc_traits.h:140 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48903+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/ext/alloc_traits.h:140 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 20 19 26 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) /usr/include/c++/5/ext/alloc_traits.h:140 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 23)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 26 20 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 21 26 22 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/alloc_traits.h:140 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 22 21 23)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 23 22 27 4 242 "" [1 uses])
(note 27 23 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 27 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/ext/alloc_traits.h:140 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<long long int>] (_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv, funcdef_no=2152, decl_uid=42167, cgraph_uid=771, symbol_order=773)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:117 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ D.48906 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:118 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48906 ])) /usr/include/c++/5/bits/stl_vector.h:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48906 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:118 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = long long int] (_ZNSaIxED2Ev, funcdef_no=2154, decl_uid=42363, cgraph_uid=773, symbol_order=775)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 11(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r87): [5..6]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 106{93d,13u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/allocator.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/allocator.h:121 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 87)) /usr/include/c++/5/bits/allocator.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 8 7 11 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIxED2Ev") [flags 0x3]  <function_decl 0x7fdf7c162bd0 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/allocator.h:121 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 8 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/allocator.h:121 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::size_t = long unsigned int; std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<long long int>] (_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_, funcdef_no=2157, decl_uid=42434, cgraph_uid=776, symbol_order=778)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 28(l0): point = 1
   Insn 27(l0): point = 3
   Insn 26(l0): point = 5
   Insn 25(l0): point = 7
   Insn 24(l0): point = 9
   Insn 23(l0): point = 11
   Insn 33(l0): point = 13
   Insn 37(l0): point = 16
   Insn 17(l0): point = 19
   Insn 16(l0): point = 21
   Insn 15(l0): point = 23
   Insn 14(l0): point = 25
   Insn 13(l0): point = 27
   Insn 12(l0): point = 29
   Insn 11(l0): point = 31
   Insn 10(l0): point = 33
   Insn 9(l0): point = 35
   Insn 8(l0): point = 37
   Insn 4(l0): point = 39
   Insn 3(l0): point = 41
   Insn 2(l0): point = 43
 a0(r89): [4..5]
 a1(r93): [6..13]
 a2(r88): [10..11]
 a3(r92): [22..25]
 a4(r91): [24..27]
 a5(r87): [32..37]
 a6(r90): [34..35]
Compressing live ranges: from 46 to 8 - 17%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r93): [2..3]
 a2(r88): [2..3]
 a3(r92): [4..5]
 a4(r91): [4..5]
 a5(r87): [6..7]
 a6(r90): [6..7]
  regions=1, blocks=6, points=8
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    5:r87  l0     0    2:r88  l0     0    0:r89  l0     0    6:r90  l0     1
    4:r91  l0     1    3:r92  l0     0    1:r93  l0     3
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::size_t = long unsigned int; std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={6d,1u} r1={6d,1u} r2={5d} r4={7d,3u} r5={9d,5u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={4d} r18={4d} r19={4d} r20={1d,13u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 370{322d,48u,0e} in 21{17 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/include/c++/5/bits/stl_vector.h:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __a+0 S8 A64])
        (reg:DI 1 dx [ __a ])) /usr/include/c++/5/bits/stl_vector.h:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __a ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 87 [ D.48908 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:135 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:135 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_vector.h:135 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48908 ])) /usr/include/c++/5/bits/stl_vector.h:135 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48908 ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC1ERKS0_") [flags 0x3]  <function_decl 0x7fdf7c16fe58 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:135 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:136 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:136 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_vector.h:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_vector.h:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 17 16 35 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm") [flags 0x3]  <function_decl 0x7fdf7c176438 _M_create_storage>) [0 _M_create_storage S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:136 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 35 17 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 37 35 38 3 (set (pc)
        (label_ref 36)) /usr/include/c++/5/bits/stl_vector.h:136 654 {jump}
     (nil)
 -> 36)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 38 37 32)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 93
(code_label/s 32 38 34 4 248 "" [1 uses])
(note 34 32 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 34 23 4 (set (reg:DI 93)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 23 33 24 4 (set (reg/f:DI 88 [ D.48908 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:135 89 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48908 ])) /usr/include/c++/5/bits/stl_vector.h:135 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48908 ])
        (nil)))
(call_insn 25 24 26 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD1Ev") [flags 0x3]  <function_decl 0x7fdf7bbb8510 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:135 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 4 (set (reg/f:DI 89 [ D.48907 ])
        (reg:DI 93)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.48907 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48907 ])
        (nil)))
(call_insn 28 27 29 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 29 28 36)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 36 29 31 5 249 "" [1 uses])
(note 31 36 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const long long int*] (_ZNKSt6vectorIxSaIxEE5beginEv, funcdef_no=2159, decl_uid=42599, cgraph_uid=778, symbol_order=780)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 28(l0): point = 0
   Insn 25(l0): point = 3
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 18(l0): point = 12
   Insn 15(l0): point = 14
   Insn 14(l0): point = 16
   Insn 13(l0): point = 18
   Insn 12(l0): point = 20
   Insn 11(l0): point = 22
   Insn 10(l0): point = 24
   Insn 9(l0): point = 26
   Insn 8(l0): point = 28
   Insn 7(l0): point = 30
   Insn 4(l0): point = 32
   Insn 2(l0): point = 34
 a0(r89): [11..12]
 a1(r88): [13..14]
 a2(r92): [19..22]
 a3(r91): [21..24]
 a4(r87): [27..28]
 a5(r90): [29..30]
Compressing live ranges: from 37 to 10 - 27%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r92): [4..5]
 a3(r91): [4..5]
 a4(r87): [6..7]
 a5(r90): [8..9]
  regions=1, blocks=5, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r87  l0     0    1:r88  l0     0    0:r89  l0     0    5:r90  l0     0
    3:r91  l0     1    2:r92  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,1u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,12u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 213{176d,37u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:556 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48910+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:556 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:557 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ D.48909 ])
        (mem/f/j:DI (reg/f:DI 90) [0 this_2(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:557 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.45268+0 S8 A64])
        (reg/f:DI 87 [ D.48909 ])) /usr/include/c++/5/bits/stl_vector.h:557 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48909 ])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:557 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:557 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_vector.h:557 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_vector.h:557 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC1ERKS2_") [flags 0x3]  <function_decl 0x7fdf7be5dca8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:557 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 18 2 (set (reg:DI 88 [ D.47938 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 D.45269+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:557 89 {*movdi_internal}
     (nil))
(insn 18 15 22 2 (set (reg:DI 89 [ <retval> ])
        (reg:DI 88 [ D.47938 ])) /usr/include/c++/5/bits/stl_vector.h:557 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.47938 ])
        (nil)))
(insn 22 18 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:557 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48910+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_vector.h:557 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 24 23 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:557 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 30 24 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 25 30 26 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:557 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 26 25 27)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 27 26 31 4 252 "" [1 uses])
(note 31 27 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 31 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:557 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const long long int*] (_ZNKSt6vectorIxSaIxEE3endEv, funcdef_no=2160, decl_uid=42603, cgraph_uid=779, symbol_order=781)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 28(l0): point = 0
   Insn 25(l0): point = 3
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 18(l0): point = 12
   Insn 15(l0): point = 14
   Insn 14(l0): point = 16
   Insn 13(l0): point = 18
   Insn 12(l0): point = 20
   Insn 11(l0): point = 22
   Insn 10(l0): point = 24
   Insn 9(l0): point = 26
   Insn 8(l0): point = 28
   Insn 7(l0): point = 30
   Insn 4(l0): point = 32
   Insn 2(l0): point = 34
 a0(r89): [11..12]
 a1(r88): [13..14]
 a2(r92): [19..22]
 a3(r91): [21..24]
 a4(r87): [27..28]
 a5(r90): [29..30]
Compressing live ranges: from 37 to 10 - 27%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r92): [4..5]
 a3(r91): [4..5]
 a4(r87): [6..7]
 a5(r90): [8..9]
  regions=1, blocks=5, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r87  l0     0    1:r88  l0     0    0:r89  l0     0    5:r90  l0     0
    3:r91  l0     1    2:r92  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,1u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,12u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 213{176d,37u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:574 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48912+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:574 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:575 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ D.48911 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [0 this_2(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:575 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.45271+0 S8 A64])
        (reg/f:DI 87 [ D.48911 ])) /usr/include/c++/5/bits/stl_vector.h:575 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48911 ])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:575 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:575 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_vector.h:575 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_vector.h:575 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC1ERKS2_") [flags 0x3]  <function_decl 0x7fdf7be5dca8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:575 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 18 2 (set (reg:DI 88 [ D.47932 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 D.45272+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:575 89 {*movdi_internal}
     (nil))
(insn 18 15 22 2 (set (reg:DI 89 [ <retval> ])
        (reg:DI 88 [ D.47932 ])) /usr/include/c++/5/bits/stl_vector.h:575 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.47932 ])
        (nil)))
(insn 22 18 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:575 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48912+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_vector.h:575 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 24 23 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:575 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 30 24 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 25 30 26 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:575 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 26 25 27)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 27 26 31 4 255 "" [1 uses])
(note 31 27 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 31 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:575 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; _ForwardIterator = long long int*; _Tp = long long int] (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E, funcdef_no=2161, decl_uid=44816, cgraph_uid=780, symbol_order=782)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 5(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; _ForwardIterator = long long int*; _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 130{100d,30u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_uninitialized.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_uninitialized.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_uninitialized.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 D.44820+0 S8 A64])
        (reg:DI 2 cx [ D.44820 ])) /usr/include/c++/5/bits/stl_uninitialized.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ D.44820 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_") [flags 0x3]  <function_decl 0x7fdf7bcb8798 uninitialized_copy>) [0 uninitialized_copy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_uninitialized.h:281 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ D.48913 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48913 ])) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48913 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:281 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = long long int*; _Container = std::vector<long long int>] (_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_, funcdef_no=2163, decl_uid=43527, cgraph_uid=782, symbol_order=784)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 3(l0): point = 10
   Insn 2(l0): point = 12
 a0(r89): [3..4]
 a1(r87): [3..6]
 a2(r88): [7..8]
Compressing live ranges: from 15 to 4 - 26%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r87): [0..1]
 a2(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     1    2:r88  l0     0    0:r89  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = long long int*; _Container = std::vector<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 38{22d,16u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_iterator.h:740 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __i+0 S8 A64])
        (reg:DI 4 si [ __i ])) /usr/include/c++/5/bits/stl_iterator.h:740 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __i ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __i+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:741 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ D.48914 ])
        (mem/f:DI (reg/f:DI 88) [0 *__i_2(D)+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:741 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:741 89 {*movdi_internal}
     (nil))
(insn 10 9 13 2 (set (mem/f/j:DI (reg/f:DI 89) [0 this_4(D)->_M_current+0 S8 A64])
        (reg/f:DI 87 [ D.48914 ])) /usr/include/c++/5/bits/stl_iterator.h:741 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.48914 ])
            (nil))))
(insn 13 10 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_iterator.h:741 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = long long int*; _Container = std::vector<long long int>] (_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv, funcdef_no=2165, decl_uid=43514, cgraph_uid=784, symbol_order=786)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = long long int*; _Container = std::vector<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_iterator.h:805 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ D.48915 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:806 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48915 ])) /usr/include/c++/5/bits/stl_iterator.h:806 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48915 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator.h:806 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:806 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::cbegin() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const long long int*] (_ZNKSt6vectorIxSaIxEE6cbeginEv, funcdef_no=2166, decl_uid=42613, cgraph_uid=785, symbol_order=787)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 28(l0): point = 0
   Insn 25(l0): point = 3
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 18(l0): point = 12
   Insn 15(l0): point = 14
   Insn 14(l0): point = 16
   Insn 13(l0): point = 18
   Insn 12(l0): point = 20
   Insn 11(l0): point = 22
   Insn 10(l0): point = 24
   Insn 9(l0): point = 26
   Insn 8(l0): point = 28
   Insn 7(l0): point = 30
   Insn 4(l0): point = 32
   Insn 2(l0): point = 34
 a0(r89): [11..12]
 a1(r88): [13..14]
 a2(r92): [19..22]
 a3(r91): [21..24]
 a4(r87): [27..28]
 a5(r90): [29..30]
Compressing live ranges: from 37 to 10 - 27%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r92): [4..5]
 a3(r91): [4..5]
 a4(r87): [6..7]
 a5(r90): [8..9]
  regions=1, blocks=5, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r87  l0     0    1:r88  l0     0    0:r89  l0     0    5:r90  l0     0
    3:r91  l0     1    2:r92  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::cbegin() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename __gnu_cxx::__alloc_traits<typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,1u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,12u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 213{176d,37u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:620 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48917+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:620 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:621 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ D.48916 ])
        (mem/f/j:DI (reg/f:DI 90) [0 this_2(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:621 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.45285+0 S8 A64])
        (reg/f:DI 87 [ D.48916 ])) /usr/include/c++/5/bits/stl_vector.h:621 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48916 ])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:621 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:621 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_vector.h:621 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_vector.h:621 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC1ERKS2_") [flags 0x3]  <function_decl 0x7fdf7be5dca8 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:621 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 18 2 (set (reg:DI 88 [ D.48108 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 D.45286+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:621 89 {*movdi_internal}
     (nil))
(insn 18 15 22 2 (set (reg:DI 89 [ <retval> ])
        (reg:DI 88 [ D.48108 ])) /usr/include/c++/5/bits/stl_vector.h:621 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.48108 ])
        (nil)))
(insn 22 18 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:621 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48917+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_vector.h:621 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 24 23 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:621 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 30 24 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 25 30 26 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:621 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 26 25 27)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 27 26 31 4 263 "" [1 uses])
(note 31 27 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 31 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:621 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const long long int*; _Container = std::vector<long long int>; typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int] (_ZN9__gnu_cxxmiIPKxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_, funcdef_no=2167, decl_uid=44872, cgraph_uid=786, symbol_order=788)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a8(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 29(l0): point = 0
   Insn 28(l0): point = 2
   Insn 24(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 7(l0): point = 34
   Insn 3(l0): point = 36
   Insn 2(l0): point = 38
 a0(r95): [3..4]
 a1(r94): [5..6]
 a2(r98): [7..8]
 a3(r93): [9..10]
 a4(r92): [11..12]
 a5(r89): [11..24]
 a6(r91): [13..14]
 a7(r90): [15..16]
 a8(r97): [21..22]
 a9(r88): [25..26]
 a10(r87): [27..28]
 a11(r96): [33..34]
Compressing live ranges: from 41 to 22 - 53%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r94): [2..3]
 a2(r98): [4..5]
 a3(r93): [6..7]
 a4(r92): [8..9]
 a5(r89): [8..15]
 a6(r91): [10..11]
 a7(r90): [12..13]
 a8(r97): [14..15]
 a9(r88): [16..17]
 a10(r87): [18..19]
 a11(r96): [20..21]
  regions=1, blocks=3, points=22
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=12
Disposition:
   10:r87  l0     0    9:r88  l0     0    5:r89  l0     3    7:r90  l0     0
    6:r91  l0     0    4:r92  l0     0    3:r93  l0     0    1:r94  l0     0
    0:r95  l0     0   11:r96  l0     0    8:r97  l0     0    2:r98  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const long long int*; _Container = std::vector<long long int>; typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={4d} r18={2d} r19={2d} r20={1d,6u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 214{180d,33u,1e} in 20{18 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __lhs+0 S8 A64])
        (reg:DI 5 di [ __lhs ])) /usr/include/c++/5/bits/stl_iterator.h:923 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __lhs ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __rhs+0 S8 A64])
        (reg:DI 4 si [ __rhs ])) /usr/include/c++/5/bits/stl_iterator.h:923 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __rhs ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __lhs+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 96)) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv") [flags 0x3]  <function_decl 0x7fdf7be5da20 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:926 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 87 [ D.48918 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ D.48919 ])
        (mem/f:DI (reg/f:DI 87 [ D.48918 ]) [0 *_4+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48918 ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 89 [ D.48920 ])
        (reg/f:DI 88 [ D.48919 ])) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48919 ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __rhs+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 97)) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv") [flags 0x3]  <function_decl 0x7fdf7be5da20 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:926 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 90 [ D.48918 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 91 [ D.48919 ])
        (mem/f:DI (reg/f:DI 90 [ D.48918 ]) [0 *_9+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48918 ])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 92 [ D.48920 ])
        (reg/f:DI 91 [ D.48919 ])) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48919 ])
        (nil)))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 93 [ D.48920 ])
                (minus:DI (reg:DI 89 [ D.48920 ])
                    (reg:DI 92 [ D.48920 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator.h:926 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.48920 ])
        (expr_list:REG_DEAD (reg:DI 89 [ D.48920 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 98)
                (ashiftrt:DI (reg:DI 93 [ D.48920 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator.h:926 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ D.48920 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:DI (reg:DI 93 [ D.48920 ])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 21 20 24 2 (set (reg:DI 94 [ D.48921 ])
        (reg:DI 98)) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 24 21 28 2 (set (reg:DI 95 [ <retval> ])
        (reg:DI 94 [ D.48921 ])) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ D.48921 ])
        (nil)))
(insn 28 24 29 2 (set (reg/i:DI 0 ax)
        (reg:DI 95 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator.h:926 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95 [ <retval> ])
        (nil)))
(insn 29 28 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:926 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type) const [with _Iterator = long long int*; _Container = std::vector<long long int>; __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int] (_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl, funcdef_no=2168, decl_uid=43505, cgraph_uid=787, symbol_order=789)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 32(l0): point = 0
   Insn 29(l0): point = 3
   Insn 28(l0): point = 6
   Insn 27(l0): point = 8
   Insn 26(l0): point = 10
   Insn 22(l0): point = 12
   Insn 19(l0): point = 14
   Insn 18(l0): point = 16
   Insn 17(l0): point = 18
   Insn 16(l0): point = 20
   Insn 15(l0): point = 22
   Insn 14(l0): point = 24
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 5(l0): point = 38
   Insn 3(l0): point = 40
   Insn 2(l0): point = 42
 a0(r92): [11..12]
 a1(r91): [13..14]
 a2(r95): [19..22]
 a3(r94): [21..24]
 a4(r90): [27..28]
 a5(r89): [29..30]
 a6(r87): [29..34]
 a7(r88): [31..32]
 a8(r93): [35..36]
Compressing live ranges: from 45 to 14 - 31%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r95): [4..5]
 a3(r94): [4..5]
 a4(r90): [6..7]
 a5(r89): [8..9]
 a6(r87): [8..11]
 a7(r88): [10..11]
 a8(r93): [12..13]
  regions=1, blocks=5, points=14
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    6:r87  l0     0    7:r88  l0     1    5:r89  l0     1    4:r90  l0     0
    1:r91  l0     0    0:r92  l0     0    8:r93  l0     0    3:r94  l0     1
    2:r95  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(__gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type) const [with _Iterator = long long int*; _Container = std::vector<long long int>; __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={8d,1u} r18={2d} r19={2d} r20={1d,14u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 224{181d,43u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_iterator.h:793 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/include/c++/5/bits/stl_iterator.h:793 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48924+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator.h:793 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:794 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 87 [ D.48922 ])
        (mem/f/j:DI (reg/f:DI 93) [0 this_2(D)->_M_current+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:794 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 88 [ D.48923 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __n+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:794 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 89 [ D.48923 ])
                (ashift:DI (reg:DI 88 [ D.48923 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator.h:794 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.48923 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 90 [ D.48922 ])
                (plus:DI (reg/f:DI 87 [ D.48922 ])
                    (reg:DI 89 [ D.48923 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator.h:794 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.48923 ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.48922 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.45289+0 S8 A64])
        (reg/f:DI 90 [ D.48922 ])) /usr/include/c++/5/bits/stl_iterator.h:794 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48922 ])
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator.h:794 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator.h:794 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 94)) /usr/include/c++/5/bits/stl_iterator.h:794 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 95)) /usr/include/c++/5/bits/stl_iterator.h:794 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC1ERKS1_") [flags 0x3]  <function_decl 0x7fdf7be51360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_iterator.h:794 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 22 2 (set (reg:DI 91 [ D.48122 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 D.45290+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:794 89 {*movdi_internal}
     (nil))
(insn 22 19 26 2 (set (reg:DI 92 [ <retval> ])
        (reg:DI 91 [ D.48122 ])) /usr/include/c++/5/bits/stl_iterator.h:794 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ D.48122 ])
        (nil)))
(insn 26 22 27 2 (set (reg/i:DI 0 ax)
        (reg:DI 92 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator.h:794 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ <retval> ])
        (nil)))
(insn 27 26 28 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48924+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_iterator.h:794 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 28 27 34 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) /usr/include/c++/5/bits/stl_iterator.h:794 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 31)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 34 28 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 29 34 30 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_iterator.h:794 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 30 29 31)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 31 30 35 4 268 "" [1 uses])
(note 35 31 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 35 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:794 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::_M_erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = long long int*] (_ZNSt6vectorIxSaIxEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPxS1_EE, funcdef_no=2169, decl_uid=42961, cgraph_uid=788, symbol_order=790)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 68.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r107,l0) best DREG, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r103,l0) best SIREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r96,l0) best AREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a10(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a11(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a15(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a16(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a18(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a19(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a21(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a22(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 71(l0): point = 0
   Insn 68(l0): point = 3
   Insn 67(l0): point = 6
   Insn 66(l0): point = 8
   Insn 65(l0): point = 10
   Insn 61(l0): point = 12
   Insn 58(l0): point = 14
   Insn 57(l0): point = 16
   Insn 56(l0): point = 18
   Insn 55(l0): point = 20
   Insn 54(l0): point = 22
   Insn 53(l0): point = 24
   Insn 52(l0): point = 26
   Insn 51(l0): point = 28
   Insn 50(l0): point = 30
   Insn 49(l0): point = 32
   Insn 48(l0): point = 34
   Insn 47(l0): point = 36
   Insn 43(l0): point = 39
   Insn 42(l0): point = 41
   Insn 41(l0): point = 43
   Insn 40(l0): point = 45
   Insn 39(l0): point = 47
   Insn 38(l0): point = 49
   Insn 37(l0): point = 51
   Insn 36(l0): point = 53
   Insn 35(l0): point = 55
   Insn 34(l0): point = 57
   Insn 33(l0): point = 59
   Insn 32(l0): point = 61
   Insn 31(l0): point = 63
   Insn 30(l0): point = 65
   Insn 28(l0): point = 68
   Insn 27(l0): point = 70
   Insn 26(l0): point = 72
   Insn 25(l0): point = 74
   Insn 24(l0): point = 76
   Insn 23(l0): point = 78
   Insn 22(l0): point = 80
   Insn 21(l0): point = 82
   Insn 20(l0): point = 84
   Insn 19(l0): point = 86
   Insn 18(l0): point = 88
   Insn 17(l0): point = 90
   Insn 16(l0): point = 92
   Insn 15(l0): point = 94
   Insn 14(l0): point = 96
   Insn 13(l0): point = 98
   Insn 12(l0): point = 100
   Insn 11(l0): point = 102
   Insn 10(l0): point = 104
   Insn 9(l0): point = 106
   Insn 8(l0): point = 108
   Insn 5(l0): point = 110
   Insn 3(l0): point = 112
   Insn 2(l0): point = 114
 a0(r96): [11..12]
 a1(r92): [13..14]
 a2(r91): [19..22]
 a3(r90): [21..24]
 a4(r110): [25..26]
 a5(r109): [29..30]
 a6(r89): [29..32]
 a7(r88): [33..34]
 a8(r108): [35..36]
 a9(r93): [42..49]
 a10(r94): [44..59]
 a11(r107): [46..47]
 a12(r106): [54..57]
 a13(r105): [64..65]
 a14(r87): [71..72]
 a15(r104): [77..80]
 a16(r103): [79..82]
 a17(r102): [85..86]
 a18(r101): [87..88]
 a19(r100): [93..96]
 a20(r99): [99..100]
 a21(r98): [101..102]
 a22(r97): [107..108]
Compressing live ranges: from 117 to 36 - 30%
Ranges after the compression:
 a0(r96): [0..1]
 a1(r92): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r110): [6..7]
 a5(r109): [8..9]
 a6(r89): [8..9]
 a7(r88): [10..11]
 a8(r108): [12..13]
 a9(r93): [14..15]
 a10(r94): [14..17]
 a11(r107): [14..15]
 a12(r106): [16..17]
 a13(r105): [18..19]
 a14(r87): [20..21]
 a15(r104): [22..23]
 a16(r103): [22..23]
 a17(r102): [24..25]
 a18(r101): [26..27]
 a19(r100): [28..29]
 a20(r99): [30..31]
 a21(r98): [32..33]
 a22(r97): [34..35]
  regions=1, blocks=7, points=36
    allocnos=23 (big 0), copies=0, conflicts=0, ranges=23
Disposition:
   14:r87  l0     0    7:r88  l0     0    6:r89  l0     1    3:r90  l0     1
    2:r91  l0     0    1:r92  l0     0    9:r93  l0     2   10:r94  l0     3
    0:r96  l0     0   22:r97  l0     0   21:r98  l0     0   20:r99  l0     0
   19:r100 l0     0   18:r101 l0     0   17:r102 l0     0   16:r103 l0     1
   15:r104 l0     0   13:r105 l0     0   12:r106 l0     0   11:r107 l0     0
    8:r108 l0     0    5:r109 l0     0    4:r110 l0     0
+++Costs: overall -15, reg -15, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::_M_erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={10d,7u} r1={10d,1u} r2={9d} r4={14d,6u} r5={16d,8u} r6={1d,6u} r7={1d,14u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,5u} r17={16d,2u} r18={8d} r19={8d} r20={1d,24u} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} 
;;    total ref usage 736{640d,96u,0e} in 56{48 regular + 8 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 97 98 99 100 101 102 103 104
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/vector.tcc:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __position+0 S8 A128])
        (reg:DI 4 si [ __position ])) /usr/include/c++/5/bits/vector.tcc:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __position ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48928+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:141 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 97)) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE3endEv") [flags 0x3]  <function_decl 0x7fdf7c18daf8 end>) [0 end S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:144 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 98)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 99)
        (reg:DI 98)) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.45293+0 S8 A64])
        (reg:DI 99)) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:144 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (const_int 1 [0x1])) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 100)) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl") [flags 0x3]  <function_decl 0x7fdf7be47d80 operator+>) [0 operator+ S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:144 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg:DI 101)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 102)
        (reg:DI 101)) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(insn 20 19 21 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 D.45292+0 S8 A64])
        (reg:DI 102)) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:144 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:144 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (reg:DI 103)) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 104)) /usr/include/c++/5/bits/vector.tcc:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 25 24 26 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_") [flags 0x3]  <function_decl 0x7fdf7bcc8000 operator!=>) [0 operator!= S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:144 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 2 (set (reg:QI 87 [ D.48925 ])
        (reg:QI 0 ax)) /usr/include/c++/5/bits/vector.tcc:144 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 27 26 28 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.48925 ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:144 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 87 [ D.48925 ])
        (nil)))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) /usr/include/c++/5/bits/vector.tcc:144 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 105 106 107
(note 29 28 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 3 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:145 89 {*movdi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:DI 5 di)
        (reg:DI 105)) /usr/include/c++/5/bits/vector.tcc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn 32 31 33 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIxSaIxEE3endEv") [flags 0x3]  <function_decl 0x7fdf7c18daf8 end>) [0 end S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:145 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 3 (set (reg:DI 94 [ D.48133 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 34 33 35 3 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:145 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 3 (set (reg:DI 4 si)
        (const_int 1 [0x1])) /usr/include/c++/5/bits/vector.tcc:145 89 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:DI 5 di)
        (reg:DI 106)) /usr/include/c++/5/bits/vector.tcc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(call_insn 37 36 38 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl") [flags 0x3]  <function_decl 0x7fdf7be47d80 operator+>) [0 operator+ S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:145 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 38 37 39 3 (set (reg:DI 93 [ D.48134 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 39 38 40 3 (set (reg:DI 107)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __position+0 S8 A128])) /usr/include/c++/5/bits/vector.tcc:145 89 {*movdi_internal}
     (nil))
(insn 40 39 41 3 (set (reg:DI 1 dx)
        (reg:DI 107)) /usr/include/c++/5/bits/vector.tcc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(insn 41 40 42 3 (set (reg:DI 4 si)
        (reg:DI 94 [ D.48133 ])) /usr/include/c++/5/bits/vector.tcc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ D.48133 ])
        (nil)))
(insn 42 41 43 3 (set (reg:DI 5 di)
        (reg:DI 93 [ D.48134 ])) /usr/include/c++/5/bits/vector.tcc:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ D.48134 ])
        (nil)))
(call_insn 43 42 45 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET0_T_S8_S7_") [flags 0x3]  <function_decl 0x7fdf7bcc8510 move>) [0 move S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:145 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 96 108 109 110
(code_label 45 43 46 4 270 "" [1 uses])
(note 46 45 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 4 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:146 89 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg/f:DI 88 [ D.48926 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 108)
                (const_int 8 [0x8])) [0 this_3(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (nil)))
(insn 49 48 50 4 (parallel [
            (set (reg/f:DI 89 [ D.48926 ])
                (plus:DI (reg/f:DI 88 [ D.48926 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:146 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48926 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 4 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:146 89 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 109)
                (const_int 8 [0x8])) [0 this_3(D)->D.43079._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 89 [ D.48926 ])) /usr/include/c++/5/bits/vector.tcc:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (expr_list:REG_DEAD (reg/f:DI 89 [ D.48926 ])
            (nil))))
(insn 52 51 53 4 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:147 89 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg/f:DI 90 [ D.48926 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 110)
                (const_int 8 [0x8])) [0 this_3(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (nil)))
(insn 54 53 55 4 (set (reg/f:DI 91 [ D.48927 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:147 89 {*movdi_internal}
     (nil))
(insn 55 54 56 4 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.48926 ])) /usr/include/c++/5/bits/vector.tcc:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48926 ])
        (nil)))
(insn 56 55 57 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.48927 ])) /usr/include/c++/5/bits/vector.tcc:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48927 ])
        (nil)))
(call_insn 57 56 58 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_") [flags 0x3]  <function_decl 0x7fdf7bc95798 destroy>) [0 destroy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:147 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 58 57 61 4 (set (reg:DI 92 [ D.48140 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __position+0 S8 A128])) /usr/include/c++/5/bits/vector.tcc:148 89 {*movdi_internal}
     (nil))
(insn 61 58 65 4 (set (reg:DI 96 [ <retval> ])
        (reg:DI 92 [ D.48140 ])) /usr/include/c++/5/bits/vector.tcc:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ D.48140 ])
        (nil)))
(insn 65 61 66 4 (set (reg/i:DI 0 ax)
        (reg:DI 96 [ <retval> ])) /usr/include/c++/5/bits/vector.tcc:149 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ <retval> ])
        (nil)))
(insn 66 65 67 4 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48928+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/vector.tcc:149 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 67 66 73 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) /usr/include/c++/5/bits/vector.tcc:149 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 70)
;;  succ:       6
;;              5 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 73 67 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 68 73 69 5 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:149 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 69 68 70)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 70 69 74 6 272 "" [1 uses])
(note 74 70 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 71 74 0 6 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:149 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = long long int; _Args = {long long int}; _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>] (_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_, funcdef_no=2170, decl_uid=44885, cgraph_uid=789, symbol_order=791)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AD_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 20(l0): point = 0
   Insn 17(l0): point = 2
   Insn 16(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 8(l0): point = 20
   Insn 4(l0): point = 22
   Insn 3(l0): point = 24
   Insn 2(l0): point = 26
 a0(r90): [5..10]
 a1(r89): [7..12]
 a2(r87): [9..14]
 a3(r88): [19..20]
Compressing live ranges: from 29 to 4 - 13%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [0..1]
 a2(r87): [0..1]
 a3(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     1    3:r88  l0     0    1:r89  l0     2    0:r90  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = long long int; _Args = {long long int}; _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,1u} r1={4d,2u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,8u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 198{171d,27u,0e} in 14{12 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/include/c++/5/bits/alloc_traits.h:529 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/include/c++/5/bits/alloc_traits.h:529 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __args#0+0 S8 A64])
        (reg:DI 1 dx [ __args#0 ])) /usr/include/c++/5/bits/alloc_traits.h:529 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __args#0 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __args#0+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE") [flags 0x3]  <function_decl 0x7fdf7bc0e510 forward>) [0 forward S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/alloc_traits.h:530 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 87 [ D.48929 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ D.48929 ])) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48929 ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 89)) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/include/c++/5/bits/alloc_traits.h:530 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 17 16 20 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_") [flags 0x3]  <function_decl 0x7fdf7bcc8bd0 construct>) [0 construct S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/alloc_traits.h:530 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 17 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/alloc_traits.h:530 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {long long int}; _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_, funcdef_no=2171, decl_uid=44889, cgraph_uid=790, symbol_order=792)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 12 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 105.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 127.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 145.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 152.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r153: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r153,l0) best AREG, allocno GENERAL_REGS
    r152: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r152,l0) best SIREG, allocno GENERAL_REGS
    r151: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r151,l0) best DREG, allocno GENERAL_REGS
    r150: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r150,l0) best DIREG, allocno GENERAL_REGS
    r149: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r149,l0) best SIREG, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r147,l0) best DIREG, allocno GENERAL_REGS
    r146: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r146,l0) best AREG, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r132,l0) best DREG, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r128,l0) best DIREG, allocno GENERAL_REGS
    r127: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r127,l0) best DIREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r125,l0) best SIREG, allocno GENERAL_REGS
    r124: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a66 (r124,l0) best DIREG, allocno GENERAL_REGS
    r123: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r123,l0) best DIREG, allocno GENERAL_REGS
    r122: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r122,l0) best DIREG, allocno GENERAL_REGS
    r121: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r121,l0) best AD_REGS, allocno GENERAL_REGS
    r120: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r120,l0) best DIREG, allocno GENERAL_REGS
    r119: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r119,l0) best DIREG, allocno GENERAL_REGS
    r118: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r118,l0) best SIREG, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r116,l0) best AREG, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r112,l0) best DIREG, allocno GENERAL_REGS
    r111: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r111,l0) best SIREG, allocno GENERAL_REGS
    r110: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r110,l0) best DREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r102,l0) best SIREG, allocno GENERAL_REGS
    r101: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r101,l0) best AD_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r90,l0) best AD_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r121,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a8(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a13(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a14(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a16(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a17(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a18(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a23(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a25(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a26(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a28(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a29(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a30(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a31(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a33(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a34(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a35(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a36(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a37(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a38(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a39(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a40(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r101,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a42(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a43(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a44(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a46(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a47(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a49(r96,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a50(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a51(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a52(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a53(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a55(r90,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a56(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a57(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a58(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a59(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a60(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a61(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a62(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a63(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a64(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a65(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a66(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 152(l0): point = 1
   Insn 151(l0): point = 3
   Insn 150(l0): point = 5
   Insn 149(l0): point = 7
   Insn 161(l0): point = 9
   Insn 145(l0): point = 12
   Insn 143(l0): point = 15
   Insn 142(l0): point = 17
   Insn 141(l0): point = 19
   Insn 140(l0): point = 21
   Insn 139(l0): point = 23
   Insn 138(l0): point = 25
   Insn 137(l0): point = 27
   Insn 134(l0): point = 30
   Insn 133(l0): point = 32
   Insn 132(l0): point = 34
   Insn 131(l0): point = 36
   Insn 130(l0): point = 38
   Insn 129(l0): point = 40
   Insn 128(l0): point = 42
   Insn 127(l0): point = 44
   Insn 126(l0): point = 46
   Insn 125(l0): point = 48
   Insn 167(l0): point = 51
   Insn 119(l0): point = 54
   Insn 118(l0): point = 56
   Insn 117(l0): point = 58
   Insn 116(l0): point = 60
   Insn 115(l0): point = 62
   Insn 114(l0): point = 64
   Insn 113(l0): point = 66
   Insn 112(l0): point = 68
   Insn 111(l0): point = 70
   Insn 110(l0): point = 72
   Insn 109(l0): point = 74
   Insn 107(l0): point = 77
   Insn 106(l0): point = 79
   Insn 105(l0): point = 81
   Insn 104(l0): point = 83
   Insn 103(l0): point = 85
   Insn 158(l0): point = 87
   Insn 164(l0): point = 90
   Insn 98(l0): point = 92
   Insn 97(l0): point = 94
   Insn 96(l0): point = 96
   Insn 95(l0): point = 98
   Insn 94(l0): point = 100
   Insn 93(l0): point = 102
   Insn 92(l0): point = 104
   Insn 91(l0): point = 106
   Insn 90(l0): point = 108
   Insn 89(l0): point = 110
   Insn 88(l0): point = 112
   Insn 87(l0): point = 114
   Insn 86(l0): point = 116
   Insn 85(l0): point = 118
   Insn 84(l0): point = 120
   Insn 83(l0): point = 122
   Insn 82(l0): point = 124
   Insn 81(l0): point = 126
   Insn 80(l0): point = 128
   Insn 79(l0): point = 130
   Insn 78(l0): point = 132
   Insn 77(l0): point = 134
   Insn 76(l0): point = 136
   Insn 75(l0): point = 138
   Insn 74(l0): point = 140
   Insn 73(l0): point = 142
   Insn 72(l0): point = 144
   Insn 71(l0): point = 146
   Insn 70(l0): point = 148
   Insn 69(l0): point = 150
   Insn 68(l0): point = 152
   Insn 67(l0): point = 154
   Insn 66(l0): point = 156
   Insn 65(l0): point = 158
   Insn 64(l0): point = 160
   Insn 63(l0): point = 162
   Insn 62(l0): point = 164
   Insn 61(l0): point = 166
   Insn 60(l0): point = 168
   Insn 59(l0): point = 170
   Insn 58(l0): point = 172
   Insn 57(l0): point = 174
   Insn 56(l0): point = 176
   Insn 54(l0): point = 178
   Insn 53(l0): point = 181
   Insn 52(l0): point = 183
   Insn 51(l0): point = 185
   Insn 50(l0): point = 187
   Insn 49(l0): point = 189
   Insn 48(l0): point = 191
   Insn 47(l0): point = 193
   Insn 46(l0): point = 195
   Insn 45(l0): point = 197
   Insn 44(l0): point = 199
   Insn 43(l0): point = 201
   Insn 42(l0): point = 203
   Insn 41(l0): point = 205
   Insn 40(l0): point = 207
   Insn 39(l0): point = 209
   Insn 38(l0): point = 211
   Insn 37(l0): point = 213
   Insn 36(l0): point = 215
   Insn 35(l0): point = 217
   Insn 34(l0): point = 219
   Insn 33(l0): point = 221
   Insn 32(l0): point = 223
   Insn 31(l0): point = 225
   Insn 30(l0): point = 227
   Insn 29(l0): point = 229
   Insn 28(l0): point = 231
   Insn 27(l0): point = 233
   Insn 26(l0): point = 235
   Insn 25(l0): point = 237
   Insn 24(l0): point = 239
   Insn 23(l0): point = 241
   Insn 22(l0): point = 243
   Insn 21(l0): point = 245
   Insn 20(l0): point = 247
   Insn 19(l0): point = 249
   Insn 18(l0): point = 251
   Insn 17(l0): point = 253
   Insn 16(l0): point = 255
   Insn 15(l0): point = 257
   Insn 14(l0): point = 259
   Insn 13(l0): point = 261
   Insn 12(l0): point = 263
   Insn 11(l0): point = 265
   Insn 10(l0): point = 267
   Insn 9(l0): point = 269
   Insn 8(l0): point = 271
   Insn 7(l0): point = 273
   Insn 3(l0): point = 275
   Insn 2(l0): point = 277
 a0(r123): [4..5]
 a1(r153): [6..9]
 a2(r122): [18..27]
 a3(r152): [20..23]
 a4(r151): [22..25]
 a5(r150): [33..38]
 a6(r149): [35..40]
 a7(r121): [37..42]
 a8(r120): [47..48]
 a9(r119): [57..60]
 a10(r118): [59..62]
 a11(r148): [63..64]
 a12(r117): [63..66]
 a13(r116): [67..68]
 a14(r147): [73..74]
 a15(r115): [84..85]
 a16(r146): [86..87]
 a17(r145): [93..94]
 a18(r114): [93..96]
 a19(r144): [97..98]
 a20(r113): [97..100]
 a21(r143): [101..102]
 a22(r141): [105..108]
 a23(r142): [105..106]
 a24(r139): [111..114]
 a25(r140): [111..112]
 a26(r112): [119..124]
 a27(r111): [121..126]
 a28(r110): [123..130]
 a29(r138): [127..128]
 a30(r109): [131..132]
 a31(r137): [133..134]
 a32(r108): [135..136]
 a33(r107): [137..138]
 a34(r105): [137..144]
 a35(r106): [139..140]
 a36(r136): [141..142]
 a37(r104): [145..146]
 a38(r135): [147..148]
 a39(r103): [153..158]
 a40(r102): [155..162]
 a41(r101): [157..166]
 a42(r134): [159..160]
 a43(r133): [163..164]
 a44(r100): [171..172]
 a45(r99): [177..178]
 a46(r98): [184..193]
 a47(r97): [186..197]
 a48(r132): [188..191]
 a49(r96): [190..201]
 a50(r131): [194..195]
 a51(r130): [198..199]
 a52(r95): [206..207]
 a53(r94): [214..219]
 a54(r93): [216..221]
 a55(r90): [218..235]
 a56(r129): [222..223]
 a57(r92): [222..225]
 a58(r91): [226..227]
 a59(r128): [232..233]
 a60(r127): [240..241]
 a61(r126): [244..245]
 a62(r89): [248..249]
 a63(r88): [254..259]
 a64(r125): [256..257]
 a65(r87): [262..263]
 a66(r124): [268..273]
Compressing live ranges: from 280 to 90 - 32%
Ranges after the compression:
 a0(r123): [0..1]
 a1(r153): [2..3]
 a2(r122): [4..5]
 a3(r152): [4..5]
 a4(r151): [4..5]
 a5(r150): [6..7]
 a6(r149): [6..7]
 a7(r121): [6..7]
 a8(r120): [8..9]
 a9(r119): [10..11]
 a10(r118): [10..11]
 a11(r148): [12..13]
 a12(r117): [12..13]
 a13(r116): [14..15]
 a14(r147): [16..17]
 a15(r115): [18..19]
 a16(r146): [20..21]
 a17(r145): [22..23]
 a18(r114): [22..23]
 a19(r144): [24..25]
 a20(r113): [24..25]
 a21(r143): [26..27]
 a22(r141): [28..29]
 a23(r142): [28..29]
 a24(r139): [30..31]
 a25(r140): [30..31]
 a26(r112): [32..33]
 a27(r111): [32..33]
 a28(r110): [32..35]
 a29(r138): [34..35]
 a30(r109): [36..37]
 a31(r137): [38..39]
 a32(r108): [40..41]
 a33(r107): [42..43]
 a34(r105): [42..47]
 a35(r106): [44..45]
 a36(r136): [46..47]
 a37(r104): [48..49]
 a38(r135): [50..51]
 a39(r103): [52..53]
 a40(r102): [52..55]
 a41(r101): [52..57]
 a42(r134): [54..55]
 a43(r133): [56..57]
 a44(r100): [58..59]
 a45(r99): [60..61]
 a46(r98): [62..63]
 a47(r97): [62..65]
 a48(r132): [62..63]
 a49(r96): [62..67]
 a50(r131): [64..65]
 a51(r130): [66..67]
 a52(r95): [68..69]
 a53(r94): [70..71]
 a54(r93): [70..71]
 a55(r90): [70..77]
 a56(r129): [72..73]
 a57(r92): [72..73]
 a58(r91): [74..75]
 a59(r128): [76..77]
 a60(r127): [78..79]
 a61(r126): [80..81]
 a62(r89): [82..83]
 a63(r88): [84..85]
 a64(r125): [84..85]
 a65(r87): [86..87]
 a66(r124): [88..89]
  regions=1, blocks=12, points=90
    allocnos=67 (big 0), copies=0, conflicts=0, ranges=67
Disposition:
   65:r87  l0     0   63:r88  l0     0   62:r89  l0     0   55:r90  l0     3
   58:r91  l0     0   57:r92  l0     1   54:r93  l0     2   53:r94  l0     0
   52:r95  l0     0   49:r96  l0     2   47:r97  l0     4   46:r98  l0     0
   45:r99  l0     0   44:r100 l0     0   41:r101 l0     1   40:r102 l0     2
   39:r103 l0     0   37:r104 l0     0   34:r105 l0     1   35:r106 l0     0
   33:r107 l0     0   32:r108 l0     0   30:r109 l0     0   28:r110 l0     1
   27:r111 l0     2   26:r112 l0     0   20:r113 l0     1   18:r114 l0     1
   15:r115 l0     0   13:r116 l0     0   12:r117 l0     1   10:r118 l0     1
    9:r119 l0     0    8:r120 l0     0    7:r121 l0     1    2:r122 l0     0
    0:r123 l0     0   66:r124 l0     0   64:r125 l0     1   61:r126 l0     0
   60:r127 l0     0   59:r128 l0     0   56:r129 l0     0   51:r130 l0     0
   50:r131 l0     0   48:r132 l0     1   43:r133 l0     0   42:r134 l0     0
   38:r135 l0     0   36:r136 l0     0   31:r137 l0     0   29:r138 l0     0
   24:r139 l0     0   25:r140 l0     1   22:r141 l0     0   23:r142 l0     1
   21:r143 l0     0   19:r144 l0     0   17:r145 l0     0   16:r146 l0     0
   14:r147 l0     0   11:r148 l0     0    6:r149 l0     2    5:r150 l0     0
    4:r151 l0     1    3:r152 l0     2    1:r153 l0     3
+++Costs: overall -39, reg -39, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {long long int}; _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={22d,11u} r1={29d,7u} r2={21d,1u} r4={29d,10u} r5={37d,18u} r6={1d,11u} r7={1d,30u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={1d,10u} r17={29d,1u} r18={19d} r19={19d} r20={1d,56u,4e} r21={20d} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={20d} r38={20d} r39={19d} r40={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r53={19d} r54={19d} r55={19d} r56={19d} r57={19d} r58={19d} r59={19d} r60={19d} r61={19d} r62={19d} r63={19d} r64={19d} r65={19d} r66={19d} r67={19d} r68={19d} r69={19d} r70={19d} r71={19d} r72={19d} r73={19d} r74={19d} r75={19d} r76={19d} r77={19d} r78={19d} r79={19d} r80={19d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u,1e} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u,1e} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u,1e} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u,1e} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} 
;;    total ref usage 1732{1502d,222u,8e} in 135{116 regular + 19 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 124 125 126 127 128 129 130 131 132
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/vector.tcc:407 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __args#0+0 S8 A64])
        (reg:DI 4 si [ __args#0 ])) /usr/include/c++/5/bits/vector.tcc:407 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __args#0 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fdf7b696120 *.LC32>)) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (const_int 1 [0x1])) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 124)) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc") [flags 0x3]  <function_decl 0x7fdf7bdb7438 _M_check_len>) [0 _M_check_len S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:411 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 12 11 13 2 (set (reg:DI 87 [ D.48931 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])
        (reg:DI 87 [ D.48931 ])) /usr/include/c++/5/bits/vector.tcc:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.48931 ])
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 88 [ D.48932 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 125)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 125)) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48932 ])) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48932 ])
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm") [flags 0x3]  <function_decl 0x7fdf7c176288 _M_allocate>) [0 _M_allocate S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:412 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 89 [ D.48933 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])
        (reg/f:DI 89 [ D.48933 ])) /usr/include/c++/5/bits/vector.tcc:412 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48933 ])
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:413 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
        (reg/f:DI 126)) /usr/include/c++/5/bits/vector.tcc:413 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 126)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __args#0+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:417 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 127)) /usr/include/c++/5/bits/vector.tcc:417 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(call_insn 25 24 26 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE") [flags 0x3]  <function_decl 0x7fdf7bc0e510 forward>) [0 forward S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:417 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 2 (set (reg/f:DI 90 [ D.48934 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:417 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 128)) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128)
        (nil)))
(call_insn 29 28 30 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE4sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195438 size>) [0 size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:416 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 30 29 31 2 (set (reg:DI 91 [ D.48935 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 31 30 32 2 (parallel [
            (set (reg:DI 92 [ D.48935 ])
                (ashift:DI (reg:DI 91 [ D.48935 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:416 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.48935 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 2 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (parallel [
            (set (reg/f:DI 93 [ D.48936 ])
                (plus:DI (reg:DI 92 [ D.48935 ])
                    (reg/f:DI 129)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:416 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (expr_list:REG_DEAD (reg:DI 92 [ D.48935 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])
                        (reg:DI 92 [ D.48935 ]))
                    (nil))))))
(insn 34 33 35 2 (set (reg/f:DI 94 [ D.48937 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 1 dx)
        (reg/f:DI 90 [ D.48934 ])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48934 ])
        (nil)))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (reg/f:DI 93 [ D.48936 ])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.48936 ])
        (nil)))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.48937 ])) /usr/include/c++/5/bits/vector.tcc:416 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.48937 ])
        (nil)))
(call_insn 38 37 39 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_") [flags 0x3]  <function_decl 0x7fdf7bc0eaf8 construct>) [0 construct S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:416 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 39 38 40 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:418 89 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg/f:DI 95 [ D.48932 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:423 89 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.48932 ])) /usr/include/c++/5/bits/vector.tcc:423 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.48932 ])
        (nil)))
(call_insn 42 41 43 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149af8 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:423 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 44 2 (set (reg/f:DI 96 [ D.48938 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:423 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 44 43 45 2 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:422 89 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg/f:DI 97 [ D.48936 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 130)
                (const_int 8 [0x8])) [0 this_6(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
(insn 46 45 47 2 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:422 89 {*movdi_internal}
     (nil))
(insn 47 46 48 2 (set (reg/f:DI 98 [ D.48936 ])
        (mem/f/j:DI (reg/f:DI 131) [0 this_6(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (nil)))
(insn 48 47 49 2 (set (reg:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (nil))
(insn 49 48 50 2 (set (reg:DI 2 cx)
        (reg/f:DI 96 [ D.48938 ])) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.48938 ])
        (nil)))
(insn 50 49 51 2 (set (reg:DI 1 dx)
        (reg:DI 132)) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(insn 51 50 52 2 (set (reg:DI 4 si)
        (reg/f:DI 97 [ D.48936 ])) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.48936 ])
        (nil)))
(insn 52 51 53 2 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.48936 ])) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.48936 ])
        (nil)))
(call_insn 53 52 156 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_") [flags 0x3]  <function_decl 0x7fdf7bc951b0 __uninitialized_move_if_noexcept_a>) [0 __uninitialized_move_if_noexcept_a S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:420 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 1 [0x1])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 133 134 135 136 137 138 139 140 141 142 143 144 145
(note 156 53 54 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 54 156 56 3 (set (reg/f:DI 99 [ D.48933 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 56 54 57 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
        (reg/f:DI 99 [ D.48933 ])) /usr/include/c++/5/bits/vector.tcc:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.48933 ])
        (nil)))
(insn 57 56 58 3 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:425 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 58 57 59 3 (set (reg/f:DI 100 [ D.48932 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:437 89 {*movdi_internal}
     (nil))
(insn 59 58 60 3 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.48932 ])) /usr/include/c++/5/bits/vector.tcc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.48932 ])
        (nil)))
(call_insn 60 59 61 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149af8 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:437 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 62 3 (set (reg/f:DI 101 [ D.48938 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 62 61 63 3 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (nil))
(insn 63 62 64 3 (set (reg/f:DI 102 [ D.48936 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 133)
                (const_int 8 [0x8])) [0 this_6(D)->D.43079._M_impl._M_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133)
        (nil)))
(insn 64 63 65 3 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (nil))
(insn 65 64 66 3 (set (reg/f:DI 103 [ D.48936 ])
        (mem/f/j:DI (reg/f:DI 134) [0 this_6(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134)
        (nil)))
(insn 66 65 67 3 (set (reg:DI 1 dx)
        (reg/f:DI 101 [ D.48938 ])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.48938 ])
        (nil)))
(insn 67 66 68 3 (set (reg:DI 4 si)
        (reg/f:DI 102 [ D.48936 ])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.48936 ])
        (nil)))
(insn 68 67 69 3 (set (reg:DI 5 di)
        (reg/f:DI 103 [ D.48936 ])) /usr/include/c++/5/bits/vector.tcc:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.48936 ])
        (nil)))
(call_insn 69 68 70 3 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E") [flags 0x3]  <function_decl 0x7fdf7bbb8e58 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:436 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 70 69 71 3 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:440 89 {*movdi_internal}
     (nil))
(insn 71 70 72 3 (set (reg/f:DI 104 [ D.48936 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 135)
                (const_int 16 [0x10])) [0 this_6(D)->D.43079._M_impl._M_end_of_storage+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135)
        (nil)))
(insn 72 71 73 3 (set (reg:DI 105 [ D.48939 ])
        (reg/f:DI 104 [ D.48936 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.48936 ])
        (nil)))
(insn 73 72 74 3 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:440 89 {*movdi_internal}
     (nil))
(insn 74 73 75 3 (set (reg/f:DI 106 [ D.48936 ])
        (mem/f/j:DI (reg/f:DI 136) [0 this_6(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136)
        (nil)))
(insn 75 74 76 3 (set (reg:DI 107 [ D.48939 ])
        (reg/f:DI 106 [ D.48936 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ D.48936 ])
        (nil)))
(insn 76 75 77 3 (parallel [
            (set (reg:DI 108 [ D.48939 ])
                (minus:DI (reg:DI 105 [ D.48939 ])
                    (reg:DI 107 [ D.48939 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:438 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 107 [ D.48939 ])
        (expr_list:REG_DEAD (reg:DI 105 [ D.48939 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 77 76 78 3 (parallel [
            (set (reg:DI 137)
                (ashiftrt:DI (reg:DI 108 [ D.48939 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:438 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 108 [ D.48939 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:DI (reg:DI 108 [ D.48939 ])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 78 77 79 3 (set (reg:DI 109 [ D.48939 ])
        (reg:DI 137)) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137)
        (nil)))
(insn 79 78 80 3 (set (reg:DI 110 [ D.48935 ])
        (reg:DI 109 [ D.48939 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109 [ D.48939 ])
        (nil)))
(insn 80 79 81 3 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (nil))
(insn 81 80 82 3 (set (reg/f:DI 111 [ D.48936 ])
        (mem/f/j:DI (reg/f:DI 138) [0 this_6(D)->D.43079._M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138)
        (nil)))
(insn 82 81 83 3 (set (reg/f:DI 112 [ D.48932 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (nil))
(insn 83 82 84 3 (set (reg:DI 1 dx)
        (reg:DI 110 [ D.48935 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ D.48935 ])
        (nil)))
(insn 84 83 85 3 (set (reg:DI 4 si)
        (reg/f:DI 111 [ D.48936 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.48936 ])
        (nil)))
(insn 85 84 86 3 (set (reg:DI 5 di)
        (reg/f:DI 112 [ D.48932 ])) /usr/include/c++/5/bits/vector.tcc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.48932 ])
        (nil)))
(call_insn 86 85 87 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm") [flags 0x3]  <function_decl 0x7fdf7c176360 _M_deallocate>) [0 _M_deallocate S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:438 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 87 86 88 3 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:441 89 {*movdi_internal}
     (nil))
(insn 88 87 89 3 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:441 89 {*movdi_internal}
     (nil))
(insn 89 88 90 3 (set (mem/f/j:DI (reg/f:DI 139) [0 this_6(D)->D.43079._M_impl._M_start+0 S8 A64])
        (reg/f:DI 140)) /usr/include/c++/5/bits/vector.tcc:441 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140)
        (expr_list:REG_DEAD (reg/f:DI 139)
            (nil))))
(insn 90 89 91 3 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:442 89 {*movdi_internal}
     (nil))
(insn 91 90 92 3 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:442 89 {*movdi_internal}
     (nil))
(insn 92 91 93 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 141)
                (const_int 8 [0x8])) [0 this_6(D)->D.43079._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 142)) /usr/include/c++/5/bits/vector.tcc:442 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 142)
        (expr_list:REG_DEAD (reg/f:DI 141)
            (nil))))
(insn 93 92 94 3 (set (reg:DI 143)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:443 89 {*movdi_internal}
     (nil))
(insn 94 93 95 3 (parallel [
            (set (reg:DI 113 [ D.48935 ])
                (ashift:DI (reg:DI 143)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:443 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 143)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 95 94 96 3 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:443 89 {*movdi_internal}
     (nil))
(insn 96 95 97 3 (parallel [
            (set (reg/f:DI 114 [ D.48936 ])
                (plus:DI (reg:DI 113 [ D.48935 ])
                    (reg/f:DI 144)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:443 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 144)
        (expr_list:REG_DEAD (reg:DI 113 [ D.48935 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])
                        (reg:DI 113 [ D.48935 ]))
                    (nil))))))
(insn 97 96 98 3 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:443 89 {*movdi_internal}
     (nil))
(insn 98 97 164 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 145)
                (const_int 16 [0x10])) [0 this_6(D)->D.43079._M_impl._M_end_of_storage+0 S8 A64])
        (reg/f:DI 114 [ D.48936 ])) /usr/include/c++/5/bits/vector.tcc:443 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 145)
        (expr_list:REG_DEAD (reg/f:DI 114 [ D.48936 ])
            (nil))))
(jump_insn 164 98 165 3 (set (pc)
        (label_ref 163)) /usr/include/c++/5/bits/vector.tcc:444 654 {jump}
     (nil)
 -> 163)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 165 164 157)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 146
(code_label/s 157 165 159 4 279 "" [1 uses])
(note 159 157 158 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 158 159 103 4 (set (reg:DI 146)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 103 158 104 4 (set (reg/f:DI 115 [ D.48940 ])
        (reg:DI 146)) /usr/include/c++/5/bits/vector.tcc:427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(insn 104 103 105 4 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.48940 ])) /usr/include/c++/5/bits/vector.tcc:427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.48940 ])
        (nil)))
(call_insn 105 104 106 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7fdf7cc8a1b0 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:427 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 106 105 107 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:429 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 107 106 108 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) /usr/include/c++/5/bits/vector.tcc:429 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 123)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 116 117 118 119 147 148
(note 108 107 109 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 5 (set (reg:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (nil))
(insn 110 109 111 5 (set (reg:DI 5 di)
        (reg:DI 147)) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147)
        (nil)))
(call_insn 111 110 112 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE4sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195438 size>) [0 size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:430 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 5 (set (reg:DI 116 [ D.48935 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 113 112 114 5 (parallel [
            (set (reg:DI 117 [ D.48935 ])
                (ashift:DI (reg:DI 116 [ D.48935 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:430 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 116 [ D.48935 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 5 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (nil))
(insn 115 114 116 5 (parallel [
            (set (reg/f:DI 118 [ D.48936 ])
                (plus:DI (reg:DI 117 [ D.48935 ])
                    (reg/f:DI 148)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/vector.tcc:430 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 148)
        (expr_list:REG_DEAD (reg:DI 117 [ D.48935 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])
                        (reg:DI 117 [ D.48935 ]))
                    (nil))))))
(insn 116 115 117 5 (set (reg/f:DI 119 [ D.48937 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (nil))
(insn 117 116 118 5 (set (reg:DI 4 si)
        (reg/f:DI 118 [ D.48936 ])) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ D.48936 ])
        (nil)))
(insn 118 117 119 5 (set (reg:DI 5 di)
        (reg/f:DI 119 [ D.48937 ])) /usr/include/c++/5/bits/vector.tcc:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.48937 ])
        (nil)))
(call_insn 119 118 166 5 (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_") [flags 0x3]  <function_decl 0x7fdf7bc95798 destroy>) [0 destroy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:430 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 166 119 167 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 167 166 168 6 (set (pc)
        (label_ref 135)) 654 {jump}
     (nil)
 -> 135)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 168 167 123)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 120 121 149 150
(code_label 123 168 124 7 276 "" [1 uses])
(note 124 123 125 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 7 (set (reg/f:DI 120 [ D.48932 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (nil))
(insn 126 125 127 7 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.48932 ])) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.48932 ])
        (nil)))
(call_insn 127 126 128 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149af8 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/vector.tcc:432 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 128 127 129 7 (set (reg/f:DI 121 [ D.48938 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 129 128 130 7 (set (reg:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __new_finish+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (nil))
(insn 130 129 131 7 (set (reg:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (nil))
(insn 131 130 132 7 (set (reg:DI 1 dx)
        (reg/f:DI 121 [ D.48938 ])) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.48938 ])
        (nil)))
(insn 132 131 133 7 (set (reg:DI 4 si)
        (reg:DI 149)) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 149)
        (nil)))
(insn 133 132 134 7 (set (reg:DI 5 di)
        (reg:DI 150)) /usr/include/c++/5/bits/vector.tcc:432 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 150)
        (nil)))
(call_insn 134 133 135 7 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E") [flags 0x3]  <function_decl 0x7fdf7bbb8e58 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:432 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 122 151 152
(code_label 135 134 136 8 277 "" [1 uses])
(note 136 135 137 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 8 (set (reg/f:DI 122 [ D.48932 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (nil))
(insn 138 137 139 8 (set (reg:DI 151)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (nil))
(insn 139 138 140 8 (set (reg:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __new_start+0 S8 A64])) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (nil))
(insn 140 139 141 8 (set (reg:DI 1 dx)
        (reg:DI 151)) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 151)
        (nil)))
(insn 141 140 142 8 (set (reg:DI 4 si)
        (reg:DI 152)) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 152)
        (nil)))
(insn 142 141 143 8 (set (reg:DI 5 di)
        (reg/f:DI 122 [ D.48932 ])) /usr/include/c++/5/bits/vector.tcc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ D.48932 ])
        (nil)))
(call_insn 143 142 144 8 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm") [flags 0x3]  <function_decl 0x7fdf7c176360 _M_deallocate>) [0 _M_deallocate S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:433 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 144 143 145 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 145 144 146 9 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7fdf7bc95d80 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:434 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 146 145 160)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 10 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 123 153
(code_label/s 160 146 162 10 280 "" [1 uses])
(note 162 160 161 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 161 162 149 10 (set (reg:DI 153)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(call_insn 149 161 150 10 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7fdf7cc8a000 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/vector.tcc:427 660 {*call}
     (expr_list:REG_EH_REGION (const_int -3 [0xfffffffffffffffd])
        (nil))
    (nil))
(insn 150 149 151 10 (set (reg/f:DI 123 [ D.48930 ])
        (reg:DI 153)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 153)
        (nil)))
(insn 151 150 152 10 (set (reg:DI 5 di)
        (reg/f:DI 123 [ D.48930 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ D.48930 ])
        (nil)))
(call_insn 152 151 153 10 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 153 152 163)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 163 153 155 11 281 "" [1 uses])
(note 155 163 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const long long int*; _Container = std::vector<long long int>] (_ZN9__gnu_cxxeqIPKxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=2174, decl_uid=44905, cgraph_uid=793, symbol_order=795)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a7(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 21(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 3(l0): point = 30
   Insn 2(l0): point = 32
 a0(r92): [3..4]
 a1(r91): [5..6]
 a2(r90): [9..10]
 a3(r88): [9..20]
 a4(r89): [11..12]
 a5(r94): [17..18]
 a6(r87): [21..22]
 a7(r93): [27..28]
Compressing live ranges: from 35 to 14 - 40%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r90): [4..5]
 a3(r88): [4..9]
 a4(r89): [6..7]
 a5(r94): [8..9]
 a6(r87): [10..11]
 a7(r93): [12..13]
  regions=1, blocks=3, points=14
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    6:r87  l0     0    3:r88  l0     3    4:r89  l0     0    2:r90  l0     0
    1:r91  l0     0    0:r92  l0     0    7:r93  l0     0    5:r94  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const long long int*; _Container = std::vector<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={3d,1u} r18={2d} r19={2d} r20={1d,6u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 205{175d,30u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __lhs+0 S8 A64])
        (reg:DI 5 di [ __lhs ])) /usr/include/c++/5/bits/stl_iterator.h:827 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __lhs ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __rhs+0 S8 A64])
        (reg:DI 4 si [ __rhs ])) /usr/include/c++/5/bits/stl_iterator.h:827 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __rhs ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __lhs+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:830 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_iterator.h:830 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv") [flags 0x3]  <function_decl 0x7fdf7be5da20 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:830 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 87 [ D.48941 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:830 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ D.48942 ])
        (mem/f:DI (reg/f:DI 87 [ D.48941 ]) [0 *_4+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:830 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48941 ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __rhs+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:830 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 94)) /usr/include/c++/5/bits/stl_iterator.h:830 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv") [flags 0x3]  <function_decl 0x7fdf7be5da20 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:830 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 89 [ D.48941 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:830 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 90 [ D.48942 ])
        (mem/f:DI (reg/f:DI 89 [ D.48941 ]) [0 *_8+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:830 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48941 ])
        (nil)))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.48942 ])
            (reg/f:DI 90 [ D.48942 ]))) /usr/include/c++/5/bits/stl_iterator.h:830 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48942 ])
        (expr_list:REG_DEAD (reg/f:DI 88 [ D.48942 ])
            (nil))))
(insn 18 17 21 2 (set (reg:QI 91 [ D.48943 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:830 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 21 18 25 2 (set (reg:QI 92 [ <retval> ])
        (reg:QI 91 [ D.48943 ])) /usr/include/c++/5/bits/stl_iterator.h:830 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 91 [ D.48943 ])
        (nil)))
(insn 25 21 26 2 (set (reg/i:QI 0 ax)
        (reg:QI 92 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator.h:830 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 92 [ <retval> ])
        (nil)))
(insn 26 25 0 2 (use (reg/i:QI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:830 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const long long int*; _Container = std::vector<long long int>] (_ZN9__gnu_cxxneIPKxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=2175, decl_uid=44928, cgraph_uid=794, symbol_order=796)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a7(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 21(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 3(l0): point = 30
   Insn 2(l0): point = 32
 a0(r92): [3..4]
 a1(r91): [5..6]
 a2(r90): [9..10]
 a3(r88): [9..20]
 a4(r89): [11..12]
 a5(r94): [17..18]
 a6(r87): [21..22]
 a7(r93): [27..28]
Compressing live ranges: from 35 to 14 - 40%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r90): [4..5]
 a3(r88): [4..9]
 a4(r89): [6..7]
 a5(r94): [8..9]
 a6(r87): [10..11]
 a7(r93): [12..13]
  regions=1, blocks=3, points=14
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    6:r87  l0     0    3:r88  l0     3    4:r89  l0     0    2:r90  l0     0
    1:r91  l0     0    0:r92  l0     0    7:r93  l0     0    5:r94  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const long long int*; _Container = std::vector<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={3d,1u} r18={2d} r19={2d} r20={1d,6u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 205{175d,30u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __lhs+0 S8 A64])
        (reg:DI 5 di [ __lhs ])) /usr/include/c++/5/bits/stl_iterator.h:841 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __lhs ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __rhs+0 S8 A64])
        (reg:DI 4 si [ __rhs ])) /usr/include/c++/5/bits/stl_iterator.h:841 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __rhs ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __lhs+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv") [flags 0x3]  <function_decl 0x7fdf7be5da20 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:844 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 87 [ D.48944 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ D.48945 ])
        (mem/f:DI (reg/f:DI 87 [ D.48944 ]) [0 *_4+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48944 ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __rhs+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 94)) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv") [flags 0x3]  <function_decl 0x7fdf7be5da20 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:844 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 89 [ D.48944 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 90 [ D.48945 ])
        (mem/f:DI (reg/f:DI 89 [ D.48944 ]) [0 *_8+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48944 ])
        (nil)))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.48945 ])
            (reg/f:DI 90 [ D.48945 ]))) /usr/include/c++/5/bits/stl_iterator.h:844 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48945 ])
        (expr_list:REG_DEAD (reg/f:DI 88 [ D.48945 ])
            (nil))))
(insn 18 17 21 2 (set (reg:QI 91 [ D.48946 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:844 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 21 18 25 2 (set (reg:QI 92 [ <retval> ])
        (reg:QI 91 [ D.48946 ])) /usr/include/c++/5/bits/stl_iterator.h:844 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 91 [ D.48946 ])
        (nil)))
(insn 25 21 26 2 (set (reg/i:QI 0 ax)
        (reg:QI 92 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator.h:844 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 92 [ <retval> ])
        (nil)))
(insn 26 25 0 2 (use (reg/i:QI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:844 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const long long int*; _Container = std::vector<long long int>] (_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEppEv, funcdef_no=2176, decl_uid=43588, cgraph_uid=795, symbol_order=797)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 2(l0): point = 18
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r92): [9..10]
 a3(r88): [9..12]
 a4(r87): [13..14]
 a5(r91): [15..16]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r92): [4..5]
 a3(r88): [4..5]
 a4(r87): [6..7]
 a5(r91): [8..9]
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r87  l0     0    3:r88  l0     1    1:r89  l0     0    0:r90  l0     0
    5:r91  l0     0    2:r92  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const long long int*; _Container = std::vector<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 47{27d,20u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 87 88 89 90 91 92
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_iterator.h:761 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:763 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ D.48947 ])
        (mem/f/j:DI (reg/f:DI 91) [0 this_2(D)->_M_current+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:763 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 88 [ D.48947 ])
                (plus:DI (reg/f:DI 87 [ D.48947 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator.h:763 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48947 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 9 8 10 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:763 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/f/j:DI (reg/f:DI 92) [0 this_2(D)->_M_current+0 S8 A64])
        (reg/f:DI 88 [ D.48947 ])) /usr/include/c++/5/bits/stl_iterator.h:763 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_DEAD (reg/f:DI 88 [ D.48947 ])
            (nil))))
(insn 11 10 14 2 (set (reg/f:DI 89 [ D.48948 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:764 89 {*movdi_internal}
     (nil))
(insn 14 11 18 2 (set (reg:DI 90 [ <retval> ])
        (reg/f:DI 89 [ D.48948 ])) /usr/include/c++/5/bits/stl_iterator.h:764 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48948 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator.h:765 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:765 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const long long int*; _Container = std::vector<long long int>; __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const long long int&] (_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEdeEv, funcdef_no=2177, decl_uid=43584, cgraph_uid=796, symbol_order=798)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [7..8]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const long long int*; _Container = std::vector<long long int>; __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const long long int&]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 38{23d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_iterator.h:753 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:754 89 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (set (reg/f:DI 87 [ D.48949 ])
        (mem/f/j:DI (reg/f:DI 89) [0 this_2(D)->_M_current+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:754 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 10 7 14 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48949 ])) /usr/include/c++/5/bits/stl_iterator.h:754 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48949 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator.h:754 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:754 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_, funcdef_no=2179, decl_uid=44936, cgraph_uid=798, symbol_order=800)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4

   Insn 22(l0): point = 1
   Insn 21(l0): point = 4
   Insn 20(l0): point = 6
   Insn 28(l0): point = 8
   Insn 18(l0): point = 10
   Insn 17(l0): point = 12
   Insn 16(l0): point = 14
   Insn 15(l0): point = 16
   Insn 14(l0): point = 18
   Insn 13(l0): point = 20
   Insn 12(l0): point = 22
   Insn 11(l0): point = 24
   Insn 10(l0): point = 26
   Insn 9(l0): point = 28
   Insn 6(l0): point = 30
   Insn 4(l0): point = 32
   Insn 3(l0): point = 34
   Insn 2(l0): point = 36
 a0(r90): [15..24]
 a1(r89): [17..26]
 a2(r88): [19..28]
 a3(r87): [21..38]
Compressing live ranges: from 39 to 2 - 5%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [0..1]
 a2(r88): [0..1]
 a3(r87): [0..1]
  regions=1, blocks=5, points=2
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    3:r87  l0    37    2:r88  l0     1    1:r89  l0     2    0:r90  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,2u} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={4d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,12u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 218{176d,42u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/basic_string.h:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __beg+0 S8 A64])
        (reg:DI 4 si [ __beg ])) /usr/include/c++/5/bits/basic_string.h:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __beg ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __end+0 S8 A64])
        (reg:DI 1 dx [ __end ])) /usr/include/c++/5/bits/basic_string.h:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __end ])
        (nil)))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48950+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:211 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 6 10 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __end+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:214 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __beg+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:214 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:214 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:214 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 13 12 14 2 (set (mem:QI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S1 A8])
        (reg:QI 87 [ D.47808 ])) /usr/include/c++/5/bits/basic_string.h:214 67 {*pushqi2_rex64}
     (expr_list:REG_DEAD (reg:QI 87 [ D.47808 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg:DI 88)) /usr/include/c++/5/bits/basic_string.h:214 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 89)) /usr/include/c++/5/bits/basic_string.h:214 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/include/c++/5/bits/basic_string.h:214 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type") [flags 0x3]  <function_decl 0x7fdf7bcd6d80 _M_construct_aux>) [0 _M_construct_aux S1 A8])
        (const_int 16 [0x10])) /usr/include/c++/5/bits/basic_string.h:214 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 18 17 28 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:214 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 28 18 20 2 (const_int 0 [0]) /usr/include/c++/5/bits/basic_string.h:215 684 {nop}
     (nil))
(insn 20 28 21 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48950+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/basic_string.h:215 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 21 20 26 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) /usr/include/c++/5/bits/basic_string.h:215 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 26 21 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 22 26 23 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:215 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 23 22 24)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 24 23 27 4 291 "" [1 uses])
(note 27 24 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev, funcdef_no=2204, decl_uid=42395, cgraph_uid=823, symbol_order=825)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 2(l0): point = 20
 a0(r90): [3..4]
 a1(r89): [7..8]
 a2(r88): [11..12]
 a3(r87): [17..18]
Compressing live ranges: from 23 to 8 - 34%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r88): [4..5]
 a3(r87): [6..7]
  regions=1, blocks=3, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    3:r87  l0     0    2:r88  l0     0    1:r89  l0     0    0:r90  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 115{96d,19u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:87 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 87)) /usr/include/c++/5/bits/stl_vector.h:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIxEC2Ev") [flags 0x3]  <function_decl 0x7fdf7c16f6c0 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:87 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:87 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/f/j:DI (reg/f:DI 88) [0 this_2(D)->_M_start+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:87 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [0 this_2(D)->_M_finish+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:87 89 {*movdi_internal}
     (nil))
(insn 14 13 17 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [0 this_2(D)->_M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:87 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 17 14 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:88 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::pointer = long long int*; std::size_t = long unsigned int] (_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm, funcdef_no=2206, decl_uid=42403, cgraph_uid=825, symbol_order=827)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 26(l0): point = 1
   Insn 17(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 9(l0): point = 19
   Insn 8(l0): point = 21
   Insn 4(l0): point = 23
   Insn 3(l0): point = 25
   Insn 2(l0): point = 27
 a0(r87): [7..16]
 a1(r89): [9..12]
 a2(r88): [11..14]
Compressing live ranges: from 30 to 2 - 6%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r89): [0..1]
 a2(r88): [0..1]
  regions=1, blocks=6, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    0:r87  l0     0    2:r88  l0     1    1:r89  l0     2
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::pointer = long long int*; std::size_t = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={2d,1u} r18={1d} r19={1d} r20={1d,12u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 135{98d,37u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/include/c++/5/bits/stl_vector.h:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])
        (reg:DI 1 dx [ __n ])) /usr/include/c++/5/bits/stl_vector.h:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __n ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 87 [ D.48951 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:178 89 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 88)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:178 89 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:178 89 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 1 dx)
        (reg:DI 88)) /usr/include/c++/5/bits/stl_vector.h:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 15 14 16 3 (set (reg:DI 4 si)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_vector.h:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48951 ])) /usr/include/c++/5/bits/stl_vector.h:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48951 ])
        (nil)))
(call_insn 17 16 25 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm") [flags 0x3]  <function_decl 0x7fdf7c139af8 deallocate>) [0 deallocate S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:178 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 4, flags: (NEW, RTL, MODIFIED)
;;  pred:       2
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 17 24 5 295 "" [1 uses])
(note 24 25 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 24 20 5 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:179 684 {nop}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 20 26 21 4 293 "" [0 uses])
(note 21 20 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = long long int*] (_ZSt8_DestroyIPxEvT_S1_, funcdef_no=2207, decl_uid=45082, cgraph_uid=826, symbol_order=828)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [5..8]
 a1(r87): [7..10]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     1    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 113{95d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_construct.h:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_construct.h:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])) /usr/include/c++/5/bits/stl_construct.h:126 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_construct.h:126 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 87)) /usr/include/c++/5/bits/stl_construct.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/include/c++/5/bits/stl_construct.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 11 10 14 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_") [flags 0x3]  <function_decl 0x7fdf7bd00948 __destroy>) [0 __destroy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_construct.h:126 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 11 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_construct.h:128 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::allocator_type std::_Vector_base<_Tp, _Alloc>::get_allocator() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<long long int>] (_ZNKSt12_Vector_baseIxSaIxEE13get_allocatorEv, funcdef_no=2208, decl_uid=42169, cgraph_uid=827, symbol_order=829)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r89): [7..10]
 a1(r87): [9..12]
 a2(r88): [17..18]
Compressing live ranges: from 25 to 4 - 16%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r87): [0..1]
 a2(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     1    2:r88  l0     0    0:r89  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::allocator_type std::_Vector_base<_Tp, _Alloc>::get_allocator() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,7u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 195{170d,25u,0e} in 12{10 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) /usr/include/c++/5/bits/stl_vector.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 this+0 S8 A64])
        (reg:DI 4 si [ this ])) /usr/include/c++/5/bits/stl_vector.h:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ this ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:122 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/include/c++/5/bits/stl_vector.h:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149bd0 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:122 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 87 [ D.48952 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:122 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.48952 ])) /usr/include/c++/5/bits/stl_vector.h:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48952 ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_vector.h:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 14 13 20 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIxEC1ERKS_") [flags 0x3]  <function_decl 0x7fdf7c16f438 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:122 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 20 14 21 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:122 89 {*movdi_internal}
     (nil))
(insn 21 20 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:122 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::vector(const allocator_type&) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<long long int>] (_ZNSt6vectorIxSaIxEEC2ERKS0_, funcdef_no=2210, decl_uid=43066, cgraph_uid=829, symbol_order=831)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
 a0(r87): [5..10]
 a1(r88): [7..8]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r88): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    0:r87  l0     0    1:r88  l0     1
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::vector(const allocator_type&) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 113{95d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:264 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])
        (reg:DI 4 si [ __a ])) /usr/include/c++/5/bits/stl_vector.h:264 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __a ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ D.48954 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:265 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:265 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 88)) /usr/include/c++/5/bits/stl_vector.h:265 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48954 ])) /usr/include/c++/5/bits/stl_vector.h:265 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48954 ])
        (nil)))
(call_insn 11 10 14 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEEC2ERKS0_") [flags 0x3]  <function_decl 0x7fdf7c176e58 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:265 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 11 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:265 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_M_swap_data(std::_Vector_base<_Tp, _Alloc>::_Vector_impl&) [with _Tp = long long int; _Alloc = std::allocator<long long int>] (_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_, funcdef_no=2212, decl_uid=42378, cgraph_uid=831, symbol_order=833)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a2(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 28(l0): point = 0
   Insn 25(l0): point = 2
   Insn 24(l0): point = 4
   Insn 23(l0): point = 6
   Insn 22(l0): point = 8
   Insn 21(l0): point = 10
   Insn 20(l0): point = 12
   Insn 19(l0): point = 14
   Insn 18(l0): point = 16
   Insn 17(l0): point = 18
   Insn 16(l0): point = 20
   Insn 15(l0): point = 22
   Insn 14(l0): point = 24
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 7(l0): point = 38
   Insn 3(l0): point = 40
   Insn 2(l0): point = 42
 a0(r92): [5..8]
 a1(r91): [7..12]
 a2(r96): [9..10]
 a3(r95): [13..14]
 a4(r90): [19..22]
 a5(r89): [21..26]
 a6(r94): [23..24]
 a7(r93): [27..28]
 a8(r88): [33..36]
 a9(r87): [35..38]
Compressing live ranges: from 45 to 14 - 31%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [0..3]
 a2(r96): [2..3]
 a3(r95): [4..5]
 a4(r90): [6..7]
 a5(r89): [6..9]
 a6(r94): [8..9]
 a7(r93): [10..11]
 a8(r88): [12..13]
 a9(r87): [12..13]
  regions=1, blocks=3, points=14
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    9:r87  l0     1    8:r88  l0     0    5:r89  l0     1    4:r90  l0     0
    1:r91  l0     1    0:r92  l0     0    7:r93  l0     0    6:r94  l0     0
    3:r95  l0     0    2:r96  l0     0
+++Costs: overall -6, reg -6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_M_swap_data(std::_Vector_base<_Tp, _Alloc>::_Vector_impl&) [with _Tp = long long int; _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={7d,4u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={7d} r18={3d} r19={3d} r20={1d,10u,4e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 295{255d,36u,4e} in 22{19 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])
        (reg:DI 4 si [ __x ])) /usr/include/c++/5/bits/stl_vector.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __x ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ D.48955 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:103 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 88 [ D.48955 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:103 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.48955 ])) /usr/include/c++/5/bits/stl_vector.h:103 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48955 ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48955 ])) /usr/include/c++/5/bits/stl_vector.h:103 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48955 ])
        (nil)))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt4swapIPxEvRT_S2_") [flags 0x3]  <function_decl 0x7fdf7bd09360 swap>) [0 swap S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:103 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:104 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 89 [ D.48955 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:104 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 14 13 15 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:104 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg/f:DI 90 [ D.48955 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:104 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.48955 ])) /usr/include/c++/5/bits/stl_vector.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48955 ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.48955 ])) /usr/include/c++/5/bits/stl_vector.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48955 ])
        (nil)))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt4swapIPxEvRT_S2_") [flags 0x3]  <function_decl 0x7fdf7bd09360 swap>) [0 swap S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:104 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:105 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg/f:DI 91 [ D.48955 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:105 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __x+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 21 20 22 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:105 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 92 [ D.48955 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:105 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.48955 ])) /usr/include/c++/5/bits/stl_vector.h:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48955 ])
        (nil)))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.48955 ])) /usr/include/c++/5/bits/stl_vector.h:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.48955 ])
        (nil)))
(call_insn 25 24 28 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt4swapIPxEvRT_S2_") [flags 0x3]  <function_decl 0x7fdf7bd09360 swap>) [0 swap S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:105 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 28 25 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:106 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::__alloc_on_move(_Alloc&, _Alloc&) [with _Alloc = std::allocator<long long int>] (_ZSt15__alloc_on_moveISaIxEEvRT_S2_, funcdef_no=2213, decl_uid=45088, cgraph_uid=832, symbol_order=834)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4

   Insn 19(l0): point = 1
   Insn 18(l0): point = 4
   Insn 17(l0): point = 6
   Insn 25(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 8(l0): point = 24
   Insn 5(l0): point = 26
   Insn 3(l0): point = 28
   Insn 2(l0): point = 30
 a0(r89): [15..22]
 a1(r88): [17..24]
 a2(r87): [19..32]
Compressing live ranges: from 33 to 2 - 6%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [0..1]
 a2(r87): [0..1]
  regions=1, blocks=5, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r87  l0     2    1:r88  l0     1    0:r89  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::__alloc_on_move(_Alloc&, _Alloc&) [with _Alloc = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={4d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,10u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 211{174d,37u,0e} in 15{13 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __one+0 S8 A64])
        (reg:DI 5 di [ __one ])) /usr/include/c++/5/bits/alloc_traits.h:598 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __one ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __two+0 S8 A64])
        (reg:DI 4 si [ __two ])) /usr/include/c++/5/bits/alloc_traits.h:598 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __two ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48956+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/alloc_traits.h:598 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __two+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:602 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __one+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:602 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/alloc_traits.h:602 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 11 10 12 2 (set (mem:QI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S1 A8])
        (reg:QI 87 [ D.47488 ])) /usr/include/c++/5/bits/alloc_traits.h:602 67 {*pushqi2_rex64}
     (expr_list:REG_DEAD (reg:QI 87 [ D.47488 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 88)) /usr/include/c++/5/bits/alloc_traits.h:602 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/alloc_traits.h:602 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt18__do_alloc_on_moveISaIxEEvRT_S2_St17integral_constantIbLb1EE") [flags 0x3]  <function_decl 0x7fdf7bd841b0 __do_alloc_on_move>) [0 __do_alloc_on_move S1 A8])
        (const_int 16 [0x10])) /usr/include/c++/5/bits/alloc_traits.h:602 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 25 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/alloc_traits.h:602 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 25 15 17 2 (const_int 0 [0]) /usr/include/c++/5/bits/alloc_traits.h:603 684 {nop}
     (nil))
(insn 17 25 18 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48956+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/alloc_traits.h:603 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 18 17 23 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) /usr/include/c++/5/bits/alloc_traits.h:603 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 23 18 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 19 23 20 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/alloc_traits.h:603 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 20 19 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 20 24 4 302 "" [1 uses])
(note 24 21 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = long long int; _Args = {const long long int&}; _Tp = long long int] (_ZN9__gnu_cxx13new_allocatorIxE9constructIxJRKxEEEvPT_DpOT0_, funcdef_no=2236, decl_uid=45140, cgraph_uid=855, symbol_order=857)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:34 INT_SSE_REGS:26 ALL_REGS:516 MEM:9
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 36(l0): point = 1
   Insn 21(l0): point = 4
   Insn 19(l0): point = 7
   Insn 18(l0): point = 9
   Insn 17(l0): point = 11
   Insn 16(l0): point = 13
   Insn 15(l0): point = 15
   Insn 14(l0): point = 17
   Insn 13(l0): point = 19
   Insn 12(l0): point = 21
   Insn 11(l0): point = 23
   Insn 10(l0): point = 25
   Insn 9(l0): point = 27
   Insn 8(l0): point = 29
   Insn 4(l0): point = 31
   Insn 3(l0): point = 33
   Insn 2(l0): point = 35
 a0(r90): [5..11]
 a1(r88): [5..21]
 a2(r89): [18..19]
 a3(r87): [22..23]
 a4(r93): [28..29]
Compressing live ranges: from 38 to 8 - 21%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r88): [0..3]
 a2(r89): [2..3]
 a3(r87): [4..5]
 a4(r93): [6..7]
  regions=1, blocks=6, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    3:r87  l0     0    1:r88  l0     3    2:r89  l0     0    0:r90  l0     0
    4:r93  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = long long int; _Args = {const long long int&}; _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={3d,1u} r18={2d} r19={2d} r20={1d,10u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,2u} r93={1d,1u} 
;;    total ref usage 213{172d,41u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 93
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/ext/new_allocator.h:119 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/include/c++/5/ext/new_allocator.h:119 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __args#0+0 S8 A64])
        (reg:DI 1 dx [ __args#0 ])) /usr/include/c++/5/ext/new_allocator.h:119 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __args#0 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __args#0+0 S8 A64])) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 93)) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE") [flags 0x3]  <function_decl 0x7fdf7bc8d360 forward>) [0 forward S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:120 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 87 [ D.48957 ])
        (reg:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 88 [ D.48958 ])
        (mem:DI (reg/f:DI 87 [ D.48957 ]) [0 *_5+0 S8 A64])) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48957 ])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 89 [ D.48959 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.48959 ])) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48959 ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (const_int 8 [0x8])) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZnwmPv") [flags 0x3]  <function_decl 0x7fdf7d53fe58 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:120 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 90 [ D.48959 ])
        (reg:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.48959 ])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:120 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) /usr/include/c++/5/ext/new_allocator.h:120 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 90

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 90
;; lr  def 	
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 35 3 (set (mem:DI (reg/f:DI 90 [ D.48959 ]) [0 MEM[(long long int *)_10]+0 S8 A64])
        (reg:DI 88 [ D.48958 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48959 ])
        (expr_list:REG_DEAD (reg:DI 88 [ D.48958 ])
            (nil))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 4, flags: (NEW, RTL, MODIFIED)
;;  pred:       2
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 35 21 34 5 306 "" [1 uses])
(note 34 35 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 34 30 5 (const_int 0 [0]) /usr/include/c++/5/ext/new_allocator.h:120 684 {nop}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 30 36 31 4 303 "" [0 uses])
(note 31 30 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int] (_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc, funcdef_no=2237, decl_uid=42954, cgraph_uid=856, symbol_order=858)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 12 count 11 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 83.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r110: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r110,l0) best DIREG, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r105,l0) best SIREG, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r102,l0) best DIREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:33 INT_SSE_REGS:29 ALL_REGS:412 MEM:8
  a2(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a4(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a6(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a10(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a11(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a14(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a17(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a18(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a19(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a20(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a21(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a22(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 86(l0): point = 0
   Insn 83(l0): point = 3
   Insn 82(l0): point = 6
   Insn 81(l0): point = 8
   Insn 80(l0): point = 10
   Insn 76(l0): point = 12
   Insn 71(l0): point = 15
   Insn 90(l0): point = 18
   Insn 66(l0): point = 20
   Insn 65(l0): point = 22
   Insn 64(l0): point = 24
   Insn 63(l0): point = 26
   Insn 60(l0): point = 29
   Insn 59(l0): point = 31
   Insn 58(l0): point = 33
   Insn 57(l0): point = 35
   Insn 56(l0): point = 37
   Insn 55(l0): point = 39
   Insn 53(l0): point = 42
   Insn 52(l0): point = 44
   Insn 51(l0): point = 46
   Insn 50(l0): point = 48
   Insn 49(l0): point = 50
   Insn 48(l0): point = 52
   Insn 47(l0): point = 54
   Insn 46(l0): point = 56
   Insn 45(l0): point = 58
   Insn 44(l0): point = 60
   Insn 43(l0): point = 62
   Insn 42(l0): point = 64
   Insn 41(l0): point = 66
   Insn 40(l0): point = 68
   Insn 39(l0): point = 70
   Insn 38(l0): point = 72
   Insn 37(l0): point = 74
   Insn 36(l0): point = 76
   Insn 35(l0): point = 78
   Insn 34(l0): point = 80
   Insn 33(l0): point = 82
   Insn 32(l0): point = 84
   Insn 31(l0): point = 86
   Insn 30(l0): point = 88
   Insn 26(l0): point = 91
   Insn 25(l0): point = 93
   Insn 24(l0): point = 95
   Insn 22(l0): point = 98
   Insn 21(l0): point = 100
   Insn 20(l0): point = 102
   Insn 19(l0): point = 104
   Insn 18(l0): point = 106
   Insn 17(l0): point = 108
   Insn 16(l0): point = 110
   Insn 15(l0): point = 112
   Insn 14(l0): point = 114
   Insn 13(l0): point = 116
   Insn 12(l0): point = 118
   Insn 11(l0): point = 120
   Insn 10(l0): point = 122
   Insn 9(l0): point = 124
   Insn 6(l0): point = 126
   Insn 4(l0): point = 128
   Insn 3(l0): point = 130
   Insn 2(l0): point = 132
 a0(r99): [11..12]
 a1(r87): [18..20] [13..15]
 a2(r110): [25..26]
 a3(r98): [32..33]
 a4(r109): [38..39]
 a5(r97): [45..46]
 a6(r108): [51..52]
 a7(r107): [55..56]
 a8(r96): [57..58]
 a9(r93): [57..82]
 a10(r95): [59..60]
 a11(r106): [65..68]
 a12(r105): [67..70]
 a13(r94): [73..74]
 a14(r104): [79..80]
 a15(r103): [87..88]
 a16(r102): [94..95]
 a17(r92): [101..102]
 a18(r91): [105..106]
 a19(r90): [105..108]
 a20(r89): [109..110]
 a21(r88): [109..118]
 a22(r101): [115..116]
 a23(r100): [123..124]
Compressing live ranges: from 135 to 42 - 31%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r87): [2..5]
 a2(r110): [6..7]
 a3(r98): [8..9]
 a4(r109): [10..11]
 a5(r97): [12..13]
 a6(r108): [14..15]
 a7(r107): [16..17]
 a8(r96): [18..19]
 a9(r93): [18..27]
 a10(r95): [20..21]
 a11(r106): [22..23]
 a12(r105): [22..23]
 a13(r94): [24..25]
 a14(r104): [26..27]
 a15(r103): [28..29]
 a16(r102): [30..31]
 a17(r92): [32..33]
 a18(r91): [34..35]
 a19(r90): [34..35]
 a20(r89): [36..37]
 a21(r88): [36..39]
 a22(r101): [38..39]
 a23(r100): [40..41]
  regions=1, blocks=11, points=42
    allocnos=24 (big 0), copies=0, conflicts=0, ranges=24
Disposition:
    1:r87  l0     0   21:r88  l0     3   20:r89  l0     0   19:r90  l0     1
   18:r91  l0     0   17:r92  l0     0    9:r93  l0     3   13:r94  l0     0
   10:r95  l0     0    8:r96  l0     0    5:r97  l0     0    3:r98  l0     0
    0:r99  l0     0   23:r100 l0     0   22:r101 l0     0   16:r102 l0     0
   15:r103 l0     0   14:r104 l0     0   12:r105 l0     1   11:r106 l0     0
    7:r107 l0     0    6:r108 l0     0    4:r109 l0     0    2:r110 l0     0
+++Costs: overall -19, reg -19, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={12d,10u} r1={11d,1u} r2={11d} r4={12d,2u} r5={20d,10u} r6={1d,10u} r7={1d,20u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,9u} r17={20d,5u} r18={10d} r19={10d} r20={1d,31u} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} 
;;    total ref usage 907{785d,122u,0e} in 63{53 regular + 10 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 100 101
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:1422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/include/c++/5/bits/stl_vector.h:1422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 __s+0 S8 A64])
        (reg:DI 1 dx [ __s ])) /usr/include/c++/5/bits/stl_vector.h:1422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __s ])
        (nil)))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48965+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1422 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 6 10 2 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1424 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 100)) /usr/include/c++/5/bits/stl_vector.h:1424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE8max_sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195510 max_size>) [0 max_size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1424 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 88 [ D.48962 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1424 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 101)) /usr/include/c++/5/bits/stl_vector.h:1424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE4sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195438 size>) [0 size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1424 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg:DI 89 [ D.48962 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1424 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 90 [ D.48962 ])
                (minus:DI (reg:DI 88 [ D.48962 ])
                    (reg:DI 89 [ D.48962 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1424 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.48962 ])
        (expr_list:REG_DEAD (reg:DI 88 [ D.48962 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 18 17 19 2 (set (reg:DI 91 [ D.48962 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __n+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1424 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 90 [ D.48962 ])
            (reg:DI 91 [ D.48962 ]))) /usr/include/c++/5/bits/stl_vector.h:1424 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.48962 ])
        (expr_list:REG_DEAD (reg:DI 90 [ D.48962 ])
            (nil))))
(insn 20 19 21 2 (set (reg:QI 92 [ D.48963 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1424 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.48963 ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1424 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 92 [ D.48963 ])
        (nil)))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:1424 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102
(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 __s+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1425 89 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg:DI 102)) /usr/include/c++/5/bits/stl_vector.h:1425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(call_insn 26 25 27 3 (call (mem:QI (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7fdf7dc85360 __throw_length_error>) [0 __throw_length_error S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:1425 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 27 26 28)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 95 96 97 103 104 105 106 107 108
(code_label 28 27 29 4 308 "" [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 5 di)
        (reg:DI 103)) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(call_insn 32 31 33 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE4sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195438 size>) [0 size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1427 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 4 (set (reg:DI 93 [ D.48962 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 34 33 35 4 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg:DI 104)) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 36 35 37 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE4sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195438 size>) [0 size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1427 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 4 (set (reg:DI 94 [ D.48962 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 38 37 39 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 D.45864+0 S8 A64])
        (reg:DI 94 [ D.48962 ])) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ D.48962 ])
        (nil)))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1427 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 40 39 41 4 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1427 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 41 40 42 4 (set (reg:DI 4 si)
        (reg:DI 105)) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 42 41 43 4 (set (reg:DI 5 di)
        (reg:DI 106)) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(call_insn 43 42 44 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3maxImERKT_S2_S2_") [flags 0x3]  <function_decl 0x7fdf7b9a51b0 max>) [0 max S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1427 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 44 43 45 4 (set (reg/f:DI 95 [ D.48964 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 45 44 46 4 (set (reg:DI 96 [ D.48962 ])
        (mem:DI (reg/f:DI 95 [ D.48964 ]) [0 *_19+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.48964 ])
        (nil)))
(insn 46 45 47 4 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg:DI 93 [ D.48962 ])
                    (reg:DI 96 [ D.48962 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:1427 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 96 [ D.48962 ])
        (expr_list:REG_DEAD (reg:DI 93 [ D.48962 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 47 46 48 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])
        (reg:DI 107)) /usr/include/c++/5/bits/stl_vector.h:1427 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(insn 48 47 49 4 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1428 89 {*movdi_internal}
     (nil))
(insn 49 48 50 4 (set (reg:DI 5 di)
        (reg:DI 108)) /usr/include/c++/5/bits/stl_vector.h:1428 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(call_insn 50 49 51 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE4sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195438 size>) [0 size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1428 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 51 50 52 4 (set (reg:DI 97 [ D.48962 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1428 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 52 51 53 4 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 97 [ D.48962 ])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64]))) /usr/include/c++/5/bits/stl_vector.h:1428 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 97 [ D.48962 ])
        (nil)))
(jump_insn 53 52 54 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:1428 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 61)
;;  succ:       6
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 109
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 5 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1428 89 {*movdi_internal}
     (nil))
(insn 56 55 57 5 (set (reg:DI 5 di)
        (reg:DI 109)) /usr/include/c++/5/bits/stl_vector.h:1428 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(call_insn 57 56 58 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE8max_sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195510 max_size>) [0 max_size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1428 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 58 57 59 5 (set (reg:DI 98 [ D.48962 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1428 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 59 58 60 5 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ D.48962 ])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64]))) /usr/include/c++/5/bits/stl_vector.h:1428 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 98 [ D.48962 ])
        (nil)))
(jump_insn 60 59 61 5 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:1428 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 69)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 110
(code_label 61 60 62 6 309 "" [1 uses])
(note 62 61 63 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 6 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1428 89 {*movdi_internal}
     (nil))
(insn 64 63 65 6 (set (reg:DI 5 di)
        (reg:DI 110)) /usr/include/c++/5/bits/stl_vector.h:1428 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(call_insn 65 64 66 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIxSaIxEE8max_sizeEv") [flags 0x3]  <function_decl 0x7fdf7c195510 max_size>) [0 max_size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:1428 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 66 65 90 6 (set (reg:DI 87 [ D.48961 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1428 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 90 66 91 6 (set (pc)
        (label_ref 74)) /usr/include/c++/5/bits/stl_vector.h:1428 654 {jump}
     (nil)
 -> 74)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 91 90 69)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 69 91 70 7 310 "" [1 uses])
(note 70 69 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 74 7 (set (reg:DI 87 [ D.48961 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __len+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:1428 89 {*movdi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags] 99
(code_label 74 71 75 8 312 "" [1 uses])
(note 75 74 76 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 80 8 (set (reg:DI 99 [ <retval> ])
        (reg:DI 87 [ D.48961 ])) /usr/include/c++/5/bits/stl_vector.h:1428 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.48961 ])
        (nil)))
(insn 80 76 81 8 (set (reg/i:DI 0 ax)
        (reg:DI 99 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:1429 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ <retval> ])
        (nil)))
(insn 81 80 82 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48965+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_vector.h:1429 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 82 81 88 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:1429 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 85)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 88 82 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 83 88 84 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:1429 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 84 83 85)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 85 84 89 10 313 "" [1 uses])
(note 89 85 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 86 89 0 10 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:1429 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::pointer = long long int*; std::size_t = long unsigned int] (_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm, funcdef_no=2238, decl_uid=42400, cgraph_uid=857, symbol_order=859)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 30(l0): point = 0
   Insn 29(l0): point = 2
   Insn 25(l0): point = 4
   Insn 20(l0): point = 7
   Insn 32(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 8(l0): point = 25
   Insn 7(l0): point = 27
   Insn 3(l0): point = 29
   Insn 2(l0): point = 31
 a0(r89): [3..4]
 a1(r87): [10..12] [5..7]
 a2(r88): [17..22]
 a3(r90): [19..20]
Compressing live ranges: from 34 to 8 - 23%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r87): [2..5]
 a2(r88): [6..7]
 a3(r90): [6..7]
  regions=1, blocks=6, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r87  l0     0    2:r88  l0     0    0:r89  l0     0    3:r90  l0     1
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::pointer = long long int*; std::size_t = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={2d,1u} r18={1d} r19={1d} r20={1d,10u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 137{100d,37u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/include/c++/5/bits/stl_vector.h:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:170 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:170 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 90
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 88 [ D.48967 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:DI 90)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 4 si)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48967 ])) /usr/include/c++/5/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48967 ])
        (nil)))
(call_insn 14 13 15 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIxEE8allocateERS0_m") [flags 0x3]  <function_decl 0x7fdf7c139948 allocate>) [0 allocate S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:170 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 32 3 (set (reg/f:DI 87 [ D.48966 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 32 15 33 3 (set (pc)
        (label_ref 23)) /usr/include/c++/5/bits/stl_vector.h:170 654 {jump}
     (nil)
 -> 23)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 33 32 18)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 18 33 19 4 315 "" [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 23 4 (set (reg/f:DI 87 [ D.48966 ])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 89
(code_label 23 20 24 5 317 "" [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 29 5 (set (reg:DI 89 [ <retval> ])
        (reg/f:DI 87 [ D.48966 ])) /usr/include/c++/5/bits/stl_vector.h:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48966 ])
        (nil)))
(insn 29 25 30 5 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:171 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 30 29 0 5 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:171 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = long long int*; _ForwardIterator = long long int*; _Allocator = std::allocator<long long int>] (_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_, funcdef_no=2239, decl_uid=45148, cgraph_uid=858, symbol_order=860)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best DREG, allocno GENERAL_REGS
    r93: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best CREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 32(l0): point = 0
   Insn 31(l0): point = 2
   Insn 27(l0): point = 4
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 21(l0): point = 12
   Insn 20(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 14(l0): point = 26
   Insn 13(l0): point = 28
   Insn 12(l0): point = 30
   Insn 11(l0): point = 32
   Insn 10(l0): point = 34
   Insn 9(l0): point = 36
   Insn 5(l0): point = 38
   Insn 4(l0): point = 40
   Insn 3(l0): point = 42
   Insn 2(l0): point = 44
 a0(r90): [3..4]
 a1(r87): [5..6]
 a2(r88): [11..22]
 a3(r89): [13..30]
 a4(r94): [15..18]
 a5(r93): [17..20]
 a6(r92): [27..28]
 a7(r91): [35..36]
Compressing live ranges: from 47 to 10 - 21%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r87): [2..3]
 a2(r88): [4..5]
 a3(r89): [4..7]
 a4(r94): [4..5]
 a5(r93): [4..5]
 a6(r92): [6..7]
 a7(r91): [8..9]
  regions=1, blocks=3, points=10
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    1:r87  l0     0    2:r88  l0     5    3:r89  l0     3    0:r90  l0     0
    7:r91  l0     0    6:r92  l0     0    5:r93  l0     1    4:r94  l0     0
+++Costs: overall -8, reg -8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = long long int*; _ForwardIterator = long long int*; _Allocator = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={5d,5u} r1={5d,2u} r2={5d,2u} r4={5d,2u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,10u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 291{250d,41u,0e} in 23{20 regular + 3 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_uninitialized.h:297 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_uninitialized.h:297 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_uninitialized.h:297 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __alloc+0 S8 A64])
        (reg:DI 2 cx [ __alloc ])) /usr/include/c++/5/bits/stl_uninitialized.h:297 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ __alloc ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])) /usr/include/c++/5/bits/stl_uninitialized.h:303 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_uninitialized.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_") [flags 0x3]  <function_decl 0x7fdf7b9f0870 __make_move_if_noexcept_iterator>) [0 __make_move_if_noexcept_iterator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_uninitialized.h:303 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 89 [ D.47608 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_uninitialized.h:303 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_uninitialized.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_") [flags 0x3]  <function_decl 0x7fdf7b9f0870 __make_move_if_noexcept_iterator>) [0 __make_move_if_noexcept_iterator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_uninitialized.h:303 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg:DI 88 [ D.47609 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __alloc+0 S8 A64])) /usr/include/c++/5/bits/stl_uninitialized.h:304 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_uninitialized.h:304 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 2 cx)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_uninitialized.h:304 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg:DI 94)) /usr/include/c++/5/bits/stl_uninitialized.h:304 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg:DI 89 [ D.47608 ])) /usr/include/c++/5/bits/stl_uninitialized.h:304 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.47608 ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 88 [ D.47609 ])) /usr/include/c++/5/bits/stl_uninitialized.h:304 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.47609 ])
        (nil)))
(call_insn 23 22 24 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E") [flags 0x3]  <function_decl 0x7fdf7ba0baf8 __uninitialized_copy_a>) [0 __uninitialized_copy_a S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_uninitialized.h:304 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 24 23 27 2 (set (reg/f:DI 87 [ D.48968 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:304 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 27 24 31 2 (set (reg:DI 90 [ <retval> ])
        (reg/f:DI 87 [ D.48968 ])) /usr/include/c++/5/bits/stl_uninitialized.h:304 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48968 ])
        (nil)))
(insn 31 27 32 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_uninitialized.h:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 32 31 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:305 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::allocator_traits<std::allocator<_CharT> >::destroy(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*) [with _Up = long long int; _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>] (_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_, funcdef_no=2240, decl_uid=45153, cgraph_uid=859, symbol_order=861)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [5..8]
 a1(r87): [7..10]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     1    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::allocator_traits<std::allocator<_CharT> >::destroy(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*) [with _Up = long long int; _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 113{95d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/include/c++/5/bits/alloc_traits.h:541 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/include/c++/5/bits/alloc_traits.h:541 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:542 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:542 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 87)) /usr/include/c++/5/bits/alloc_traits.h:542 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/include/c++/5/bits/alloc_traits.h:542 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 11 10 14 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_") [flags 0x3]  <function_decl 0x7fdf7ba13ca8 destroy>) [0 destroy S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/alloc_traits.h:542 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 11 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/alloc_traits.h:542 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static std::allocator_traits<std::allocator<_CharT> >::allocator_type std::allocator_traits<std::allocator<_CharT> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>] (_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_, funcdef_no=2250, decl_uid=42078, cgraph_uid=869, symbol_order=871)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r88): [7..10]
 a1(r87): [9..12]
Compressing live ranges: from 19 to 2 - 10%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     1    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static std::allocator_traits<std::allocator<_CharT> >::allocator_type std::allocator_traits<std::allocator<_CharT> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 117{96d,21u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) /usr/include/c++/5/bits/alloc_traits.h:559 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __rhs+0 S8 A64])
        (reg:DI 4 si [ __rhs ])) /usr/include/c++/5/bits/alloc_traits.h:559 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __rhs ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __rhs+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:560 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:560 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 87)) /usr/include/c++/5/bits/alloc_traits.h:560 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/include/c++/5/bits/alloc_traits.h:560 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 11 10 17 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIxEC1ERKS_") [flags 0x3]  <function_decl 0x7fdf7c16f438 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/alloc_traits.h:560 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 11 18 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 .result_ptr+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:560 89 {*movdi_internal}
     (nil))
(insn 18 17 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/alloc_traits.h:560 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = long long int] (_ZNSaIxEC2ERKS_, funcdef_no=2252, decl_uid=42353, cgraph_uid=871, symbol_order=873)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [5..8]
 a1(r87): [7..10]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     1    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 113{95d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/allocator.h:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])
        (reg:DI 4 si [ __a ])) /usr/include/c++/5/bits/allocator.h:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __a ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/allocator.h:116 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/allocator.h:116 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 87)) /usr/include/c++/5/bits/allocator.h:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/include/c++/5/bits/allocator.h:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 11 10 14 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_") [flags 0x3]  <function_decl 0x7fdf7c162870 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/allocator.h:116 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 11 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/allocator.h:116 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = long long int] (_ZN9__gnu_cxx13new_allocatorIxED2Ev, funcdef_no=2255, decl_uid=42299, cgraph_uid=874, symbol_order=876)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 8(l0): point = 0
   Insn 2(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 28{19d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/ext/new_allocator.h:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 3 0 2 (const_int 0 [0]) /usr/include/c++/5/ext/new_allocator.h:86 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<long long int>] (_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_, funcdef_no=2258, decl_uid=42390, cgraph_uid=877, symbol_order=879)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 20(l0): point = 0
   Insn 17(l0): point = 2
   Insn 16(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 8(l0): point = 20
   Insn 7(l0): point = 22
   Insn 3(l0): point = 24
   Insn 2(l0): point = 26
 a0(r91): [3..4]
 a1(r90): [7..8]
 a2(r89): [11..12]
 a3(r88): [17..20]
 a4(r87): [19..22]
Compressing live ranges: from 29 to 8 - 27%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r89): [4..5]
 a3(r88): [6..7]
 a4(r87): [6..7]
  regions=1, blocks=3, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r87  l0     1    3:r88  l0     0    2:r89  l0     0    1:r90  l0     0
    0:r91  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 122{98d,24u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])
        (reg:DI 4 si [ __a ])) /usr/include/c++/5/bits/stl_vector.h:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __a ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 87)) /usr/include/c++/5/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/include/c++/5/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSaIxEC2ERKS_") [flags 0x3]  <function_decl 0x7fdf7c16f510 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:91 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/f/j:DI (reg/f:DI 89) [0 this_2(D)->_M_start+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [0 this_2(D)->_M_finish+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:91 89 {*movdi_internal}
     (nil))
(insn 17 16 20 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 91)
                (const_int 16 [0x10])) [0 this_2(D)->_M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 20 17 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:92 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::size_t = long unsigned int] (_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm, funcdef_no=2260, decl_uid=42407, cgraph_uid=879, symbol_order=881)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best SIREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a8(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a9(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a10(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a11(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 28(l0): point = 0
   Insn 25(l0): point = 2
   Insn 24(l0): point = 4
   Insn 23(l0): point = 6
   Insn 22(l0): point = 8
   Insn 21(l0): point = 10
   Insn 20(l0): point = 12
   Insn 19(l0): point = 14
   Insn 18(l0): point = 16
   Insn 17(l0): point = 18
   Insn 16(l0): point = 20
   Insn 15(l0): point = 22
   Insn 14(l0): point = 24
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 7(l0): point = 38
   Insn 3(l0): point = 40
   Insn 2(l0): point = 42
 a0(r99): [3..4]
 a1(r91): [3..6]
 a2(r90): [7..8]
 a3(r89): [7..12]
 a4(r98): [9..10]
 a5(r97): [13..14]
 a6(r96): [17..18]
 a7(r88): [17..20]
 a8(r95): [21..22]
 a9(r94): [25..26]
 a10(r87): [25..28]
 a11(r93): [33..36]
 a12(r92): [35..38]
Compressing live ranges: from 45 to 16 - 35%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r91): [0..1]
 a2(r90): [2..3]
 a3(r89): [2..5]
 a4(r98): [4..5]
 a5(r97): [6..7]
 a6(r96): [8..9]
 a7(r88): [8..9]
 a8(r95): [10..11]
 a9(r94): [12..13]
 a10(r87): [12..13]
 a11(r93): [14..15]
 a12(r92): [14..15]
  regions=1, blocks=3, points=16
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
   10:r87  l0     1    7:r88  l0     1    3:r89  l0     0    2:r90  l0     1
    1:r91  l0     1   12:r92  l0     1   11:r93  l0     0    9:r94  l0     0
    8:r95  l0     0    6:r96  l0     0    5:r97  l0     0    4:r98  l0     1
    0:r99  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Vector_base<_Tp, _Alloc>::_M_create_storage(std::size_t) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::size_t = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={3d} r18={1d} r19={1d} r20={1d,12u,1e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 145{108d,36u,1e} in 22{21 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/include/c++/5/bits/stl_vector.h:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 92)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:185 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:185 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm") [flags 0x3]  <function_decl 0x7fdf7c176288 _M_allocate>) [0 _M_allocate S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:185 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 87 [ D.48970 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:185 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/f/j:DI (reg/f:DI 94) [0 this_2(D)->_M_impl._M_start+0 S8 A64])
        (reg/f:DI 87 [ D.48970 ])) /usr/include/c++/5/bits/stl_vector.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.48970 ])
            (nil))))
(insn 15 14 16 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:186 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 88 [ D.48970 ])
        (mem/f/j:DI (reg/f:DI 95) [0 this_2(D)->_M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:186 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 96)
                (const_int 8 [0x8])) [0 this_2(D)->_M_impl._M_finish+0 S8 A64])
        (reg/f:DI 88 [ D.48970 ])) /usr/include/c++/5/bits/stl_vector.h:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_DEAD (reg/f:DI 88 [ D.48970 ])
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:187 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 89 [ D.48970 ])
        (mem/f/j:DI (reg/f:DI 97) [0 this_2(D)->_M_impl._M_start+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:187 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 98)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:187 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 90 [ D.48971 ])
                (ashift:DI (reg:DI 98)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:187 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 23 22 24 2 (parallel [
            (set (reg/f:DI 91 [ D.48970 ])
                (plus:DI (reg/f:DI 89 [ D.48970 ])
                    (reg:DI 90 [ D.48971 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:187 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.48971 ])
        (expr_list:REG_DEAD (reg/f:DI 89 [ D.48970 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 24 23 25 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:187 89 {*movdi_internal}
     (nil))
(insn 25 24 28 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 99)
                (const_int 16 [0x10])) [0 this_2(D)->_M_impl._M_end_of_storage+0 S8 A64])
        (reg/f:DI 91 [ D.48970 ])) /usr/include/c++/5/bits/stl_vector.h:187 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_DEAD (reg/f:DI 91 [ D.48970 ])
            (nil))))
(insn 28 25 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:188 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const long long int*; _Container = std::vector<long long int>] (_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_, funcdef_no=2262, decl_uid=43626, cgraph_uid=881, symbol_order=883)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 3(l0): point = 10
   Insn 2(l0): point = 12
 a0(r89): [3..4]
 a1(r87): [3..6]
 a2(r88): [7..8]
Compressing live ranges: from 15 to 4 - 26%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r87): [0..1]
 a2(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     1    2:r88  l0     0    0:r89  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const long long int*; _Container = std::vector<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 38{22d,16u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_iterator.h:740 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __i+0 S8 A64])
        (reg:DI 4 si [ __i ])) /usr/include/c++/5/bits/stl_iterator.h:740 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __i ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __i+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:741 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ D.48972 ])
        (mem/f:DI (reg/f:DI 88) [0 *__i_2(D)+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:741 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:741 89 {*movdi_internal}
     (nil))
(insn 10 9 13 2 (set (mem/f/j:DI (reg/f:DI 89) [0 this_4(D)->_M_current+0 S8 A64])
        (reg/f:DI 87 [ D.48972 ])) /usr/include/c++/5/bits/stl_iterator.h:741 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.48972 ])
            (nil))))
(insn 13 10 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_iterator.h:741 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; _ForwardIterator = long long int*] (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_, funcdef_no=2264, decl_uid=45274, cgraph_uid=883, symbol_order=885)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; _ForwardIterator = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 129{100d,29u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __first+0 S8 A128])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_uninitialized.h:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __last+0 S8 A128])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_uninitialized.h:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_uninitialized.h:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 __assignable+0 S1 A8])
        (const_int 1 [0x1])) /usr/include/c++/5/bits/stl_uninitialized.h:120 93 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __last+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __first+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_") [flags 0x3]  <function_decl 0x7fdf7ba5ba20 __uninit_copy>) [0 __uninit_copy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_uninitialized.h:126 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ D.48973 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48973 ])) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48973 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_uninitialized.h:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:127 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const long long int*; _Container = std::vector<long long int>] (_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv, funcdef_no=2265, decl_uid=43613, cgraph_uid=884, symbol_order=886)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const long long int*; _Container = std::vector<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_iterator.h:805 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ D.48974 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:806 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48974 ])) /usr/include/c++/5/bits/stl_iterator.h:806 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48974 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator.h:806 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:806 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = long long int*] (_ZNSt6vectorIxSaIxEE3endEv, funcdef_no=2266, decl_uid=42601, cgraph_uid=885, symbol_order=887)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 26(l0): point = 0
   Insn 23(l0): point = 3
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 16(l0): point = 12
   Insn 13(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 8(l0): point = 24
   Insn 7(l0): point = 26
   Insn 4(l0): point = 28
   Insn 2(l0): point = 30
 a0(r89): [11..12]
 a1(r88): [13..14]
 a2(r91): [19..22]
 a3(r87): [21..24]
 a4(r90): [25..26]
Compressing live ranges: from 33 to 8 - 24%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r91): [4..5]
 a3(r87): [4..5]
 a4(r90): [6..7]
  regions=1, blocks=5, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    3:r87  l0     1    1:r88  l0     0    0:r89  l0     0    4:r90  l0     0
    2:r91  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,1u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,10u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 210{175d,34u,1e} in 15{13 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:565 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48976+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:565 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:566 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 87 [ D.48975 ])
                (plus:DI (reg/f:DI 90)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:566 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_vector.h:566 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.48975 ])) /usr/include/c++/5/bits/stl_vector.h:566 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48975 ])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_vector.h:566 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC1ERKS1_") [flags 0x3]  <function_decl 0x7fdf7be51360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:566 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 16 2 (set (reg:DI 88 [ D.48148 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.46522+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:566 89 {*movdi_internal}
     (nil))
(insn 16 13 20 2 (set (reg:DI 89 [ <retval> ])
        (reg:DI 88 [ D.48148 ])) /usr/include/c++/5/bits/stl_vector.h:566 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.48148 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:566 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48976+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_vector.h:566 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 22 21 28 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:566 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 28 22 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 23 28 24 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:566 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 24 23 25)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 24 29 4 334 "" [1 uses])
(note 29 25 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 29 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:566 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = long long int*; _Container = std::vector<long long int>] (_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_, funcdef_no=2267, decl_uid=45297, cgraph_uid=886, symbol_order=888)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a7(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 21(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 3(l0): point = 30
   Insn 2(l0): point = 32
 a0(r92): [3..4]
 a1(r91): [5..6]
 a2(r90): [9..10]
 a3(r88): [9..20]
 a4(r89): [11..12]
 a5(r94): [17..18]
 a6(r87): [21..22]
 a7(r93): [27..28]
Compressing live ranges: from 35 to 14 - 40%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r90): [4..5]
 a3(r88): [4..9]
 a4(r89): [6..7]
 a5(r94): [8..9]
 a6(r87): [10..11]
 a7(r93): [12..13]
  regions=1, blocks=3, points=14
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    6:r87  l0     0    3:r88  l0     3    4:r89  l0     0    2:r90  l0     0
    1:r91  l0     0    0:r92  l0     0    7:r93  l0     0    5:r94  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = long long int*; _Container = std::vector<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={3d,1u} r18={2d} r19={2d} r20={1d,6u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 205{175d,30u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __lhs+0 S8 A64])
        (reg:DI 5 di [ __lhs ])) /usr/include/c++/5/bits/stl_iterator.h:841 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __lhs ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __rhs+0 S8 A64])
        (reg:DI 4 si [ __rhs ])) /usr/include/c++/5/bits/stl_iterator.h:841 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __rhs ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __lhs+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv") [flags 0x3]  <function_decl 0x7fdf7be510d8 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:844 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 87 [ D.48977 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ D.48978 ])
        (mem/f:DI (reg/f:DI 87 [ D.48977 ]) [0 *_4+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48977 ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __rhs+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 94)) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv") [flags 0x3]  <function_decl 0x7fdf7be510d8 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:844 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 89 [ D.48977 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 90 [ D.48978 ])
        (mem/f:DI (reg/f:DI 89 [ D.48977 ]) [0 *_8+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:844 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48977 ])
        (nil)))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.48978 ])
            (reg/f:DI 90 [ D.48978 ]))) /usr/include/c++/5/bits/stl_iterator.h:844 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48978 ])
        (expr_list:REG_DEAD (reg/f:DI 88 [ D.48978 ])
            (nil))))
(insn 18 17 21 2 (set (reg:QI 91 [ D.48979 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator.h:844 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 21 18 25 2 (set (reg:QI 92 [ <retval> ])
        (reg:QI 91 [ D.48979 ])) /usr/include/c++/5/bits/stl_iterator.h:844 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 91 [ D.48979 ])
        (nil)))
(insn 25 21 26 2 (set (reg/i:QI 0 ax)
        (reg:QI 92 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator.h:844 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 92 [ <retval> ])
        (nil)))
(insn 26 25 0 2 (use (reg/i:QI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:844 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::move(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; _OI = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >] (_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET0_T_S8_S7_, funcdef_no=2268, decl_uid=45306, cgraph_uid=887, symbol_order=889)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 29(l0): point = 0
   Insn 28(l0): point = 2
   Insn 24(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 4(l0): point = 34
   Insn 3(l0): point = 36
   Insn 2(l0): point = 38
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r87): [11..18]
 a3(r88): [13..26]
 a4(r93): [15..16]
 a5(r92): [23..24]
 a6(r91): [31..32]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r87): [4..5]
 a3(r88): [4..7]
 a4(r93): [4..5]
 a5(r92): [6..7]
 a6(r91): [8..9]
  regions=1, blocks=3, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    2:r87  l0     2    3:r88  l0     3    1:r89  l0     0    0:r90  l0     0
    6:r91  l0     0    5:r92  l0     0    4:r93  l0     0
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::move(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; _OI = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={5d,5u} r1={5d,2u} r2={4d} r4={5d,2u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,8u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 284{248d,36u,0e} in 20{17 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_algobase.h:495 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_algobase.h:495 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __result+0 S8 A128])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_algobase.h:495 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:503 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_algobase.h:503 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES8_") [flags 0x3]  <function_decl 0x7fdf7ba67bd0 __miter_base>) [0 __miter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:503 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 88 [ D.48153 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:503 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 92)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:503 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_algobase.h:503 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES8_") [flags 0x3]  <function_decl 0x7fdf7ba67bd0 __miter_base>) [0 __miter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:503 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 87 [ D.48154 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:503 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 93)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __result+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:504 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_algobase.h:504 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg:DI 88 [ D.48153 ])) /usr/include/c++/5/bits/stl_algobase.h:504 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.48153 ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 87 [ D.48154 ])) /usr/include/c++/5/bits/stl_algobase.h:504 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.48154 ])
        (nil)))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET1_T0_S8_S7_") [flags 0x3]  <function_decl 0x7fdf7ba700d8 __copy_move_a2>) [0 __copy_move_a2 S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:504 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 21 20 24 2 (set (reg:DI 89 [ D.48152 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:504 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 21 28 2 (set (reg:DI 90 [ <retval> ])
        (reg:DI 89 [ D.48152 ])) /usr/include/c++/5/bits/stl_algobase.h:504 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.48152 ])
        (nil)))
(insn 28 24 29 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 29 28 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:505 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = long long int; _Args = {long long int}; _Tp = long long int] (_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_, funcdef_no=2269, decl_uid=45314, cgraph_uid=888, symbol_order=890)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:34 INT_SSE_REGS:26 ALL_REGS:516 MEM:9
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 36(l0): point = 1
   Insn 21(l0): point = 4
   Insn 19(l0): point = 7
   Insn 18(l0): point = 9
   Insn 17(l0): point = 11
   Insn 16(l0): point = 13
   Insn 15(l0): point = 15
   Insn 14(l0): point = 17
   Insn 13(l0): point = 19
   Insn 12(l0): point = 21
   Insn 11(l0): point = 23
   Insn 10(l0): point = 25
   Insn 9(l0): point = 27
   Insn 8(l0): point = 29
   Insn 4(l0): point = 31
   Insn 3(l0): point = 33
   Insn 2(l0): point = 35
 a0(r90): [5..11]
 a1(r88): [5..21]
 a2(r89): [18..19]
 a3(r87): [22..23]
 a4(r93): [28..29]
Compressing live ranges: from 38 to 8 - 21%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r88): [0..3]
 a2(r89): [2..3]
 a3(r87): [4..5]
 a4(r93): [6..7]
  regions=1, blocks=6, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    3:r87  l0     0    1:r88  l0     3    2:r89  l0     0    0:r90  l0     0
    4:r93  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = long long int; _Args = {long long int}; _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={3d,1u} r18={2d} r19={2d} r20={1d,10u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,2u} r93={1d,1u} 
;;    total ref usage 213{172d,41u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 93
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/ext/new_allocator.h:119 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/include/c++/5/ext/new_allocator.h:119 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __args#0+0 S8 A64])
        (reg:DI 1 dx [ __args#0 ])) /usr/include/c++/5/ext/new_allocator.h:119 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __args#0 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __args#0+0 S8 A64])) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 93)) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE") [flags 0x3]  <function_decl 0x7fdf7bc0e510 forward>) [0 forward S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:120 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 87 [ D.48980 ])
        (reg:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 88 [ D.48981 ])
        (mem:DI (reg/f:DI 87 [ D.48980 ]) [0 *_5+0 S8 A64])) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48980 ])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 89 [ D.48982 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/f:DI 89 [ D.48982 ])) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48982 ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (const_int 8 [0x8])) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZnwmPv") [flags 0x3]  <function_decl 0x7fdf7d53fe58 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:120 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 90 [ D.48982 ])
        (reg:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:120 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.48982 ])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:120 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) /usr/include/c++/5/ext/new_allocator.h:120 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 90

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 90
;; lr  def 	
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 35 3 (set (mem:DI (reg/f:DI 90 [ D.48982 ]) [0 MEM[(long long int *)_10]+0 S8 A64])
        (reg:DI 88 [ D.48981 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.48982 ])
        (expr_list:REG_DEAD (reg:DI 88 [ D.48981 ])
            (nil))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 4, flags: (NEW, RTL, MODIFIED)
;;  pred:       2
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 35 21 34 5 342 "" [1 uses])
(note 34 35 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 34 30 5 (const_int 0 [0]) /usr/include/c++/5/ext/new_allocator.h:120 684 {nop}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 30 36 31 4 339 "" [0 uses])
(note 31 30 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type, funcdef_no=2271, decl_uid=45338, cgraph_uid=890, symbol_order=892)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best DREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4

   Insn 23(l0): point = 1
   Insn 22(l0): point = 4
   Insn 21(l0): point = 6
   Insn 29(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 6(l0): point = 30
   Insn 4(l0): point = 32
   Insn 3(l0): point = 34
   Insn 2(l0): point = 36
 a0(r92): [15..24]
 a1(r91): [17..26]
 a2(r90): [19..28]
 a3(r88): [21..38]
Compressing live ranges: from 39 to 2 - 5%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [0..1]
 a2(r90): [0..1]
 a3(r88): [0..1]
  regions=1, blocks=5, points=2
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    3:r88  l0    37    2:r90  l0     1    1:r91  l0     2    0:r92  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,2u} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={4d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,12u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 218{176d,42u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/basic_string.h:191 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __beg+0 S8 A64])
        (reg:DI 4 si [ __beg ])) /usr/include/c++/5/bits/basic_string.h:191 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __beg ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __end+0 S8 A64])
        (reg:DI 1 dx [ __end ])) /usr/include/c++/5/bits/basic_string.h:191 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __end ])
        (nil)))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48985+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:191 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 6 11 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __end+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:195 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __beg+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:195 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:195 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:195 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 14 13 15 2 (set (mem:QI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S1 A8])
        (reg:QI 88 [ D.47811 ])) /usr/include/c++/5/bits/basic_string.h:195 67 {*pushqi2_rex64}
     (expr_list:REG_DEAD (reg:QI 88 [ D.47811 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 15 14 16 2 (set (reg:DI 1 dx)
        (reg:DI 90)) /usr/include/c++/5/bits/basic_string.h:195 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 91)) /usr/include/c++/5/bits/basic_string.h:195 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/basic_string.h:195 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag") [flags 0x3]  <function_decl 0x7fdf7ba70a20 _M_construct>) [0 _M_construct S1 A8])
        (const_int 16 [0x10])) /usr/include/c++/5/bits/basic_string.h:195 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 19 18 29 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:195 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 29 19 21 2 (const_int 0 [0]) /usr/include/c++/5/bits/basic_string.h:196 684 {nop}
     (nil))
(insn 21 29 22 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48985+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/basic_string.h:196 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 22 21 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) /usr/include/c++/5/bits/basic_string.h:196 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 27 22 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 23 27 24 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:196 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 24 23 25)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 24 28 4 344 "" [1 uses])
(note 28 25 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = long long int] (_ZNSaIxEC2Ev, funcdef_no=2289, decl_uid=42358, cgraph_uid=908, symbol_order=910)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 11(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r87): [5..6]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 106{93d,13u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/allocator.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/allocator.h:113 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 87)) /usr/include/c++/5/bits/allocator.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 8 7 11 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIxEC2Ev") [flags 0x3]  <function_decl 0x7fdf7c162a20 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/allocator.h:113 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 8 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/allocator.h:113 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>; std::allocator_traits<std::allocator<_CharT> >::pointer = long long int*; std::allocator_traits<std::allocator<_CharT> >::size_type = long unsigned int] (_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm, funcdef_no=2291, decl_uid=42048, cgraph_uid=910, symbol_order=912)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best DREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 4(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r89): [5..10]
 a1(r88): [7..12]
 a2(r87): [9..14]
Compressing live ranges: from 23 to 2 - 8%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [0..1]
 a2(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r87  l0     1    1:r88  l0     2    0:r89  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>; std::allocator_traits<std::allocator<_CharT> >::pointer = long long int*; std::allocator_traits<std::allocator<_CharT> >::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 120{97d,23u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/include/c++/5/bits/alloc_traits.h:516 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/include/c++/5/bits/alloc_traits.h:516 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])
        (reg:DI 1 dx [ __n ])) /usr/include/c++/5/bits/alloc_traits.h:516 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __n ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 87)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __n+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:517 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:517 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:517 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 87)) /usr/include/c++/5/bits/alloc_traits.h:517 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 88)) /usr/include/c++/5/bits/alloc_traits.h:517 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/alloc_traits.h:517 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 14 13 17 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm") [flags 0x3]  <function_decl 0x7fdf7c162288 deallocate>) [0 deallocate S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/alloc_traits.h:517 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 17 14 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/alloc_traits.h:517 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = long long int*] (_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_, funcdef_no=2292, decl_uid=45472, cgraph_uid=911, symbol_order=913)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 9(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 30{19d,11u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 D.45473+0 S8 A64])
        (reg:DI 5 di [ D.45473 ])) /usr/include/c++/5/bits/stl_construct.h:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ D.45473 ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.45474+0 S8 A64])
        (reg:DI 4 si [ D.45474 ])) /usr/include/c++/5/bits/stl_construct.h:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.45474 ])
        (nil)))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_construct.h:112 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::_Vector_base(const allocator_type&) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<long long int>] (_ZNSt12_Vector_baseIxSaIxEEC2ERKS0_, funcdef_no=2294, decl_uid=42447, cgraph_uid=913, symbol_order=915)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
 a0(r87): [5..10]
 a1(r88): [7..8]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r88): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    0:r87  l0     0    1:r88  l0     1
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Vector_base(const allocator_type&) [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 113{95d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])
        (reg:DI 4 si [ __a ])) /usr/include/c++/5/bits/stl_vector.h:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __a ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ D.48986 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:128 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:128 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 88)) /usr/include/c++/5/bits/stl_vector.h:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48986 ])) /usr/include/c++/5/bits/stl_vector.h:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48986 ])
        (nil)))
(call_insn 11 10 14 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC1ERKS0_") [flags 0x3]  <function_decl 0x7fdf7c16fe58 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:128 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 11 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_vector.h:128 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = long long int*&; typename std::remove_reference< <template-parameter-1-1> >::type = long long int*] (_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=2297, decl_uid=46622, cgraph_uid=915, symbol_order=917)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = long long int*&; typename std::remove_reference< <template-parameter-1-1> >::type = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])
        (reg:DI 5 di [ __t ])) /usr/include/c++/5/bits/move.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __t ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ D.48987 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48987 ])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48987 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/move.h:102 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::swap(_Tp&, _Tp&) [with _Tp = long long int*] (_ZSt4swapIPxEvRT_S2_, funcdef_no=2296, decl_uid=45481, cgraph_uid=916, symbol_order=918)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 31.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a3(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a7(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a9(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a10(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 31(l0): point = 1
   Insn 30(l0): point = 4
   Insn 29(l0): point = 6
   Insn 37(l0): point = 8
   Insn 27(l0): point = 10
   Insn 26(l0): point = 12
   Insn 25(l0): point = 14
   Insn 24(l0): point = 16
   Insn 23(l0): point = 18
   Insn 22(l0): point = 20
   Insn 21(l0): point = 22
   Insn 20(l0): point = 24
   Insn 19(l0): point = 26
   Insn 18(l0): point = 28
   Insn 17(l0): point = 30
   Insn 16(l0): point = 32
   Insn 15(l0): point = 34
   Insn 14(l0): point = 36
   Insn 13(l0): point = 38
   Insn 12(l0): point = 40
   Insn 11(l0): point = 42
   Insn 10(l0): point = 44
   Insn 9(l0): point = 46
   Insn 8(l0): point = 48
   Insn 5(l0): point = 50
   Insn 3(l0): point = 52
   Insn 2(l0): point = 54
 a0(r97): [11..12]
 a1(r92): [11..14]
 a2(r91): [15..16]
 a3(r96): [21..22]
 a4(r95): [25..26]
 a5(r90): [25..28]
 a6(r89): [29..30]
 a7(r94): [35..36]
 a8(r88): [39..40]
 a9(r87): [41..42]
 a10(r93): [47..48]
Compressing live ranges: from 57 to 18 - 31%
Ranges after the compression:
 a0(r97): [0..1]
 a1(r92): [0..1]
 a2(r91): [2..3]
 a3(r96): [4..5]
 a4(r95): [6..7]
 a5(r90): [6..7]
 a6(r89): [8..9]
 a7(r94): [10..11]
 a8(r88): [12..13]
 a9(r87): [14..15]
 a10(r93): [16..17]
  regions=1, blocks=5, points=18
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    9:r87  l0     0    8:r88  l0     0    6:r89  l0     0    5:r90  l0     1
    2:r91  l0     0    1:r92  l0     1   10:r93  l0     0    7:r94  l0     0
    4:r95  l0     0    3:r96  l0     0    0:r97  l0     0
+++Costs: overall -6, reg -6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::swap(_Tp&, _Tp&) [with _Tp = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,3u} r1={5d} r2={5d} r4={5d,1u} r5={8d,4u} r6={1d,4u} r7={1d,8u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,3u} r17={7d,1u} r18={4d} r19={4d} r20={1d,14u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 373{324d,49u,0e} in 27{23 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/include/c++/5/bits/move.h:176 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __b+0 S8 A64])
        (reg:DI 4 si [ __b ])) /usr/include/c++/5/bits/move.h:176 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __b ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48990+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/move.h:176 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/move.h:185 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 93)) /usr/include/c++/5/bits/move.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_") [flags 0x3]  <function_decl 0x7fdf7ba88bd0 move>) [0 move S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/move.h:185 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 87 [ D.48988 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/move.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 88 [ D.48989 ])
        (mem/f:DI (reg/f:DI 87 [ D.48988 ]) [0 *_4+0 S8 A64])) /usr/include/c++/5/bits/move.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48988 ])
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __tmp+0 S8 A64])
        (reg/f:DI 88 [ D.48989 ])) /usr/include/c++/5/bits/move.h:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48989 ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __b+0 S8 A64])) /usr/include/c++/5/bits/move.h:186 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 94)) /usr/include/c++/5/bits/move.h:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_") [flags 0x3]  <function_decl 0x7fdf7ba88bd0 move>) [0 move S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/move.h:186 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 89 [ D.48988 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/move.h:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 90 [ D.48989 ])
        (mem/f:DI (reg/f:DI 89 [ D.48988 ]) [0 *_9+0 S8 A64])) /usr/include/c++/5/bits/move.h:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.48988 ])
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/move.h:186 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/f:DI (reg/f:DI 95) [0 *__a_2(D)+0 S8 A64])
        (reg/f:DI 90 [ D.48989 ])) /usr/include/c++/5/bits/move.h:186 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_DEAD (reg/f:DI 90 [ D.48989 ])
            (nil))))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/move.h:187 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 96)) /usr/include/c++/5/bits/move.h:187 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 23 22 24 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_") [flags 0x3]  <function_decl 0x7fdf7ba88bd0 move>) [0 move S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/move.h:187 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 91 [ D.48988 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/move.h:187 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 25 24 26 2 (set (reg/f:DI 92 [ D.48989 ])
        (mem/f:DI (reg/f:DI 91 [ D.48988 ]) [0 *_13+0 S8 A64])) /usr/include/c++/5/bits/move.h:187 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.48988 ])
        (nil)))
(insn 26 25 27 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __b+0 S8 A64])) /usr/include/c++/5/bits/move.h:187 89 {*movdi_internal}
     (nil))
(insn 27 26 37 2 (set (mem/f:DI (reg/f:DI 97) [0 *__b_7(D)+0 S8 A64])
        (reg/f:DI 92 [ D.48989 ])) /usr/include/c++/5/bits/move.h:187 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (expr_list:REG_DEAD (reg/f:DI 92 [ D.48989 ])
            (nil))))
(insn 37 27 29 2 (const_int 0 [0]) /usr/include/c++/5/bits/move.h:188 684 {nop}
     (nil))
(insn 29 37 30 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48990+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/move.h:188 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 30 29 35 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) /usr/include/c++/5/bits/move.h:188 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 33)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 35 30 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 31 35 32 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/move.h:188 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 32 31 33)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 33 32 36 4 352 "" [1 uses])
(note 36 33 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = std::allocator<long long int>&; typename std::remove_reference< <template-parameter-1-1> >::type = std::allocator<long long int>] (_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=2299, decl_uid=46630, cgraph_uid=917, symbol_order=919)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = std::allocator<long long int>&; typename std::remove_reference< <template-parameter-1-1> >::type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])
        (reg:DI 5 di [ __t ])) /usr/include/c++/5/bits/move.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __t ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ D.48991 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __t+0 S8 A64])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48991 ])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48991 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/move.h:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/move.h:102 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::__do_alloc_on_move(_Alloc&, _Alloc&, std::true_type) [with _Alloc = std::allocator<long long int>; std::true_type = std::integral_constant<bool, true>] (_ZSt18__do_alloc_on_moveISaIxEEvRT_S2_St17integral_constantIbLb1EE, funcdef_no=2298, decl_uid=45790, cgraph_uid=918, symbol_order=920)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 12(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 3(l0): point = 8
   Insn 2(l0): point = 10
 a0(r87): [5..6]
Compressing live ranges: from 13 to 2 - 15%
Ranges after the compression:
 a0(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::__do_alloc_on_move(_Alloc&, _Alloc&, std::true_type) [with _Alloc = std::allocator<long long int>; std::true_type = std::integral_constant<bool, true>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,5u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 108{93d,15u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __one+0 S8 A64])
        (reg:DI 5 di [ __one ])) /usr/include/c++/5/bits/alloc_traits.h:590 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __one ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __two+0 S8 A64])
        (reg:DI 4 si [ __two ])) /usr/include/c++/5/bits/alloc_traits.h:590 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __two ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __two+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:591 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 87)) /usr/include/c++/5/bits/alloc_traits.h:591 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 9 8 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_") [flags 0x3]  <function_decl 0x7fdf7ba8f798 move>) [0 move S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/alloc_traits.h:591 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 9 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/alloc_traits.h:591 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int] (_ZNKSt6vectorIxSaIxEE8max_sizeEv, funcdef_no=2300, decl_uid=42623, cgraph_uid=919, symbol_order=921)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 15(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 2(l0): point = 20
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r88): [11..12]
 a3(r87): [17..18]
Compressing live ranges: from 23 to 8 - 34%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r88): [4..5]
 a3(r87): [6..7]
  regions=1, blocks=3, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    3:r87  l0     0    2:r88  l0     0    1:r89  l0     0    0:r90  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = long long int; _Alloc = std::allocator<long long int>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 192{170d,22u,0e} in 11{9 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_vector.h:659 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.48992 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_vector.h:660 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.48992 ])) /usr/include/c++/5/bits/stl_vector.h:660 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48992 ])
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7fdf7c149bd0 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:660 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 88 [ D.48993 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:660 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.48993 ])) /usr/include/c++/5/bits/stl_vector.h:660 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.48993 ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_") [flags 0x3]  <function_decl 0x7fdf7c139d80 max_size>) [0 max_size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:660 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 15 2 (set (reg:DI 89 [ D.48994 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:660 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 15 12 19 2 (set (reg:DI 90 [ <retval> ])
        (reg:DI 89 [ D.48994 ])) /usr/include/c++/5/bits/stl_vector.h:660 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.48994 ])
        (nil)))
(insn 19 15 20 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_vector.h:660 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 20 19 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_vector.h:660 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int] (_ZSt3maxImERKT_S2_S2_, funcdef_no=2301, decl_uid=45861, cgraph_uid=920, symbol_order=922)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:37 INT_SSE_REGS:33 ALL_REGS:416 MEM:11
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 27(l0): point = 0
   Insn 26(l0): point = 2
   Insn 22(l0): point = 4
   Insn 19(l0): point = 7
   Insn 29(l0): point = 10
   Insn 14(l0): point = 12
   Insn 12(l0): point = 15
   Insn 11(l0): point = 17
   Insn 10(l0): point = 19
   Insn 9(l0): point = 21
   Insn 8(l0): point = 23
   Insn 7(l0): point = 25
   Insn 3(l0): point = 27
   Insn 2(l0): point = 29
 a0(r90): [3..4]
 a1(r87): [10..12] [5..7]
 a2(r89): [18..19]
 a3(r88): [18..23]
 a4(r92): [20..21]
 a5(r91): [24..25]
Compressing live ranges: from 32 to 12 - 37%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r87): [2..5]
 a2(r89): [6..7]
 a3(r88): [6..9]
 a4(r92): [8..9]
 a5(r91): [10..11]
  regions=1, blocks=6, points=12
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    1:r87  l0     0    3:r88  l0     1    2:r89  l0     0    0:r90  l0     0
    5:r91  l0     0    4:r92  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,11u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 64{28d,36u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 91 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/include/c++/5/bits/stl_algobase.h:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __b+0 S8 A64])
        (reg:DI 4 si [ __b ])) /usr/include/c++/5/bits/stl_algobase.h:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:224 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88 [ D.48996 ])
        (mem:DI (reg/f:DI 91) [0 *__a_3(D)+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __b+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:224 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 89 [ D.48996 ])
        (mem:DI (reg/f:DI 92) [0 *__b_5(D)+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 11 10 12 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 88 [ D.48996 ])
            (reg:DI 89 [ D.48996 ]))) /usr/include/c++/5/bits/stl_algobase.h:224 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.48996 ])
        (expr_list:REG_DEAD (reg:DI 88 [ D.48996 ])
            (nil))))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) /usr/include/c++/5/bits/stl_algobase.h:224 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 17)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 29 3 (set (reg/f:DI 87 [ D.48995 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __b+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:225 89 {*movdi_internal}
     (nil))
(jump_insn 29 14 30 3 (set (pc)
        (label_ref 20)) /usr/include/c++/5/bits/stl_algobase.h:225 654 {jump}
     (nil)
 -> 20)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 30 29 17)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 17 30 18 4 359 "" [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 87 [ D.48995 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:226 89 {*movdi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 90
(code_label 20 19 21 5 360 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 26 5 (set (reg:DI 90 [ <retval> ])
        (reg/f:DI 87 [ D.48995 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48995 ])
        (nil)))
(insn 26 22 27 5 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:227 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 27 26 0 5 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:227 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::pointer = long long int*; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>; std::allocator_traits<std::allocator<_CharT> >::size_type = long unsigned int] (_ZNSt16allocator_traitsISaIxEE8allocateERS0_m, funcdef_no=2302, decl_uid=42041, cgraph_uid=921, symbol_order=923)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r90): [11..16]
 a3(r89): [13..18]
Compressing live ranges: from 25 to 6 - 24%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r90): [4..5]
 a3(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r87  l0     0    0:r88  l0     0    3:r89  l0     2    2:r90  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::pointer = long long int*; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>; std::allocator_traits<std::allocator<_CharT> >::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 123{99d,24u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/include/c++/5/bits/alloc_traits.h:490 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/include/c++/5/bits/alloc_traits.h:490 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:491 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:491 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) /usr/include/c++/5/bits/alloc_traits.h:491 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 89)) /usr/include/c++/5/bits/alloc_traits.h:491 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/include/c++/5/bits/alloc_traits.h:491 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv") [flags 0x3]  <function_decl 0x7fdf7c1621b0 allocate>) [0 allocate S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/alloc_traits.h:491 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 13 12 16 2 (set (reg/f:DI 87 [ D.48997 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/alloc_traits.h:491 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 13 20 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48997 ])) /usr/include/c++/5/bits/alloc_traits.h:491 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48997 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/alloc_traits.h:491 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 21 20 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/alloc_traits.h:491 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _ReturnType std::__make_move_if_noexcept_iterator(_Iterator) [with _Iterator = long long int*; _ReturnType = std::move_iterator<long long int*>] (_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_, funcdef_no=2303, decl_uid=46085, cgraph_uid=922, symbol_order=924)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 25(l0): point = 0
   Insn 22(l0): point = 3
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 15(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 4(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [11..12]
 a1(r87): [13..14]
 a2(r90): [19..22]
 a3(r89): [21..24]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r90): [4..5]
 a3(r89): [4..5]
  regions=1, blocks=5, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r87  l0     0    0:r88  l0     0    3:r89  l0     1    2:r90  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_ReturnType std::__make_move_if_noexcept_iterator(_Iterator) [with _Iterator = long long int*; _ReturnType = std::move_iterator<long long int*>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,1u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,1u} r18={2d} r19={2d} r20={1d,10u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 206{173d,33u,0e} in 14{12 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __i+0 S8 A64])
        (reg:DI 5 di [ __i ])) /usr/include/c++/5/bits/stl_iterator.h:1166 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __i ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.48998+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator.h:1166 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __i+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:1167 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator.h:1167 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_iterator.h:1167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_iterator.h:1167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt13move_iteratorIPxEC1ES0_") [flags 0x3]  <function_decl 0x7fdf7ba0b360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_iterator.h:1167 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 15 2 (set (reg:DI 87 [ D.47612 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.46637+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:1167 89 {*movdi_internal}
     (nil))
(insn 15 12 19 2 (set (reg:DI 88 [ <retval> ])
        (reg:DI 87 [ D.47612 ])) /usr/include/c++/5/bits/stl_iterator.h:1167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.47612 ])
        (nil)))
(insn 19 15 20 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator.h:1167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 20 19 21 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.48998+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_iterator.h:1167 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 21 20 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) /usr/include/c++/5/bits/stl_iterator.h:1167 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 27 21 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 22 27 23 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_iterator.h:1167 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 23 22 24)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 24 23 28 4 365 "" [1 uses])
(note 28 24 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 28 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:1167 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<long long int*>; _ForwardIterator = long long int*; _Tp = long long int] (_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E, funcdef_no=2304, decl_uid=46197, cgraph_uid=923, symbol_order=925)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 5(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<long long int*>; _ForwardIterator = long long int*; _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 130{100d,30u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_uninitialized.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_uninitialized.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_uninitialized.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 D.46201+0 S8 A64])
        (reg:DI 2 cx [ D.46201 ])) /usr/include/c++/5/bits/stl_uninitialized.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ D.46201 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_") [flags 0x3]  <function_decl 0x7fdf7ba95948 uninitialized_copy>) [0 uninitialized_copy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_uninitialized.h:281 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ D.48999 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.48999 ])) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.48999 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_uninitialized.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:281 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = long long int; _Tp = long long int] (_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_, funcdef_no=2305, decl_uid=46235, cgraph_uid=924, symbol_order=926)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 9(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = long long int; _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 30{19d,11u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/ext/new_allocator.h:124 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/include/c++/5/ext/new_allocator.h:124 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 0 2 (const_int 0 [0]) /usr/include/c++/5/ext/new_allocator.h:124 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = long long int] (_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_, funcdef_no=2308, decl_uid=42289, cgraph_uid=927, symbol_order=929)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 9(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 30{19d,11u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/ext/new_allocator.h:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.42291+0 S8 A64])
        (reg:DI 4 si [ D.42291 ])) /usr/include/c++/5/ext/new_allocator.h:81 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.42291 ])
        (nil)))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 0 2 (const_int 0 [0]) /usr/include/c++/5/ext/new_allocator.h:81 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; _ForwardIterator = long long int*] (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_, funcdef_no=2310, decl_uid=46514, cgraph_uid=929, symbol_order=931)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 23(l0): point = 0
   Insn 22(l0): point = 2
   Insn 18(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 8(l0): point = 20
   Insn 4(l0): point = 22
   Insn 3(l0): point = 24
   Insn 2(l0): point = 26
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 29 to 6 - 20%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; _ForwardIterator = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 128{100d,28u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_uninitialized.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_uninitialized.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_uninitialized.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 90)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_") [flags 0x3]  <function_decl 0x7fdf7baa0438 copy>) [0 copy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_uninitialized.h:93 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 15 14 18 2 (set (reg/f:DI 87 [ D.49000 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 15 22 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49000 ])) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49000 ])
        (nil)))
(insn 22 18 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 23 22 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:93 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Miter_base<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >] (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES8_, funcdef_no=2311, decl_uid=46539, cgraph_uid=930, symbol_order=932)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [11..12]
Compressing live ranges: from 17 to 6 - 35%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Miter_base<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 114{96d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_algobase.h:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb0EE7_S_baseES6_") [flags 0x3]  <function_decl 0x7fdf7ba67af8 _S_base>) [0 _S_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:294 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 12 2 (set (reg:DI 87 [ D.48156 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 9 16 2 (set (reg:DI 88 [ <retval> ])
        (reg:DI 87 [ D.48156 ])) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.48156 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:294 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = true; _II = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; _OI = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >] (_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET1_T0_S8_S7_, funcdef_no=2312, decl_uid=46545, cgraph_uid=931, symbol_order=933)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best AD_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a7(r87,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a8(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 45(l0): point = 0
   Insn 42(l0): point = 3
   Insn 41(l0): point = 6
   Insn 40(l0): point = 8
   Insn 39(l0): point = 10
   Insn 35(l0): point = 12
   Insn 32(l0): point = 14
   Insn 31(l0): point = 16
   Insn 30(l0): point = 18
   Insn 29(l0): point = 20
   Insn 28(l0): point = 22
   Insn 27(l0): point = 24
   Insn 26(l0): point = 26
   Insn 25(l0): point = 28
   Insn 24(l0): point = 30
   Insn 23(l0): point = 32
   Insn 22(l0): point = 34
   Insn 21(l0): point = 36
   Insn 20(l0): point = 38
   Insn 19(l0): point = 40
   Insn 18(l0): point = 42
   Insn 17(l0): point = 44
   Insn 16(l0): point = 46
   Insn 15(l0): point = 48
   Insn 14(l0): point = 50
   Insn 13(l0): point = 52
   Insn 12(l0): point = 54
   Insn 11(l0): point = 56
   Insn 10(l0): point = 58
   Insn 9(l0): point = 60
   Insn 6(l0): point = 62
   Insn 4(l0): point = 64
   Insn 3(l0): point = 66
   Insn 2(l0): point = 68
 a0(r92): [11..12]
 a1(r91): [13..14]
 a2(r97): [19..22]
 a3(r96): [21..24]
 a4(r90): [27..28]
 a5(r89): [33..38]
 a6(r88): [35..46]
 a7(r87): [37..54]
 a8(r95): [43..44]
 a9(r94): [51..52]
 a10(r93): [59..60]
Compressing live ranges: from 71 to 16 - 22%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r97): [4..5]
 a3(r96): [4..5]
 a4(r90): [6..7]
 a5(r89): [8..9]
 a6(r88): [8..11]
 a7(r87): [8..13]
 a8(r95): [10..11]
 a9(r94): [12..13]
 a10(r93): [14..15]
  regions=1, blocks=5, points=16
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    7:r87  l0    41    6:r88  l0     3    5:r89  l0     0    4:r90  l0     0
    1:r91  l0     0    0:r92  l0     0   10:r93  l0     0    9:r94  l0     0
    8:r95  l0     0    3:r96  l0     1    2:r97  l0     0
+++Costs: overall -10, reg -10, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = true; _II = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; _OI = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={8d,6u} r1={8d,2u} r2={7d} r4={9d,3u} r5={12d,6u} r6={1d,4u} r7={1d,10u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,3u} r17={10d,1u} r18={6d} r19={6d} r20={1d,16u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 537{475d,62u,0e} in 34{28 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __first+0 S8 A128])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_algobase.h:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 __last+0 S8 A128])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_algobase.h:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 __result+0 S8 A128])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_algobase.h:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.49002+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:436 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 6 10 2 (set (reg:DI 93)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 __result+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_") [flags 0x3]  <function_decl 0x7fdf7baa3288 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:438 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 87 [ D.49001 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 94)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 __last+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 94)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_") [flags 0x3]  <function_decl 0x7fdf7baa3288 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:438 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 88 [ D.49001 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __first+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 95)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_") [flags 0x3]  <function_decl 0x7fdf7baa3288 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:438 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 89 [ D.49001 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ D.49001 ])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49001 ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.49001 ])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.49001 ])
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.49001 ])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.49001 ])
        (nil)))
(call_insn 24 23 25 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_") [flags 0x3]  <function_decl 0x7fdf7baa3798 __copy_move_a>) [0 __copy_move_a S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:438 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 25 24 26 2 (set (reg/f:DI 90 [ D.49001 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 26 25 27 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 D.46696+0 S8 A64])
        (reg/f:DI 90 [ D.49001 ])) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.49001 ])
        (nil)))
(insn 27 26 28 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:440 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:440 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 2 (set (reg:DI 4 si)
        (reg:DI 96)) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (reg:DI 97)) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 31 30 32 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC1ERKS1_") [flags 0x3]  <function_decl 0x7fdf7be51360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_algobase.h:440 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 35 2 (set (reg:DI 91 [ D.48160 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 D.46697+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (nil))
(insn 35 32 39 2 (set (reg:DI 92 [ <retval> ])
        (reg:DI 91 [ D.48160 ])) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ D.48160 ])
        (nil)))
(insn 39 35 40 2 (set (reg/i:DI 0 ax)
        (reg:DI 92 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:441 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ <retval> ])
        (nil)))
(insn 40 39 41 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.49002+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_algobase.h:441 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 41 40 47 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) /usr/include/c++/5/bits/stl_algobase.h:441 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 44)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 47 41 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 42 47 43 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_algobase.h:441 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 43 42 44)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 44 43 48 4 376 "" [1 uses])
(note 48 44 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 45 48 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:441 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag, funcdef_no=2313, decl_uid=46559, cgraph_uid=932, symbol_order=934)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 21 count 18 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 100.
verify found no changes in insn with uid = 105.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r108,l0) best SIREG, allocno GENERAL_REGS
    r107: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r107,l0) best DREG, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r102,l0) best SIREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r100,l0) best SIREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a8(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a15(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a19(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a20(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a23(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a25(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 105(l0): point = 1
   Insn 100(l0): point = 4
   Insn 99(l0): point = 6
   Insn 98(l0): point = 8
   Insn 97(l0): point = 10
   Insn 116(l0): point = 12
   Insn 93(l0): point = 15
   Insn 91(l0): point = 18
   Insn 90(l0): point = 20
   Insn 89(l0): point = 22
   Insn 88(l0): point = 24
   Insn 87(l0): point = 26
   Insn 86(l0): point = 28
   Insn 113(l0): point = 30
   Insn 123(l0): point = 33
   Insn 104(l0): point = 36
   Insn 103(l0): point = 38
   Insn 118(l0): point = 40
   Insn 81(l0): point = 42
   Insn 80(l0): point = 44
   Insn 79(l0): point = 46
   Insn 78(l0): point = 48
   Insn 77(l0): point = 50
   Insn 76(l0): point = 52
   Insn 75(l0): point = 54
   Insn 74(l0): point = 56
   Insn 73(l0): point = 58
   Insn 72(l0): point = 60
   Insn 71(l0): point = 62
   Insn 69(l0): point = 64
   Insn 68(l0): point = 67
   Insn 67(l0): point = 69
   Insn 66(l0): point = 71
   Insn 63(l0): point = 74
   Insn 62(l0): point = 76
   Insn 61(l0): point = 78
   Insn 60(l0): point = 80
   Insn 59(l0): point = 82
   Insn 58(l0): point = 84
   Insn 57(l0): point = 86
   Insn 56(l0): point = 88
   Insn 55(l0): point = 90
   Insn 54(l0): point = 92
   Insn 53(l0): point = 94
   Insn 52(l0): point = 96
   Insn 51(l0): point = 98
   Insn 50(l0): point = 100
   Insn 49(l0): point = 102
   Insn 48(l0): point = 104
   Insn 46(l0): point = 107
   Insn 45(l0): point = 109
   Insn 44(l0): point = 111
   Insn 43(l0): point = 113
   Insn 42(l0): point = 115
   Insn 41(l0): point = 117
   Insn 40(l0): point = 119
   Insn 39(l0): point = 121
   Insn 38(l0): point = 123
   Insn 37(l0): point = 125
   Insn 36(l0): point = 127
   Insn 32(l0): point = 130
   Insn 31(l0): point = 132
   Insn 29(l0): point = 135
   Insn 28(l0): point = 137
   Insn 25(l0): point = 140
   Insn 119(l0): point = 143
   Insn 20(l0): point = 145
   Insn 18(l0): point = 148
   Insn 17(l0): point = 150
   Insn 16(l0): point = 152
   Insn 14(l0): point = 155
   Insn 13(l0): point = 157
   Insn 12(l0): point = 159
   Insn 11(l0): point = 161
   Insn 10(l0): point = 163
   Insn 9(l0): point = 165
   Insn 6(l0): point = 167
   Insn 4(l0): point = 169
   Insn 3(l0): point = 171
   Insn 2(l0): point = 173
 a0(r88): [7..8]
 a1(r112): [9..12]
 a2(r111): [21..22]
 a3(r97): [27..28]
 a4(r110): [29..30]
 a5(r109): [45..48]
 a6(r96): [47..50]
 a7(r95): [55..64]
 a8(r108): [57..60]
 a9(r107): [59..62]
 a10(r106): [70..71]
 a11(r105): [77..80]
 a12(r94): [79..82]
 a13(r104): [87..90]
 a14(r93): [89..92]
 a15(r103): [97..102]
 a16(r102): [99..104]
 a17(r92): [110..111]
 a18(r91): [114..115]
 a19(r90): [116..117]
 a20(r101): [122..125]
 a21(r100): [124..127]
 a22(r87): [143..145] [138..140]
 a23(r99): [151..152]
 a24(r89): [158..159]
 a25(r98): [164..165]
Compressing live ranges: from 176 to 40 - 22%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r112): [2..3]
 a2(r111): [4..5]
 a3(r97): [6..7]
 a4(r110): [8..9]
 a5(r109): [10..11]
 a6(r96): [10..11]
 a7(r95): [12..13]
 a8(r108): [12..13]
 a9(r107): [12..13]
 a10(r106): [14..15]
 a11(r105): [16..17]
 a12(r94): [16..17]
 a13(r104): [18..19]
 a14(r93): [18..19]
 a15(r103): [20..21]
 a16(r102): [20..21]
 a17(r92): [22..23]
 a18(r91): [24..25]
 a19(r90): [26..27]
 a20(r101): [28..29]
 a21(r100): [28..29]
 a22(r87): [30..33]
 a23(r99): [34..35]
 a24(r89): [36..37]
 a25(r98): [38..39]
  regions=1, blocks=18, points=40
    allocnos=26 (big 0), copies=0, conflicts=0, ranges=26
Disposition:
   22:r87  l0     0    0:r88  l0     0   24:r89  l0     0   19:r90  l0     0
   18:r91  l0     0   17:r92  l0     0   14:r93  l0     1   12:r94  l0     1
    7:r95  l0     2    6:r96  l0     1    3:r97  l0     0   25:r98  l0     0
   23:r99  l0     0   21:r100 l0     1   20:r101 l0     0   16:r102 l0     2
   15:r103 l0     0   13:r104 l0     0   11:r105 l0     0   10:r106 l0     0
    9:r107 l0     1    8:r108 l0     0    5:r109 l0     0    4:r110 l0     0
    2:r111 l0     0    1:r112 l0     3
+++Costs: overall -22, reg -22, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={18d,6u} r1={20d,3u} r2={16d} r4={22d,7u} r5={28d,13u} r6={1d,17u} r7={1d,32u} r8={15d} r9={15d} r10={15d} r11={15d} r12={15d} r13={15d} r14={15d} r15={15d} r16={1d,16u} r17={22d,5u} r18={15d} r19={15d} r20={1d,40u} r21={16d} r22={16d} r23={16d} r24={16d} r25={16d} r26={16d} r27={16d} r28={16d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={15d} r37={16d} r38={16d} r39={15d} r40={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r76={15d} r77={15d} r78={15d} r79={15d} r80={15d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} 
;;    total ref usage 1322{1157d,165u,0e} in 80{65 regular + 15 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 98
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/basic_string.tcc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __beg+0 S8 A64])
        (reg:DI 4 si [ __beg ])) /usr/include/c++/5/bits/basic_string.tcc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __beg ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __end+0 S8 A64])
        (reg:DI 1 dx [ __end ])) /usr/include/c++/5/bits/basic_string.tcc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __end ])
        (nil)))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.49009+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.tcc:210 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 6 10 2 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __beg+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:215 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 98)) /usr/include/c++/5/bits/basic_string.tcc:215 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 11 10 12 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_") [flags 0x3]  <function_decl 0x7fdf7baae0d8 __is_null_pointer>) [0 __is_null_pointer S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:215 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:QI 89 [ D.49004 ])
        (reg:QI 0 ax)) /usr/include/c++/5/bits/basic_string.tcc:215 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.49004 ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:215 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ D.49004 ])
        (nil)))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) /usr/include/c++/5/bits/basic_string.tcc:215 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 23)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __beg+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:215 89 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99)
            (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 __end+0 S8 A64]))) /usr/include/c++/5/bits/basic_string.tcc:215 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) /usr/include/c++/5/bits/basic_string.tcc:215 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 23)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 119 4 (set (reg:QI 87 [ D.49004 ])
        (const_int 1 [0x1])) /usr/include/c++/5/bits/basic_string.tcc:215 93 {*movqi_internal}
     (nil))
(jump_insn 119 20 120 4 (set (pc)
        (label_ref 26)) /usr/include/c++/5/bits/basic_string.tcc:215 654 {jump}
     (nil)
 -> 26)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 120 119 23)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 23 120 24 5 378 "" [2 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:QI 87 [ D.49004 ])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:215 93 {*movqi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags]
(code_label 26 25 27 6 379 "" [1 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ D.49004 ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:215 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 87 [ D.49004 ])
        (nil)))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) /usr/include/c++/5/bits/basic_string.tcc:215 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 34)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fdf7b78acf0 *.LC33>)) /usr/include/c++/5/bits/basic_string.tcc:216 89 {*movdi_internal}
     (nil))
(call_insn 32 31 33 7 (call (mem:QI (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fdf7dc850d8 __throw_logic_error>) [0 __throw_logic_error S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:216 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 33 32 34)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 100 101
(code_label 34 33 35 8 380 "" [1 uses])
(note 35 34 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 8 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __end+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (nil))
(insn 37 36 38 8 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __beg+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (nil))
(insn 38 37 39 8 (set (reg:DI 4 si)
        (reg:DI 100)) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(insn 39 38 40 8 (set (reg:DI 5 di)
        (reg:DI 101)) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 40 39 41 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_") [flags 0x3]  <function_decl 0x7fdf7baae438 distance>) [0 distance S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:219 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 41 40 42 8 (set (reg:DI 90 [ D.49005 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 42 41 43 8 (set (reg:DI 91 [ D.49006 ])
        (reg:DI 90 [ D.49005 ])) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ D.49005 ])
        (nil)))
(insn 43 42 44 8 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __dnew+0 S8 A64])
        (reg:DI 91 [ D.49006 ])) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ D.49006 ])
        (nil)))
(insn 44 43 45 8 (set (reg:DI 92 [ D.49006 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __dnew+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:221 89 {*movdi_internal}
     (nil))
(insn 45 44 46 8 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 92 [ D.49006 ])
            (const_int 15 [0xf]))) /usr/include/c++/5/bits/basic_string.tcc:221 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.49006 ])
        (nil)))
(jump_insn 46 45 47 8 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) /usr/include/c++/5/bits/basic_string.tcc:221 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 64)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 102 103 104 105
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.tcc:223 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 48 50 9 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (nil))
(insn 50 49 51 9 (set (reg:DI 1 dx)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (nil))
(insn 51 50 52 9 (set (reg:DI 4 si)
        (reg:DI 102)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(insn 52 51 53 9 (set (reg:DI 5 di)
        (reg:DI 103)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(call_insn 53 52 54 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fdf7d053510 _M_create>) [0 _M_create S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:223 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 54 53 55 9 (set (reg/f:DI 93 [ D.49007 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 55 54 56 9 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (nil))
(insn 56 55 57 9 (set (reg:DI 4 si)
        (reg/f:DI 93 [ D.49007 ])) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.49007 ])
        (nil)))
(insn 57 56 58 9 (set (reg:DI 5 di)
        (reg:DI 104)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 58 57 59 9 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc") [flags 0x41]  <function_decl 0x7fdf7d042d80 _M_data>) [0 _M_data S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:223 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 59 58 60 9 (set (reg:DI 94 [ D.49006 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __dnew+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:224 89 {*movdi_internal}
     (nil))
(insn 60 59 61 9 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:224 89 {*movdi_internal}
     (nil))
(insn 61 60 62 9 (set (reg:DI 4 si)
        (reg:DI 94 [ D.49006 ])) /usr/include/c++/5/bits/basic_string.tcc:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ D.49006 ])
        (nil)))
(insn 62 61 63 9 (set (reg:DI 5 di)
        (reg:DI 105)) /usr/include/c++/5/bits/basic_string.tcc:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn 63 62 64 9 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm") [flags 0x41]  <function_decl 0x7fdf7d053288 _M_capacity>) [0 _M_capacity S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:224 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 106
(code_label 64 63 65 10 381 "" [1 uses])
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 10 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:229 89 {*movdi_internal}
     (nil))
(insn 67 66 68 10 (set (reg:DI 5 di)
        (reg:DI 106)) /usr/include/c++/5/bits/basic_string.tcc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(call_insn 68 67 109 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv") [flags 0x41]  <function_decl 0x7fdf7d053000 _M_data>) [0 _M_data S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:229 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       13 (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 96 107 108 109
(note 109 68 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 69 109 71 11 (set (reg/f:DI 95 [ D.49007 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.tcc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 71 69 72 11 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __end+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:229 89 {*movdi_internal}
     (nil))
(insn 72 71 73 11 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __beg+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:229 89 {*movdi_internal}
     (nil))
(insn 73 72 74 11 (set (reg:DI 1 dx)
        (reg:DI 107)) /usr/include/c++/5/bits/basic_string.tcc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(insn 74 73 75 11 (set (reg:DI 4 si)
        (reg:DI 108)) /usr/include/c++/5/bits/basic_string.tcc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 75 74 76 11 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.49007 ])) /usr/include/c++/5/bits/basic_string.tcc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.49007 ])
        (nil)))
(call_insn 76 75 77 11 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_") [flags 0x41]  <function_decl 0x7fdf7d05e948 _S_copy_chars>) [0 _S_copy_chars S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:229 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 77 76 78 11 (set (reg:DI 96 [ D.49006 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __dnew+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:236 89 {*movdi_internal}
     (nil))
(insn 78 77 79 11 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:236 89 {*movdi_internal}
     (nil))
(insn 79 78 80 11 (set (reg:DI 4 si)
        (reg:DI 96 [ D.49006 ])) /usr/include/c++/5/bits/basic_string.tcc:236 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ D.49006 ])
        (nil)))
(insn 80 79 81 11 (set (reg:DI 5 di)
        (reg:DI 109)) /usr/include/c++/5/bits/basic_string.tcc:236 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(call_insn 81 80 118 11 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm") [flags 0x41]  <function_decl 0x7fdf7d053360 _M_set_length>) [0 _M_set_length S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:236 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 118 81 103 11 (const_int 0 [0]) /usr/include/c++/5/bits/basic_string.tcc:237 684 {nop}
     (nil))
(insn 103 118 104 11 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.49009+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/basic_string.tcc:237 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 104 103 121 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) /usr/include/c++/5/bits/basic_string.tcc:237 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 107)
;;  succ:       17
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 121 104 123 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 123 121 124 12 (set (pc)
        (label_ref 122)) 654 {jump}
     (nil)
 -> 122)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 124 123 112)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 13 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 110 111
(code_label/s 112 124 114 13 385 "" [1 uses])
(note 114 112 113 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 113 114 86 13 (set (reg:DI 110)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 86 113 87 13 (set (reg/f:DI 97 [ D.49008 ])
        (reg:DI 110)) /usr/include/c++/5/bits/basic_string.tcc:230 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 87 86 88 13 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.49008 ])) /usr/include/c++/5/bits/basic_string.tcc:230 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.49008 ])
        (nil)))
(call_insn 88 87 89 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7fdf7cc8a1b0 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:230 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 89 88 90 13 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/basic_string.tcc:232 89 {*movdi_internal}
     (nil))
(insn 90 89 91 13 (set (reg:DI 5 di)
        (reg:DI 111)) /usr/include/c++/5/bits/basic_string.tcc:232 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(call_insn 91 90 92 13 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv") [flags 0x41]  <function_decl 0x7fdf7d0535e8 _M_dispose>) [0 _M_dispose S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:232 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 3 [0x3])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 93 92 94 14 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7fdf7bc95d80 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:233 660 {*call}
     (expr_list:REG_EH_REGION (const_int 3 [0x3])
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:       15 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 94 93 115)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (ABNORMAL,ABNORMAL_CALL,EH)
;;              14 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 15 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 112
(code_label/s 115 94 117 15 386 "" [1 uses])
(note 117 115 116 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 116 117 97 15 (set (reg:DI 112)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(call_insn 97 116 98 15 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7fdf7cc8a000 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:230 660 {*call}
     (expr_list:REG_EH_REGION (const_int -4 [0xfffffffffffffffc])
        (nil))
    (nil))
(insn 98 97 99 15 (set (reg/f:DI 88 [ D.49003 ])
        (reg:DI 112)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(insn 99 98 100 15 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.49003 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.49003 ])
        (nil)))
(call_insn 100 99 101 15 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fdf7e1e8870 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 101 100 122)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 122 101 110 16 387 "" [1 uses])
(note 110 122 105 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(call_insn 105 110 106 16 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:237 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 106 105 107)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 107 106 111 17 384 "" [1 uses])
(note 111 107 0 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = long long int] (_ZN9__gnu_cxx13new_allocatorIxEC2Ev, funcdef_no=2323, decl_uid=42294, cgraph_uid=942, symbol_order=944)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 8(l0): point = 0
   Insn 2(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = long long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 28{19d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/ext/new_allocator.h:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 3 0 2 (const_int 0 [0]) /usr/include/c++/5/ext/new_allocator.h:79 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = long long int; __gnu_cxx::new_allocator<_Tp>::pointer = long long int*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int] (_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm, funcdef_no=2325, decl_uid=42248, cgraph_uid=944, symbol_order=946)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 4(l0): point = 8
   Insn 3(l0): point = 10
   Insn 2(l0): point = 12
 a0(r87): [5..6]
Compressing live ranges: from 15 to 2 - 13%
Ranges after the compression:
 a0(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = long long int; __gnu_cxx::new_allocator<_Tp>::pointer = long long int*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 110{93d,17u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/ext/new_allocator.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) /usr/include/c++/5/ext/new_allocator.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 D.42251+0 S8 A64])
        (reg:DI 1 dx [ D.42251 ])) /usr/include/c++/5/ext/new_allocator.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.42251 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __p+0 S8 A64])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 87)) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 10 9 13 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fdf7e1eb510 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 10 0 2 (const_int 0 [0]) /usr/include/c++/5/ext/new_allocator.h:110 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static std::allocator_traits<std::allocator<_CharT> >::size_type std::allocator_traits<std::allocator<_CharT> >::max_size(const allocator_type&) [with _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::size_type = long unsigned int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>] (_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_, funcdef_no=2326, decl_uid=42076, cgraph_uid=945, symbol_order=947)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [11..12]
Compressing live ranges: from 17 to 6 - 35%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static std::allocator_traits<std::allocator<_CharT> >::size_type std::allocator_traits<std::allocator<_CharT> >::max_size(const allocator_type&) [with _Tp = long long int; std::allocator_traits<std::allocator<_CharT> >::size_type = long unsigned int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<long long int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 114{96d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) /usr/include/c++/5/bits/alloc_traits.h:550 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __a+0 S8 A64])) /usr/include/c++/5/bits/alloc_traits.h:551 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/alloc_traits.h:551 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv") [flags 0x3]  <function_decl 0x7fdf7c162360 max_size>) [0 max_size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/alloc_traits.h:551 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 12 2 (set (reg:DI 87 [ D.49011 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/alloc_traits.h:551 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 9 16 2 (set (reg:DI 88 [ <retval> ])
        (reg:DI 87 [ D.49011 ])) /usr/include/c++/5/bits/alloc_traits.h:551 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.49011 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/alloc_traits.h:551 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/alloc_traits.h:551 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = long long int; __gnu_cxx::new_allocator<_Tp>::pointer = long long int*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int] (_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv, funcdef_no=2327, decl_uid=42244, cgraph_uid=946, symbol_order=948)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 34(l0): point = 0
   Insn 33(l0): point = 2
   Insn 29(l0): point = 4
   Insn 26(l0): point = 6
   Insn 25(l0): point = 8
   Insn 24(l0): point = 10
   Insn 23(l0): point = 12
   Insn 22(l0): point = 14
   Insn 21(l0): point = 16
   Insn 17(l0): point = 19
   Insn 15(l0): point = 22
   Insn 14(l0): point = 24
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 4(l0): point = 38
   Insn 3(l0): point = 40
   Insn 2(l0): point = 42
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r94): [7..8]
 a3(r89): [13..14]
 a4(r93): [15..16]
 a5(r88): [25..26]
 a6(r87): [29..30]
 a7(r92): [35..36]
Compressing live ranges: from 45 to 16 - 35%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r94): [4..5]
 a3(r89): [6..7]
 a4(r93): [8..9]
 a5(r88): [10..11]
 a6(r87): [12..13]
 a7(r92): [14..15]
  regions=1, blocks=5, points=16
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    6:r87  l0     0    5:r88  l0     0    3:r89  l0     0    1:r90  l0     0
    0:r91  l0     0    7:r92  l0     0    4:r93  l0     0    2:r94  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = long long int; __gnu_cxx::new_allocator<_Tp>::pointer = long long int*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={4d} r4={4d,1u} r5={6d,3u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={6d,2u} r18={3d} r19={3d} r20={1d,10u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 293{249d,43u,1e} in 21{18 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 92
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/ext/new_allocator.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) /usr/include/c++/5/ext/new_allocator.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 D.42247+0 S8 A64])
        (reg:DI 1 dx [ D.42247 ])) /usr/include/c++/5/ext/new_allocator.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.42247 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/ext/new_allocator.h:101 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/ext/new_allocator.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv") [flags 0x3]  <function_decl 0x7fdf7c162360 max_size>) [0 max_size S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:101 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 87 [ D.49012 ])
        (reg:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 87 [ D.49012 ])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64]))) /usr/include/c++/5/ext/new_allocator.h:101 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.49012 ])
        (nil)))
(insn 13 12 14 2 (set (reg:QI 88 [ D.49013 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:101 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.49013 ])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:101 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 88 [ D.49013 ])
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) /usr/include/c++/5/ext/new_allocator.h:101 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 17 16 18 3 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7fdf7dc78d80 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:102 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 19)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 93 94
(code_label 19 18 20 4 393 "" [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:DI 93)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:DI 89 [ D.49012 ])
                (ashift:DI (reg:DI 93)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/new_allocator.h:104 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 __n+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg:DI 89 [ D.49012 ])) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.49012 ])
        (nil)))
(call_insn 24 23 25 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fdf7e1eb360 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:104 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 4 (set (reg/f:DI 94)
        (reg:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 94)
            (nil))))
(insn 26 25 29 4 (set (reg/f:DI 90 [ D.49014 ])
        (reg/f:DI 94)) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 29 26 33 4 (set (reg:DI 91 [ <retval> ])
        (reg/f:DI 90 [ D.49014 ])) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.49014 ])
        (nil)))
(insn 33 29 34 4 (set (reg/i:DI 0 ax)
        (reg:DI 91 [ <retval> ])) /usr/include/c++/5/ext/new_allocator.h:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ <retval> ])
        (nil)))
(insn 34 33 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:105 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::move_iterator<_Iterator>::move_iterator(std::move_iterator<_Iterator>::iterator_type) [with _Iterator = long long int*; std::move_iterator<_Iterator>::iterator_type = long long int*] (_ZNSt13move_iteratorIPxEC2ES0_, funcdef_no=2329, decl_uid=46178, cgraph_uid=948, symbol_order=950)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 12(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 3(l0): point = 8
   Insn 2(l0): point = 10
 a0(r87): [3..6]
 a1(r88): [3..4]
Compressing live ranges: from 13 to 2 - 15%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r88): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    0:r87  l0     0    1:r88  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::move_iterator<_Iterator>::move_iterator(std::move_iterator<_Iterator>::iterator_type) [with _Iterator = long long int*; std::move_iterator<_Iterator>::iterator_type = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{21d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_iterator.h:984 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __i+0 S8 A64])
        (reg:DI 4 si [ __i ])) /usr/include/c++/5/bits/stl_iterator.h:984 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __i ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:985 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __i+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:985 89 {*movdi_internal}
     (nil))
(insn 9 8 12 2 (set (mem/f/j:DI (reg/f:DI 87) [0 this_2(D)->_M_current+0 S8 A64])
        (reg/f:DI 88)) /usr/include/c++/5/bits/stl_iterator.h:985 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_DEAD (reg/f:DI 87)
            (nil))))
(insn 12 9 0 2 (const_int 0 [0]) /usr/include/c++/5/bits/stl_iterator.h:985 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<long long int*>; _ForwardIterator = long long int*] (_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_, funcdef_no=2331, decl_uid=46639, cgraph_uid=950, symbol_order=952)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<long long int*>; _ForwardIterator = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 129{100d,29u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __first+0 S8 A128])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_uninitialized.h:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __last+0 S8 A128])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_uninitialized.h:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_uninitialized.h:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 __assignable+0 S1 A8])
        (const_int 1 [0x1])) /usr/include/c++/5/bits/stl_uninitialized.h:120 93 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 __last+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __first+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_") [flags 0x3]  <function_decl 0x7fdf7bae5a20 __uninit_copy>) [0 __uninit_copy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_uninitialized.h:126 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ D.49015 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49015 ])) /usr/include/c++/5/bits/stl_uninitialized.h:126 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49015 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_uninitialized.h:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:127 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; _OI = long long int*] (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_, funcdef_no=2335, decl_uid=46663, cgraph_uid=954, symbol_order=956)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 29(l0): point = 0
   Insn 28(l0): point = 2
   Insn 24(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 4(l0): point = 34
   Insn 3(l0): point = 36
   Insn 2(l0): point = 38
 a0(r90): [3..4]
 a1(r87): [5..6]
 a2(r88): [11..18]
 a3(r89): [13..26]
 a4(r93): [15..16]
 a5(r92): [23..24]
 a6(r91): [31..32]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r87): [2..3]
 a2(r88): [4..5]
 a3(r89): [4..7]
 a4(r93): [4..5]
 a5(r92): [6..7]
 a6(r91): [8..9]
  regions=1, blocks=3, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    1:r87  l0     0    2:r88  l0     2    3:r89  l0     3    0:r90  l0     0
    6:r91  l0     0    5:r92  l0     0    4:r93  l0     0
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; _OI = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={5d,5u} r1={5d,2u} r2={4d} r4={5d,2u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,8u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 284{248d,36u,0e} in 20{17 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_algobase.h:462 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_algobase.h:462 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_algobase.h:462 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_") [flags 0x3]  <function_decl 0x7fdf7baf5438 __miter_base>) [0 __miter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:471 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 89 [ D.47953 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 92)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_") [flags 0x3]  <function_decl 0x7fdf7baf5438 __miter_base>) [0 __miter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:471 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 88 [ D.47954 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg:DI 89 [ D.47953 ])) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.47953 ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 88 [ D.47954 ])) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.47954 ])
        (nil)))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_") [flags 0x3]  <function_decl 0x7fdf7baf5a20 __copy_move_a2>) [0 __copy_move_a2 S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:472 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 21 20 24 2 (set (reg/f:DI 87 [ D.49016 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 21 28 2 (set (reg:DI 90 [ <retval> ])
        (reg/f:DI 87 [ D.49016 ])) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49016 ])
        (nil)))
(insn 28 24 29 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:473 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 29 28 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:473 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; bool _HasBase = false; std::_Iter_base<_Iterator, _HasBase>::iterator_type = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >] (_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb0EE7_S_baseES6_, funcdef_no=2336, decl_uid=46535, cgraph_uid=955, symbol_order=957)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; bool _HasBase = false; std::_Iter_base<_Iterator, _HasBase>::iterator_type = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:215 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:DI 87 [ D.48158 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg:DI 87 [ D.48158 ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.48158 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Niter_base<_Iterator>::iterator_type = long long int*] (_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_, funcdef_no=2337, decl_uid=46687, cgraph_uid=956, symbol_order=958)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [11..12]
Compressing live ranges: from 17 to 6 - 35%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; typename std::_Niter_base<_Iterator>::iterator_type = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 114{96d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_algobase.h:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_") [flags 0x3]  <function_decl 0x7fdf7baa31b0 _S_base>) [0 _S_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:283 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 12 2 (set (reg/f:DI 87 [ D.49017 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 9 16 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49017 ])) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49017 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:283 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = true; _II = long long int*; _OI = long long int*] (_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_, funcdef_no=2338, decl_uid=46692, cgraph_uid=957, symbol_order=959)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = true; _II = long long int*; _OI = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 129{100d,29u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_algobase.h:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_algobase.h:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_algobase.h:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 __simple+0 S1 A8])
        (const_int 1 [0x1])) /usr/include/c++/5/bits/stl_algobase.h:399 93 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_") [flags 0x3]  <function_decl 0x7fdf7bafad80 __copy_m>) [0 __copy_m S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:402 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ D.49018 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49018 ])) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49018 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:403 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:403 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = char] (_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_, funcdef_no=2339, decl_uid=46701, cgraph_uid=958, symbol_order=960)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = char]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 38{23d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __ptr+0 S8 A64])
        (reg:DI 5 di [ __ptr ])) /usr/include/c++/5/ext/type_traits.h:150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __ptr ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __ptr+0 S8 A64])
            (const_int 0 [0]))) /usr/include/c++/5/ext/type_traits.h:151 4 {*cmpdi_ccno_1}
     (nil))
(insn 7 6 10 2 (set (reg:QI 87 [ D.49019 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) /usr/include/c++/5/ext/type_traits.h:151 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 10 7 14 2 (set (reg:QI 88 [ <retval> ])
        (reg:QI 87 [ D.49019 ])) /usr/include/c++/5/ext/type_traits.h:151 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ D.49019 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:QI 0 ax)
        (reg:QI 88 [ <retval> ])) /usr/include/c++/5/ext/type_traits.h:151 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:QI 0 ax)) /usr/include/c++/5/ext/type_traits.h:151 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*; typename std::iterator_traits<_Iterator>::difference_type = long int] (_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_, funcdef_no=2340, decl_uid=46704, cgraph_uid=959, symbol_order=961)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best SIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 32(l0): point = 0
   Insn 29(l0): point = 3
   Insn 28(l0): point = 6
   Insn 27(l0): point = 8
   Insn 26(l0): point = 10
   Insn 22(l0): point = 12
   Insn 19(l0): point = 14
   Insn 18(l0): point = 16
   Insn 17(l0): point = 18
   Insn 16(l0): point = 20
   Insn 15(l0): point = 22
   Insn 14(l0): point = 24
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 5(l0): point = 38
   Insn 3(l0): point = 40
   Insn 2(l0): point = 42
 a0(r90): [11..12]
 a1(r88): [13..14]
 a2(r87): [21..30]
 a3(r92): [23..28]
 a4(r89): [25..44]
 a5(r91): [35..36]
Compressing live ranges: from 45 to 8 - 17%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r88): [2..3]
 a2(r87): [4..5]
 a3(r92): [4..5]
 a4(r89): [4..7]
 a5(r91): [6..7]
  regions=1, blocks=5, points=8
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    2:r87  l0     0    1:r88  l0     0    4:r89  l0     3    0:r90  l0     0
    5:r91  l0     0    3:r92  l0     1
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*; typename std::iterator_traits<_Iterator>::difference_type = long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r4={5d,2u} r5={6d,3u} r6={1d,4u} r7={4d,13u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={8d,1u} r18={3d} r19={3d} r20={1d,11u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 298{252d,46u,0e} in 21{18 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 90 91 92
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.49022+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:114 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 10 9 11 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_") [flags 0x3]  <function_decl 0x7fdf7bb03510 __iterator_category>) [0 __iterator_category S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:QI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 87 [ D.49020 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:117 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 14 13 15 2 (set (mem:QI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S1 A8])
        (reg:QI 89 [ D.47843 ])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 67 {*pushqi2_rex64}
     (expr_list:REG_DEAD (reg:QI 89 [ D.47843 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.49020 ])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49020 ])
        (nil)))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag") [flags 0x3]  <function_decl 0x7fdf7bb03870 __distance>) [0 __distance S1 A8])
            (const_int 16 [0x10]))) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 19 18 22 2 (set (reg:DI 88 [ D.49021 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 22 19 26 2 (set (reg:DI 90 [ <retval> ])
        (reg:DI 88 [ D.49021 ])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.49021 ])
        (nil)))
(insn 26 22 27 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:119 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 27 26 28 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.49022+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:119 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 28 27 34 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:119 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 31)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 34 28 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 29 34 30 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fdf7b7aea20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:119 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 30 29 31)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 31 30 35 4 410 "" [1 uses])
(note 35 31 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 35 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:119 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = long long int; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int] (_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv, funcdef_no=2348, decl_uid=42252, cgraph_uid=967, symbol_order=969)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = long long int; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 35{22d,13u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/ext/new_allocator.h:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:DI 87 [ D.49023 ])
        (const_int 2305843009213693951 [0x1fffffffffffffff])) /usr/include/c++/5/ext/new_allocator.h:114 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg:DI 87 [ D.49023 ])) /usr/include/c++/5/ext/new_allocator.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.49023 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/ext/new_allocator.h:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:114 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<long long int*>; _ForwardIterator = long long int*] (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_, funcdef_no=2349, decl_uid=47002, cgraph_uid=968, symbol_order=970)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 23(l0): point = 0
   Insn 22(l0): point = 2
   Insn 18(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 8(l0): point = 20
   Insn 4(l0): point = 22
   Insn 3(l0): point = 24
   Insn 2(l0): point = 26
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 29 to 6 - 20%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<long long int*>; _ForwardIterator = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 128{100d,28u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_uninitialized.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_uninitialized.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_uninitialized.h:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 90)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_") [flags 0x3]  <function_decl 0x7fdf7bb0ad80 copy>) [0 copy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_uninitialized.h:93 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 15 14 18 2 (set (reg/f:DI 87 [ D.49024 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 15 22 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49024 ])) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49024 ])
        (nil)))
(insn 22 18 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_uninitialized.h:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 23 22 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_uninitialized.h:93 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename std::_Miter_base<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >] (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_, funcdef_no=2353, decl_uid=47037, cgraph_uid=972, symbol_order=974)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [11..12]
Compressing live ranges: from 17 to 6 - 35%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename std::_Miter_base<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 114{96d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_algobase.h:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_") [flags 0x3]  <function_decl 0x7fdf7baf5360 _S_base>) [0 _S_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:294 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 12 2 (set (reg:DI 87 [ D.47957 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 9 16 2 (set (reg:DI 88 [ <retval> ])
        (reg:DI 87 [ D.47957 ])) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.47957 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:294 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; _OI = long long int*] (_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_, funcdef_no=2354, decl_uid=47043, cgraph_uid=973, symbol_order=975)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best AD_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r87,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 32(l0): point = 0
   Insn 31(l0): point = 2
   Insn 27(l0): point = 4
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 21(l0): point = 12
   Insn 20(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 14(l0): point = 26
   Insn 13(l0): point = 28
   Insn 12(l0): point = 30
   Insn 11(l0): point = 32
   Insn 10(l0): point = 34
   Insn 9(l0): point = 36
   Insn 8(l0): point = 38
   Insn 4(l0): point = 40
   Insn 3(l0): point = 42
   Insn 2(l0): point = 44
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r89): [11..16]
 a3(r88): [13..24]
 a4(r87): [15..32]
 a5(r94): [21..22]
 a6(r93): [29..30]
 a7(r92): [37..38]
Compressing live ranges: from 47 to 12 - 25%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r89): [4..5]
 a3(r88): [4..7]
 a4(r87): [4..9]
 a5(r94): [6..7]
 a6(r93): [8..9]
 a7(r92): [10..11]
  regions=1, blocks=3, points=12
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    4:r87  l0    41    3:r88  l0     3    2:r89  l0     0    1:r90  l0     0
    0:r91  l0     0    7:r92  l0     0    6:r93  l0     0    5:r94  l0     0
+++Costs: overall -8, reg -8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; _OI = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={6d,6u} r1={6d,2u} r2={5d} r4={6d,2u} r5={9d,5u} r6={1d,2u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={4d} r18={4d} r19={4d} r20={1d,8u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 362{322d,40u,0e} in 23{19 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_algobase.h:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_algobase.h:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_algobase.h:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_") [flags 0x3]  <function_decl 0x7fdf7bb16ca8 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:438 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 87 [ D.49025 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 93)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_") [flags 0x3]  <function_decl 0x7fdf7bb16360 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:438 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 88 [ D.49026 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 94)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 94)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_") [flags 0x3]  <function_decl 0x7fdf7bb16360 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:438 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 89 [ D.49026 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ D.49025 ])) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49025 ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.49026 ])) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.49026 ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.49026 ])) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.49026 ])
        (nil)))
(call_insn 23 22 24 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_") [flags 0x3]  <function_decl 0x7fdf7bb240d8 __copy_move_a>) [0 __copy_move_a S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:440 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 24 23 27 2 (set (reg/f:DI 90 [ D.49025 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 27 24 31 2 (set (reg:DI 91 [ <retval> ])
        (reg/f:DI 90 [ D.49025 ])) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.49025 ])
        (nil)))
(insn 31 27 32 2 (set (reg/i:DI 0 ax)
        (reg:DI 91 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:441 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ <retval> ])
        (nil)))
(insn 32 31 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:441 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static std::_Iter_base<_Iterator, true>::iterator_type std::_Iter_base<_Iterator, true>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; std::_Iter_base<_Iterator, true>::iterator_type = long long int*] (_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_, funcdef_no=2355, decl_uid=46683, cgraph_uid=974, symbol_order=976)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 2(l0): point = 16
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r87): [7..8]
 a3(r90): [13..14]
Compressing live ranges: from 19 to 8 - 42%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r87): [4..5]
 a3(r90): [6..7]
  regions=1, blocks=3, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0    3:r90  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static std::_Iter_base<_Iterator, true>::iterator_type std::_Iter_base<_Iterator, true>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; std::_Iter_base<_Iterator, true>::iterator_type = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 117{98d,19u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv") [flags 0x3]  <function_decl 0x7fdf7be510d8 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 87 [ D.49027 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 13 2 (set (reg/f:DI 88 [ D.49028 ])
        (mem/f:DI (reg/f:DI 87 [ D.49027 ]) [0 *_3+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49027 ])
        (nil)))
(insn 13 10 17 2 (set (reg:DI 89 [ <retval> ])
        (reg/f:DI 88 [ D.49028 ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.49028 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = long long int; bool _IsMove = true] (_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_, funcdef_no=2356, decl_uid=47086, cgraph_uid=975, symbol_order=977)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best DREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a2(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 37(l0): point = 0
   Insn 36(l0): point = 2
   Insn 32(l0): point = 4
   Insn 29(l0): point = 6
   Insn 28(l0): point = 8
   Insn 27(l0): point = 10
   Insn 26(l0): point = 12
   Insn 23(l0): point = 15
   Insn 22(l0): point = 17
   Insn 21(l0): point = 19
   Insn 20(l0): point = 21
   Insn 19(l0): point = 23
   Insn 18(l0): point = 25
   Insn 17(l0): point = 27
   Insn 16(l0): point = 29
   Insn 14(l0): point = 32
   Insn 13(l0): point = 34
   Insn 12(l0): point = 36
   Insn 11(l0): point = 38
   Insn 10(l0): point = 40
   Insn 9(l0): point = 42
   Insn 8(l0): point = 44
   Insn 4(l0): point = 46
   Insn 3(l0): point = 48
   Insn 2(l0): point = 50
 a0(r95): [3..4]
 a1(r94): [5..6]
 a2(r99): [7..8]
 a3(r93): [7..10]
 a4(r92): [11..12]
 a5(r98): [18..23]
 a6(r97): [20..25]
 a7(r91): [22..27]
 a8(r90): [28..29]
 a9(r96): [37..38]
 a10(r89): [39..40]
 a11(r88): [41..42]
 a12(r87): [41..44]
Compressing live ranges: from 53 to 18 - 33%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r94): [2..3]
 a2(r99): [4..5]
 a3(r93): [4..5]
 a4(r92): [6..7]
 a5(r98): [8..9]
 a6(r97): [8..9]
 a7(r91): [8..9]
 a8(r90): [10..11]
 a9(r96): [12..13]
 a10(r89): [14..15]
 a11(r88): [16..17]
 a12(r87): [16..17]
  regions=1, blocks=5, points=18
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
   12:r87  l0     1   11:r88  l0     0   10:r89  l0     0    8:r90  l0     0
    7:r91  l0     1    4:r92  l0     0    3:r93  l0     1    1:r94  l0     0
    0:r95  l0     0    9:r96  l0     0    6:r97  l0     2    5:r98  l0     0
    2:r99  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = long long int; bool _IsMove = true]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={7d,1u} r18={1d} r19={1d} r20={1d,16u,1e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 167{114d,50u,3e} in 25{24 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 96
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_algobase.h:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_algobase.h:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_algobase.h:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 87 [ D.49029 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:382 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 88 [ D.49029 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:382 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 89 [ D.49029 ])
                (minus:DI (reg:DI 87 [ D.49029 ])
                    (reg:DI 88 [ D.49029 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:382 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.49029 ])
        (expr_list:REG_DEAD (reg:DI 87 [ D.49029 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 96)
                (ashiftrt:DI (reg:DI 89 [ D.49029 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:382 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.49029 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:DI (reg:DI 89 [ D.49029 ])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 _Num+0 S8 A64])
        (reg:DI 96)) /usr/include/c++/5/bits/stl_algobase.h:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 _Num+0 S8 A64])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:383 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) /usr/include/c++/5/bits/stl_algobase.h:383 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 97 98
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 90 [ D.49030 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 _Num+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 91 [ D.49030 ])
                (ashift:DI (reg:DI 90 [ D.49030 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:384 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.49030 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 3 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 1 dx)
        (reg:DI 91 [ D.49030 ])) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ D.49030 ])
        (nil)))
(insn 21 20 22 3 (set (reg:DI 4 si)
        (reg:DI 97)) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 98)) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 23 22 24 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7fdf7e1441b0 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:384 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 92 93 94 95 99
(code_label 24 23 25 4 422 "" [1 uses])
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg:DI 92 [ D.49030 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 _Num+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:385 89 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 93 [ D.49030 ])
                (ashift:DI (reg:DI 92 [ D.49030 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:385 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.49030 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:385 89 {*movdi_internal}
     (nil))
(insn 29 28 32 4 (parallel [
            (set (reg/f:DI 94 [ D.49031 ])
                (plus:DI (reg:DI 93 [ D.49030 ])
                    (reg/f:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:385 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_DEAD (reg:DI 93 [ D.49030 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])
                        (reg:DI 93 [ D.49030 ]))
                    (nil))))))
(insn 32 29 36 4 (set (reg:DI 95 [ <retval> ])
        (reg/f:DI 94 [ D.49031 ])) /usr/include/c++/5/bits/stl_algobase.h:385 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.49031 ])
        (nil)))
(insn 36 32 37 4 (set (reg/i:DI 0 ax)
        (reg:DI 95 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:386 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95 [ <retval> ])
        (nil)))
(insn 37 36 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:386 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = char*; typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag] (_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_, funcdef_no=2357, decl_uid=47092, cgraph_uid=976, symbol_order=978)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:3

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 8(l0): point = 4
   Insn 2(l0): point = 6
 a0(r88): [3..4]
 a1(r87): [5..8]
Compressing live ranges: from 9 to 4 - 44%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = char*; typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1u} r88={1d,1u} 
;;    total ref usage 34{21d,13u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 D.47093+0 S8 A64])
        (reg:DI 5 di [ D.47093 ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ D.47093 ])
        (nil)))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 3 12 2 (set (reg:QI 88 [ <retval> ])
        (reg:QI 87 [ D.47847 ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:205 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ D.47847 ])
        (nil)))
(insn 12 8 13 2 (set (reg/i:QI 0 ax)
        (reg:QI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:205 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ <retval> ])
        (nil)))
(insn 13 12 0 2 (use (reg/i:QI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_types.h:205 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = char*; typename std::iterator_traits<_Iterator>::difference_type = long int] (_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag, funcdef_no=2358, decl_uid=47095, cgraph_uid=977, symbol_order=979)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r88): [7..8]
 a3(r87): [7..10]
Compressing live ranges: from 17 to 6 - 35%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r88): [4..5]
 a3(r87): [4..5]
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    3:r87  l0     1    2:r88  l0     0    1:r89  l0     0    0:r90  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = char*; typename std::iterator_traits<_Iterator>::difference_type = long int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 44{25d,19u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 87 88 89 90
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 87 [ D.49032 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:96 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88 [ D.49032 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:96 89 {*movdi_internal}
     (nil))
(insn 9 8 12 2 (parallel [
            (set (reg:DI 89 [ D.49033 ])
                (minus:DI (reg:DI 87 [ D.49032 ])
                    (reg:DI 88 [ D.49032 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:96 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.49032 ])
        (expr_list:REG_DEAD (reg:DI 87 [ D.49032 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 12 9 16 2 (set (reg:DI 90 [ <retval> ])
        (reg:DI 89 [ D.49033 ])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:96 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.49033 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:97 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_funcs.h:97 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::copy(_II, _II, _OI) [with _II = std::move_iterator<long long int*>; _OI = long long int*] (_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_, funcdef_no=2362, decl_uid=47123, cgraph_uid=981, symbol_order=983)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 29(l0): point = 0
   Insn 28(l0): point = 2
   Insn 24(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 4(l0): point = 34
   Insn 3(l0): point = 36
   Insn 2(l0): point = 38
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r88): [11..18]
 a3(r87): [13..26]
 a4(r93): [15..16]
 a5(r92): [23..24]
 a6(r91): [31..32]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r88): [4..5]
 a3(r87): [4..7]
 a4(r93): [4..5]
 a5(r92): [6..7]
 a6(r91): [8..9]
  regions=1, blocks=3, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    3:r87  l0     3    2:r88  l0     2    1:r89  l0     0    0:r90  l0     0
    6:r91  l0     0    5:r92  l0     0    4:r93  l0     0
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::copy(_II, _II, _OI) [with _II = std::move_iterator<long long int*>; _OI = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={5d,5u} r1={5d,2u} r2={4d} r4={5d,2u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,8u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 284{248d,36u,0e} in 20{17 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_algobase.h:462 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_algobase.h:462 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_algobase.h:462 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_") [flags 0x3]  <function_decl 0x7fdf7bb29ca8 __miter_base>) [0 __miter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:471 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 87 [ D.49034 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 92)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __first+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_") [flags 0x3]  <function_decl 0x7fdf7bb29ca8 __miter_base>) [0 __miter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:471 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 88 [ D.49034 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:471 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.49034 ])) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49034 ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.49034 ])) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.49034 ])
        (nil)))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_") [flags 0x3]  <function_decl 0x7fdf7bb311b0 __copy_move_a2>) [0 __copy_move_a2 S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:472 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 21 20 24 2 (set (reg/f:DI 89 [ D.49034 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 21 28 2 (set (reg:DI 90 [ <retval> ])
        (reg/f:DI 89 [ D.49034 ])) /usr/include/c++/5/bits/stl_algobase.h:472 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.49034 ])
        (nil)))
(insn 28 24 29 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:473 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 29 28 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:473 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; bool _HasBase = false; std::_Iter_base<_Iterator, _HasBase>::iterator_type = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >] (_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_, funcdef_no=2363, decl_uid=47033, cgraph_uid=982, symbol_order=984)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; bool _HasBase = false; std::_Iter_base<_Iterator, _HasBase>::iterator_type = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:215 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:DI 87 [ D.47959 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg:DI 87 [ D.47959 ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.47959 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename std::_Niter_base<_Iterator>::iterator_type = const long long int*] (_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_, funcdef_no=2364, decl_uid=47151, cgraph_uid=983, symbol_order=985)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [11..12]
Compressing live ranges: from 17 to 6 - 35%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; typename std::_Niter_base<_Iterator>::iterator_type = const long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 114{96d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_algobase.h:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_") [flags 0x3]  <function_decl 0x7fdf7bb16288 _S_base>) [0 _S_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:283 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 12 2 (set (reg/f:DI 87 [ D.49035 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 9 16 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49035 ])) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49035 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:283 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = long long int*; typename std::_Niter_base<_Iterator>::iterator_type = long long int*] (_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_, funcdef_no=2365, decl_uid=47169, cgraph_uid=984, symbol_order=986)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [11..12]
Compressing live ranges: from 17 to 6 - 35%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = long long int*; typename std::_Niter_base<_Iterator>::iterator_type = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 114{96d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_algobase.h:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_") [flags 0x3]  <function_decl 0x7fdf7bb16bd0 _S_base>) [0 _S_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:283 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 12 2 (set (reg/f:DI 87 [ D.49036 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 9 16 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49036 ])) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49036 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:283 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:283 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const long long int*; _OI = long long int*] (_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_, funcdef_no=2366, decl_uid=47171, cgraph_uid=985, symbol_order=987)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const long long int*; _OI = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 129{100d,29u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_algobase.h:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_algobase.h:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_algobase.h:391 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 __simple+0 S1 A8])
        (const_int 1 [0x1])) /usr/include/c++/5/bits/stl_algobase.h:399 93 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_") [flags 0x3]  <function_decl 0x7fdf7bb345e8 __copy_m>) [0 __copy_m S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:402 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ D.49037 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49037 ])) /usr/include/c++/5/bits/stl_algobase.h:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49037 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:403 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:403 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = std::move_iterator<long long int*>; typename std::_Miter_base<_Iterator>::iterator_type = long long int*] (_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_, funcdef_no=2367, decl_uid=47210, cgraph_uid=986, symbol_order=988)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [11..12]
Compressing live ranges: from 17 to 6 - 35%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = std::move_iterator<long long int*>; typename std::_Miter_base<_Iterator>::iterator_type = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 114{96d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_algobase.h:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_") [flags 0x3]  <function_decl 0x7fdf7bb29bd0 _S_base>) [0 _S_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:294 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 12 2 (set (reg/f:DI 87 [ D.49038 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 9 16 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49038 ])) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49038 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:294 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = true; _II = long long int*; _OI = long long int*] (_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_, funcdef_no=2368, decl_uid=47214, cgraph_uid=987, symbol_order=989)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best AD_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r87,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 32(l0): point = 0
   Insn 31(l0): point = 2
   Insn 27(l0): point = 4
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 21(l0): point = 12
   Insn 20(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 14(l0): point = 26
   Insn 13(l0): point = 28
   Insn 12(l0): point = 30
   Insn 11(l0): point = 32
   Insn 10(l0): point = 34
   Insn 9(l0): point = 36
   Insn 8(l0): point = 38
   Insn 4(l0): point = 40
   Insn 3(l0): point = 42
   Insn 2(l0): point = 44
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r89): [11..16]
 a3(r88): [13..24]
 a4(r87): [15..32]
 a5(r94): [21..22]
 a6(r93): [29..30]
 a7(r92): [37..38]
Compressing live ranges: from 47 to 12 - 25%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r89): [4..5]
 a3(r88): [4..7]
 a4(r87): [4..9]
 a5(r94): [6..7]
 a6(r93): [8..9]
 a7(r92): [10..11]
  regions=1, blocks=3, points=12
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    4:r87  l0    41    3:r88  l0     3    2:r89  l0     0    1:r90  l0     0
    0:r91  l0     0    7:r92  l0     0    6:r93  l0     0    5:r94  l0     0
+++Costs: overall -8, reg -8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = true; _II = long long int*; _OI = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={6d,6u} r1={6d,2u} r2={5d} r4={6d,2u} r5={9d,5u} r6={1d,2u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={4d} r18={4d} r19={4d} r20={1d,8u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 362{322d,40u,0e} in 23{19 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_algobase.h:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_algobase.h:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_algobase.h:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 92)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_") [flags 0x3]  <function_decl 0x7fdf7bb16ca8 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:438 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 87 [ D.49039 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __last+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 93)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_") [flags 0x3]  <function_decl 0x7fdf7bb16ca8 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:438 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 88 [ D.49039 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 94)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_") [flags 0x3]  <function_decl 0x7fdf7bb16ca8 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:438 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 89 [ D.49039 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ D.49039 ])) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49039 ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.49039 ])) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.49039 ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.49039 ])) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.49039 ])
        (nil)))
(call_insn 23 22 24 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_") [flags 0x3]  <function_decl 0x7fdf7baa3798 __copy_move_a>) [0 __copy_move_a S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:440 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 24 23 27 2 (set (reg/f:DI 90 [ D.49039 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 27 24 31 2 (set (reg:DI 91 [ <retval> ])
        (reg/f:DI 90 [ D.49039 ])) /usr/include/c++/5/bits/stl_algobase.h:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.49039 ])
        (nil)))
(insn 31 27 32 2 (set (reg/i:DI 0 ax)
        (reg:DI 91 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:441 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ <retval> ])
        (nil)))
(insn 32 31 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:441 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static std::_Iter_base<_Iterator, true>::iterator_type std::_Iter_base<_Iterator, true>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; std::_Iter_base<_Iterator, true>::iterator_type = const long long int*] (_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_, funcdef_no=2369, decl_uid=47147, cgraph_uid=988, symbol_order=990)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 2(l0): point = 16
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r87): [7..8]
 a3(r90): [13..14]
Compressing live ranges: from 19 to 8 - 42%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r87): [4..5]
 a3(r90): [6..7]
  regions=1, blocks=3, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0    3:r90  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static std::_Iter_base<_Iterator, true>::iterator_type std::_Iter_base<_Iterator, true>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const long long int*, std::vector<long long int> >; std::_Iter_base<_Iterator, true>::iterator_type = const long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 117{98d,19u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 90)) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv") [flags 0x3]  <function_decl 0x7fdf7be5da20 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 87 [ D.49040 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 13 2 (set (reg/f:DI 88 [ D.49041 ])
        (mem/f:DI (reg/f:DI 87 [ D.49040 ]) [0 *_3+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49040 ])
        (nil)))
(insn 13 10 17 2 (set (reg:DI 89 [ <retval> ])
        (reg/f:DI 88 [ D.49041 ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.49041 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = long long int*; bool _HasBase = false; std::_Iter_base<_Iterator, _HasBase>::iterator_type = long long int*] (_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_, funcdef_no=2370, decl_uid=47165, cgraph_uid=989, symbol_order=991)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = long long int*; bool _HasBase = false; std::_Iter_base<_Iterator, _HasBase>::iterator_type = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:215 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ D.49042 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __it+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 89 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49042 ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49042 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_types.h:216 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = long long int; bool _IsMove = false] (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_, funcdef_no=2371, decl_uid=47252, cgraph_uid=990, symbol_order=992)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best DREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a2(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 37(l0): point = 0
   Insn 36(l0): point = 2
   Insn 32(l0): point = 4
   Insn 29(l0): point = 6
   Insn 28(l0): point = 8
   Insn 27(l0): point = 10
   Insn 26(l0): point = 12
   Insn 23(l0): point = 15
   Insn 22(l0): point = 17
   Insn 21(l0): point = 19
   Insn 20(l0): point = 21
   Insn 19(l0): point = 23
   Insn 18(l0): point = 25
   Insn 17(l0): point = 27
   Insn 16(l0): point = 29
   Insn 14(l0): point = 32
   Insn 13(l0): point = 34
   Insn 12(l0): point = 36
   Insn 11(l0): point = 38
   Insn 10(l0): point = 40
   Insn 9(l0): point = 42
   Insn 8(l0): point = 44
   Insn 4(l0): point = 46
   Insn 3(l0): point = 48
   Insn 2(l0): point = 50
 a0(r95): [3..4]
 a1(r94): [5..6]
 a2(r99): [7..8]
 a3(r93): [7..10]
 a4(r92): [11..12]
 a5(r98): [18..23]
 a6(r97): [20..25]
 a7(r91): [22..27]
 a8(r90): [28..29]
 a9(r96): [37..38]
 a10(r89): [39..40]
 a11(r88): [41..42]
 a12(r87): [41..44]
Compressing live ranges: from 53 to 18 - 33%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r94): [2..3]
 a2(r99): [4..5]
 a3(r93): [4..5]
 a4(r92): [6..7]
 a5(r98): [8..9]
 a6(r97): [8..9]
 a7(r91): [8..9]
 a8(r90): [10..11]
 a9(r96): [12..13]
 a10(r89): [14..15]
 a11(r88): [16..17]
 a12(r87): [16..17]
  regions=1, blocks=5, points=18
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
   12:r87  l0     1   11:r88  l0     0   10:r89  l0     0    8:r90  l0     0
    7:r91  l0     1    4:r92  l0     0    3:r93  l0     1    1:r94  l0     0
    0:r95  l0     0    9:r96  l0     0    6:r97  l0     2    5:r98  l0     0
    2:r99  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = long long int; bool _IsMove = false]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={7d,1u} r18={1d} r19={1d} r20={1d,16u,1e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 167{114d,50u,3e} in 25{24 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 96
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) /usr/include/c++/5/bits/stl_algobase.h:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) /usr/include/c++/5/bits/stl_algobase.h:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) /usr/include/c++/5/bits/stl_algobase.h:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 87 [ D.49043 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 __last+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:382 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 88 [ D.49043 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:382 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 89 [ D.49043 ])
                (minus:DI (reg:DI 87 [ D.49043 ])
                    (reg:DI 88 [ D.49043 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:382 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.49043 ])
        (expr_list:REG_DEAD (reg:DI 87 [ D.49043 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 96)
                (ashiftrt:DI (reg:DI 89 [ D.49043 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:382 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.49043 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:DI (reg:DI 89 [ D.49043 ])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 _Num+0 S8 A64])
        (reg:DI 96)) /usr/include/c++/5/bits/stl_algobase.h:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 _Num+0 S8 A64])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:383 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) /usr/include/c++/5/bits/stl_algobase.h:383 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 97 98
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 90 [ D.49044 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 _Num+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 91 [ D.49044 ])
                (ashift:DI (reg:DI 90 [ D.49044 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:384 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.49044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 3 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 __first+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 1 dx)
        (reg:DI 91 [ D.49044 ])) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ D.49044 ])
        (nil)))
(insn 21 20 22 3 (set (reg:DI 4 si)
        (reg:DI 97)) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 98)) /usr/include/c++/5/bits/stl_algobase.h:384 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 23 22 24 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x7fdf7e1441b0 __builtin_memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_algobase.h:384 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 92 93 94 95 99
(code_label 24 23 25 4 447 "" [1 uses])
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg:DI 92 [ D.49044 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 _Num+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:385 89 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 93 [ D.49044 ])
                (ashift:DI (reg:DI 92 [ D.49044 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:385 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.49044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])) /usr/include/c++/5/bits/stl_algobase.h:385 89 {*movdi_internal}
     (nil))
(insn 29 28 32 4 (parallel [
            (set (reg/f:DI 94 [ D.49045 ])
                (plus:DI (reg:DI 93 [ D.49044 ])
                    (reg/f:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_algobase.h:385 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_DEAD (reg:DI 93 [ D.49044 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 __result+0 S8 A64])
                        (reg:DI 93 [ D.49044 ]))
                    (nil))))))
(insn 32 29 36 4 (set (reg:DI 95 [ <retval> ])
        (reg/f:DI 94 [ D.49045 ])) /usr/include/c++/5/bits/stl_algobase.h:385 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.49045 ])
        (nil)))
(insn 36 32 37 4 (set (reg/i:DI 0 ax)
        (reg:DI 95 [ <retval> ])) /usr/include/c++/5/bits/stl_algobase.h:386 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95 [ <retval> ])
        (nil)))
(insn 37 36 0 4 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_algobase.h:386 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static std::_Iter_base<_Iterator, true>::iterator_type std::_Iter_base<_Iterator, true>::_S_base(_Iterator) [with _Iterator = std::move_iterator<long long int*>; std::_Iter_base<_Iterator, true>::iterator_type = long long int*] (_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_, funcdef_no=2372, decl_uid=47206, cgraph_uid=991, symbol_order=993)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [11..12]
Compressing live ranges: from 17 to 6 - 35%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static std::_Iter_base<_Iterator, true>::iterator_type std::_Iter_base<_Iterator, true>::_S_base(_Iterator) [with _Iterator = std::move_iterator<long long int*>; std::_Iter_base<_Iterator, true>::iterator_type = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 115{97d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 __it+0 S8 A128])
        (reg:DI 5 di [ __it ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (parallel [
            (set (reg:DI 89)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt13move_iteratorIPxE4baseEv") [flags 0x3]  <function_decl 0x7fdf7ba046c0 base>) [0 base S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 12 2 (set (reg/f:DI 87 [ D.49046 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 9 16 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49046 ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49046 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator_base_types.h:224 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::move_iterator<_Iterator>::iterator_type std::move_iterator<_Iterator>::base() const [with _Iterator = long long int*; std::move_iterator<_Iterator>::iterator_type = long long int*] (_ZNKSt13move_iteratorIPxE4baseEv, funcdef_no=2373, decl_uid=46136, cgraph_uid=992, symbol_order=994)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [7..8]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::move_iterator<_Iterator>::iterator_type std::move_iterator<_Iterator>::base() const [with _Iterator = long long int*; std::move_iterator<_Iterator>::iterator_type = long long int*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 38{23d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/c++/5/bits/stl_iterator.h:992 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:993 89 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (set (reg/f:DI 87 [ D.49047 ])
        (mem/f/j:DI (reg/f:DI 89) [0 this_2(D)->_M_current+0 S8 A64])) /usr/include/c++/5/bits/stl_iterator.h:993 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 10 7 14 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 87 [ D.49047 ])) /usr/include/c++/5/bits/stl_iterator.h:993 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.49047 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) /usr/include/c++/5/bits/stl_iterator.h:993 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 0 ax)) /usr/include/c++/5/bits/stl_iterator.h:993 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=2374, decl_uid=47282, cgraph_uid=993, symbol_order=1053)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 24(l0): point = 1
   Insn 18(l0): point = 4
   Insn 17(l0): point = 6
   Insn 16(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 11(l0): point = 17
   Insn 10(l0): point = 19
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
Compressing live ranges: from 31 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=7, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,6u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,5u} r17={4d,2u} r18={2d} r19={2d} r20={1d,10u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 206{169d,37u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) intcode.cpp:206 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ __initialize_p ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) intcode.cpp:206 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __priority ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) intcode.cpp:206 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) intcode.cpp:206 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) intcode.cpp:206 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) intcode.cpp:206 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7fdf7c6c37e0 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7fdf7c9df510 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7fdf7bb43630 __dso_handle>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7fdf7c6c37e0 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7fdf7c9df6c0 __comp_dtor >)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7fdf7bb5e360 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 18 23 6 455 "" [2 uses])
(note 23 25 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 21 6 (const_int 0 [0]) intcode.cpp:206 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 24 22 5 453 "" [0 uses])
(note 22 21 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function (static initializers for intcode.cpp) (_GLOBAL__sub_I__ZN7IntCodeC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb, funcdef_no=2375, decl_uid=47291, cgraph_uid=994, symbol_order=1181)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


(static initializers for intcode.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 103{93d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) intcode.cpp:206 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) intcode.cpp:206 90 {*movsi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7fdf7bb5e1b0 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) intcode.cpp:206 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

